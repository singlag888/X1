<?php
if (!defined('IN_LIGHT')) {
    die('KCAH');
}

/**
 * 控制器：支付管理
 */
class payController extends sscController
{
    //方法概览
    public $titles = array(
        'renxinPay' => '仁信支付',
        'renxinBack' => '仁信回调',
        'shunfuPay' => '瞬付支付',
        'shunfuBack' => '瞬付回调',
        'shunbaoPay' => '瞬宝支付',
        'shunbaoBack' => '瞬宝回调',
        'xiongmaoPay' => '熊猫支付',
        'xiongmaoBack' => '熊猫回调',
        'gaotongPay' => '高通支付',
        'gaotongBack' => '高通回调',
        'luoboPay' => '萝卜支付',
        'luoboBack' => '萝卜回调',
        'jinfukaPay' => '金付卡支付',
        'jinfukaBack' => '金付卡回调',
        'zhifuPay' => '智付支付',
        'zhifuBack' => '智付回调',
        'duodebaoPay' => '多得宝支付',
        'duodebaoBack' => '多得宝回调',
        'qicaiPay' => '七彩支付',
        'qicaiBack' => '七彩回调',
        'yifuPay' => '易富支付',
        'yifuBack' => '易富回调',
        'yifutongdaoPay' => '易付通道支付',
        'yifutongdaoBack' => '易付通道回调',
        'kaolaPay' => '考拉支付',
        'kaolaBack' => '考拉回调',
        'wangfutongPay' => '王付通支付',
        'wangfutongBack' => '王付通回调',
        'wanzhongyunPay' => '万众云支付',
        'wanzhongyunBack' => '万众云回调',
        'yftPay' => 'YFT聚合支付',
        'yftBack' => 'YFT聚合回调',
        'huibaotongPay' => '汇宝通支付',
        'huibaotongBack' => '汇宝通回调',
        'xiangjiaoPay' => '香蕉支付',
        'xiangjiaoBack' => '香蕉回调',
        'yibaozhifuPay' => '易宝支付',
        'yibaozhifuBack' => '易宝回调',
        'yunanfuPay' => '云安付支付',
        'yunanfuBack' => '云安付回调',
        'haiouPay' => '海欧支付',
        'haiouBack' => '海欧回调',
        'sankPay' => '3K支付',
        'sankBack' => '3K回调',
        'qingyifuPay' => '轻易支付',
        'qingyifuBack' => '轻易回调',
        'zhitongbaoPay' => '智通宝支付',
        'zhitongbaoBack' => '智通宝回调',
        'ludePay' => '路德支付',
        'ludeBack' => '路德回调',
        'yuyingPay' => '钰盈支付',
        'yuyingBack' => '钰盈回调',
        'yzPay' => 'YZ支付',
        'yzBack' => 'YZ回调',
        'xingyunPay' => '幸运支付',
        'weifutongPay' => '威富通支付',
        'weifutongBack' => '威富通回调',
        'ufuPay' => 'U付支付',
        'ufuBack' => 'U付回调',
        'dingfengPay' => '鼎峰支付',
        'dingfengBack' => '鼎峰回调',
        'dingyiPay' => '鼎易支付',
        'dingyiBack' => '鼎易回调',
        'qianbaobaoPay' => '钱宝宝支付',
        'qianbaobaoBack' => '钱宝宝回调',
        'yiaiPay' => '易爱支付',
        'yiaiBack' => '易爱回调',
        'zshPay' => '泽圣支付',
        'zshBack' => '泽圣回调',
        'zaixianbaoPay' => '在线宝支付',
        'zaixianbaoBack' => '在线宝回调',
        'jieanfuPay' => '捷安付支付',
        'jieanfuBack' => '捷安付回调',
		'xdfPay' => '新鼎峰支付',
        'xdfBack' => '新鼎峰回调',
        'ebaoPay' => 'E宝支付',
        'ebaoBack' => 'E宝回调',
        'xidakejiPay' => '熙大科技支付',
        'xidakejiBack' => '熙大科技回调',
        'tianfubaoPay' => '天付宝支付',
        'tianfubaoBack' => '天付宝回调',
	    'mgPay' => '芒果支付',
        'mgBack' => '芒果回调',
		'yibaotongPay' => '易宝通支付',
        'yibaotongBack' => '易宝通回调',
	    'yunxunPay' => '云讯支付',
        'yunxunBack' => '云讯回调',
	    'caifubaoPay' => '彩富宝支付',
        'caifubaoBack' => '彩富宝回调',
	    'changchengfuPay' => '长城付支付',
        'changchengfuBack' => '长城付回调',
        'jinyinbaoPay'=>'金银宝支付',
        'jinyinbaoBack'=>'金银宝回掉',
        'jialianPay'=>'嘉联支付',
        'jialianBack'=>'嘉联回调',
        'huitongPay'    => '汇通支付',
        'huitongBack'   => '汇通回调',
        'caimaoPay' => '财猫支付',
        'caimaoBack' => '财猫回调',
        'xinfubaoPay' => '信付宝支付',
        'xinfubaoBack' => '信付宝回调',
        'yuanbaoPay' => '元宝支付',
        'yuanbaoBack' => '元宝回调',
        'boshiPay' => '博士支付',
        'boshiBack' => '博士回调',
	 'ydfPay' => '易代付支付',
        'ydfBack' => '易代付回调',
        'yhxfPay' => '盈华讯方支付',
        'yhxfBack' => '盈华讯方回调',
        'xbswPay' => '讯宝商务支付',
        'xbswBack' => '讯宝商务回调',
        'yuebaoPay' => '月宝支付',
        'yuebaoBack' => '月宝回调',
        'zhifuhuiPay' => '支付汇支付',
        'zhifuhuiBack' => '支付汇回调',
        'shiguangfuPay' => '时光付支付',
        'shiguangfuBack' => '时光付回调',
        'ouchuangPay' => '欧创支付',
        'ouchuangBack' => '欧创回调',
        'alaPay' => '啊啦支付',
        'alaBack' => '啊啦回调',
        'mifuPay' => '密付支付',
        'mifuBack' => '密付回调',
        'lwPay' => '梨涡支付',
        'lwBack' => '梨涡回调',
        'lzfPay' => '龙支付支付',
        'lzfBack' => '龙支付回调',
        'zunPay' => '尊支付',
        'zunBack' => '尊回调',
        'xunPay' => '讯付支付',
        'xunBack' => '讯付回调',
        'qbjhPay' => '钱宝聚合支付',
        'qbjhBack' => '钱宝聚合回调',
        'bjhfPay' => '北京海富支付',
        'bjhfBack' => '北京海富回调',
        'wzhPay' => '微支汇支付',
        'wzhBack' => '微支汇回调',
        'ruiyinPay' => '瑞银支付',
        'ruiyinBack' => '瑞银回调',
        'zf32Pay' => '32PAY支付',
        'zf32Back' => '32PAY回调',
        'caihonPay' => '彩虹支付',
        'caihonBack' => '彩虹回调',
        'qianenPay' => '乾恩支付',
        'qianenBack' => '乾恩回调',
        'baishiPay' => '百时支付',
        'baishiBack' => '百时回调',
        'yitongPay' => '易通支付',
        'yitongBack' => '易通回调',
        'huihePay' => '汇合支付',
        'huiheBack' => '汇合回调',
        'tongsaoPay' => '通扫支付',
        'tongsaoBack' => '通扫回调',
        'qiqiPay' => '柒柒支付',
        'qiqiBack' => '柒柒回调',
		'lyPay' => '利盈支付',
		'lyBack' => '利盈回调',
        'jinyangPay' => '金阳支付',
        'jinyangBack' => '金阳回调',
        'F86Pay' => 'F86支付',
        'F86Back' => 'F86回调',
        'sftPay' => '顺付通支付',
        'sftBack' => '顺付通回调',
        'ddPay' => '多多支付',
        'ddBack' => '多多回调',
        'tsPay' => '通扫支付',
        'zhidebaoPay' => '智得宝支付',
        'tsBack' => '通扫回调',
        'zhidebaoBack' => '智得宝回调',
        'qianlongtongPay' => '乾隆通支付',
        'qianlongtongBack' => '乾隆通回调',
        'quanyuPay' => '全宇支付',
        'quanyuBack' => '全宇回调',
        'jlPay' => '嘉联支付',
        'jlBack' => '嘉联回调',
        'kexunPay' => '科迅支付',
        'kexunBack' => '科迅回调',
        'yafuPay' => '雅付支付',
        'yafuBack' => '雅付回调',
        'fukatongPay' => '福卡通支付',
        'fukatongBack' => '福卡通回调',
        'hufuPay' => '琥付支付',
        'hufuBack' => '琥付回调',
        'safePay' => 'SAFE支付',
        'safeBack' => 'SAFE回调',

    );

    public function init()
    {
        parent::init(parent::INIT_TEMPLATE | parent::INIT_SESSION);
    }
    public function jlPay(){
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
        $card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
        $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;
        if (time() > intval($time)) {
            die('交易超时，请刷新充值页面重新充值');
        }
        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));
        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }
        $cards = cards::getItemsById(array($card_id));
        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }
        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');
            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }
            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }
            $card_id = $this->request->getPost('card_id', 'trim');
            $card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
            $shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');
            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];
//            if($deposit_amount < '10'){
//                showMSG("充值金额不能低于￥10元");
//            }
            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }
            $service_type = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['jl_api'];
            if ($cards[$card_id]["netway"] == "WX") {
                $service_type = "902";
            }else if($cards[$card_id]["netway"] == "ZFB"){
                $service_type = "903";
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $service_type = "908";
            } else if ($cards[$card_id]['netway'] == "JD") {
                $service_type = "910";
            } else if ($cards[$card_id]['netway'] == "WX_WAP") {
                $service_type = "901";
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $service_type = "904";
            } else if ($cards[$card_id]['netway'] == "QQ_WAP") {
                $service_type = "905";
            }else if ($cards[$card_id]['netway'] == "JD_WAP") {
                $service_type = "";
            } else if ($cards[$card_id]['netway'] === 'WY') {

            }

            $orderCreateTime = date('Y-m-d H:i:s', time());
            $md5Key = $cards[$card_id]['mer_key'];
            $postData['pay_memberid'] = $cards[$card_id]['mer_no'];//1
            $postData['pay_amount'] = $deposit_amount;//3
            $postData['pay_orderid'] = $shop_order_num;//2
            $postData['pay_bankcode'] = $service_type;//5
            $postData['pay_applydate'] = $orderCreateTime;//4
            $postData['pay_notifyurl'] = $callbackurl;//6
            $postData['pay_callbackurl'] = $returnurl;//7
            $postData['pay_md5sign'] = strtoupper(md5($this->tsSign($postData).'key='.$md5Key));
            $url = $apiUrl;
            $info = array();
            $res = $this->send_post($url, $postData,$info);
            $html = json_decode($res,true);

            if ($html != null ) {
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
                $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );
                if (pay::addItem($data)) {
                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        //header("location:" . $html['codeUrl']);
                        echo $res;
                        die();
                    } else {
                        $jlurl = base64_encode($html['codeUrl']);
                        header("location:" . '../pay/qrcodejl.php?code=' .  $jlurl . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                    }
                }
            } else {
                if ($res == null) {
                    echo '生成订单失败';
                } else {
                    log2file('jlPay.log', $postData);
                    log2file('jlPay.log', $res);
                }
            }
        } else {
            log2file('jlPay.log', $postData);
            log2file('jlPay.log', $res);
            die();
        }
    }
    public function jlBack(){
        $response = file_get_contents('php://input');
        parse_str($response,$resArr);
//        var_dump($response);
//        dd($resArr);
        if ($resArr ===  '') {
            die('参数错误1');
        }
        if (!isset($response)) {
            die('参数错误2');
        }
        if (!isset($resArr['amount'])) {//金额
            die('参数错误3');
        }
        $orderAmount = $resArr['amount'];
        if(!isset($resArr['orderid'])) {//商户生成订单
            die('参数错误4');
        }
        $orderNo = $resArr['orderid'] != null ? $resArr['orderid'] : '';
        if (!isset($resArr['memberid'])){
            die('参数错误5');
        }
        if(!isset($resArr['transaction_id'])){//第三方订单
            die('参数错误6');
        }
        $tradeNo = $resArr['transaction_id'] != null ? $resArr['transaction_id'] : '';
        if (!isset($resArr['datetime'])){
            die('参数错误7');
        }
        if (!isset($resArr['returncode'])){
            die('参数错误8');
        }
        if (!isset($resArr['sign'])){
            die('参数错误9');
        }
        $sign2 = trim($resArr['sign']);
        $card_id = explode("_", $orderNo)[0];
        $card = cards::getItemWithCache($card_id);
        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $res = $this->jlSign($resArr);
        $sign = strtoupper(md5($res.'key='.$card['mer_key']));
        if ($sign == $sign2) {
            $order = pay::getItemByOrderNumber($orderNo);
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->bak('gs4fj@5f!sda*dfuf', 'OK', $orderAmount, $orderNo, $tradeNo, $order);
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }
    public function tsPay(){
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
        $card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
        $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;
        if (time() > intval($time)) {
            die('交易超时，请刷新充值页面重新充值');
        }
        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));
        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }
        $cards = cards::getItemsById(array($card_id));
        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }
        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');
            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }
            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }
            $card_id = $this->request->getPost('card_id', 'trim');
            $card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
            $shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');
            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];
            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }
            $service_type = '';
            if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                $apiUrl = $GLOBALS['cfg']['pay_url']['ts_wap_api'];
            }else{
                $apiUrl = $GLOBALS['cfg']['pay_url']['ts_api'];
            }
            if ($cards[$card_id]["netway"] == "WX") {
                $service_type = "2";
            }else if($cards[$card_id]["netway"] == "ZFB"){
                $service_type = "1";
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $service_type = "4";
            } else if ($cards[$card_id]['netway'] == "JD") {
                $service_type = "5";
            } else if ($cards[$card_id]['netway'] == "WX_WAP") {
                $service_type = "2";
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $service_type = "1";
            } else if ($cards[$card_id]['netway'] == "QQ_WAP") {
                $service_type = "4";
            }else if ($cards[$card_id]['netway'] == "JD_WAP") {
                $service_type = "5";
            } else if ($cards[$card_id]['netway'] === 'WY') {
                $service_type = "gateway";
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                $apiUrl = $GLOBALS['cfg']['pay_url']['ly_api'];
                switch ($third_party_bank_id) {
                    // 工商银行1
                    case '1':
                        $bankId = '102';
                        break;
                    // 农业银行1
                    case '2':
                        $bankId = '103';
                        break;
                    // 建设银行1
                    case '3':
                        $bankId = '105';
                        break;
                    // 招商银行1
                    case '4':
                        $bankId = '308';
                        break;
                    // 交通银行1
                    case '5':
                        $bankId = '301';
                        break;
                    // 中信银行1
                    case '6':
                        $bankId = '302';
                        break;
                    // 邮政储蓄1
                    case '7':
                        $bankId = '403';
                        break;
                    // 中国光大银行1
                    case '8':
                        $bankId = '303';
                        break;
                    // 民生银行1
                    case '9':
                        $bankId = '305';
                        break;
                    // 兴业银行1
                    case '11':
                        $bankId = '309';
                        break;
                    // 广发银行1
                    case '12':
                        $bankId = '306';
                        break;
                    // 中国银行1
                    case '22':
                        $bankId = '104';
                        break;
                }
                $orderCreateTime = date('YmdHis', time());
                $lastPaytime = date('YmdHis', time()+24*60*60);
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
                $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
                $orderCreateTime = date('YmdHis', time());
                $md5Key = $cards[$card_id]['mer_key'];

                $postData['pay_type'] = $service_type;//支付类型2
                $postData['mchno'] = $cards[$card_id]['mer_no'];//商户号1
                $postData['price'] = $deposit_amount;//金额2
                $postData['bill_body'] = '会员充值';//回调地址1
                $postData['nonce_str'] = $shop_order_num;//订单号1
                $postData['bill_title'] = '充值';//订单标题2
                $sign = 'bill_body='.$postData['bill_body'].'&bill_title='.$postData['bill_title'].'&mchno='.$postData['mchno'].'&nonce_str='.$postData['nonce_str'].'&pay_type='.$postData['pay_type'].'&price='.$postData['price'].'&key='.$md5Key;
                $postData['sign'] = strtoupper(md5($sign));
                //提交到接口
                $url = $apiUrl;
                $res = $this->send_post($url, $post);
                dd($res);
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
                $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $postData['down_sn'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );
                if (pay::addItem($data)) {
                    $headerUrl = $res['code_url'];
                    header("location:$headerUrl");
                } else {
                    log2file('mgPay.log', $postData);
                    die('生成订单失败');
                }
                die;
            }

            $orderCreateTime = date('YmdHis', time());
            $md5Key = $cards[$card_id]['mer_key'];
            $postData['merchno'] = $cards[$card_id]['mer_no'];//1
            $postData['amount'] = $deposit_amount;//6
            $postData['traceno'] = $shop_order_num;//4
            $postData['payType'] = $service_type;//7
            $postData['goodsName'] = 'chongzhi';
            $postData['notifyUrl'] = $callbackurl;//3
            $postData['remark'] = 'chongzhi';
            $postData['settleType'] = '1';
            if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                $postData['returnUrl'] = $returnurl;
                $key = array(
                    "merchno",
                    "amount",
                    "traceno",
                    "payType",
                    "goodsName",
                    "notifyUrl",
                    "returnUrl",
                    "remark",
                    "settleType",
                );
            }else {
                $key = array(
                    "merchno",
                    "amount",
                    "traceno",
                    "payType",
                    "goodsName",
                    "notifyUrl",
                    "remark",
                    "settleType",
                );
            }
            $postData['signature'] = md5($this->tsSign($postData).$md5Key);
            $url = $apiUrl;
            $info = array();
            $res = $this->tsCurlPost($url, $postData,$info);
            $html = json_decode(iconv('GBK','UTF-8',$res));

            if ($res != null && $html->respCode == "00") {
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
                $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );
                if (pay::addItem($data)) {
                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        header("location:" . $html->barCode);
                        die();
                    } else {
                        header("location:" . '../pay/qrcode.php?code=' . $html->barCode . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                    }
                }
            } else {
                if ($res == null) {
                    echo '生成订单失败';
                } else {
                    log2file('tsPay.log', $postData);
                    log2file('tsPay.log', $res);
                }
            }
        } else {
            log2file('tsPay.log', $postData);
            log2file('tsPay.log', $res);
            die();
        }
    }
    public function tsBack(){
        $response = file_get_contents('php://input');
        parse_str($response,$resArr);
//        var_dump($response);
//        dd($resArr);
        if ($resArr ===  '') {
            die('参数错误1');
        }
        if (!isset($response)) {
            die('参数错误2');
        }
        if (!isset($resArr['amount'])) {//金额
            die('参数错误3');
        }
        $orderAmount = $resArr['amount'];
        if(!isset($resArr['traceno'])) {//商户生成订单
            die('参数错误4');
        }
        $orderNo = $resArr['traceno'] != null ? $resArr['traceno'] : '';
        if (!isset($resArr['merchno'])){
            die('参数错误5');
        }
        if(!isset($resArr['orderno'])){//第三方订单
            die('参数错误6');
        }
        $tradeNo = $resArr['orderno'] != null ? $resArr['orderno'] : '';
        if (!isset($resArr['remark'])){
            die('参数错误7');
        }
        if (!isset($resArr['status'])){
            die('参数错误8');
        }
        if (!isset($resArr['merchName'])){
            die('参数错误9');
        }
        if (!isset($resArr['transDate'])){
            die('参数错误10');
        }
        if (!isset($resArr['transTime'])){
            die('参数错误11');
        }
        if (!isset($resArr['payType'])){
            die('参数错误12');
        }
        if (!isset($resArr['signature'])){
            die('参数错误13');
        }
        $sign2 = trim($resArr['signature']);
        $card_id = explode("_", $orderNo)[0];
        $card = cards::getItemWithCache($card_id);
        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $res = $this->tsSign($resArr);
        $sign = strtoupper(md5($res.$card['mer_key']));
        if ($sign == $sign2) {
            $order = pay::getItemByOrderNumber($orderNo);
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->bak('gs4fj@5f!sda*dfuf', 'success', $orderAmount, $orderNo, $tradeNo, $order);
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }
    /**
     * a-z 顺序排例
     * @param array $data
     * @return string $str
     * @author L
     */
    public function tsSign($data){
        ksort($data);
        $str = '';
        foreach ($data as $key => $value){
            if(!empty($value) && $key != 'signature'){
            $str .=  $key . "=" .$value . "&";
            }
        }
        return $str;
    }
    public function jlSign($data){
        ksort($data);
        $str = '';
        foreach ($data as $key => $value){
            if(!empty($value) && $key != 'sign'){
                $str .=  $key . "=" .$value . "&";
            }
        }
        return $str;
    }
    public function azSign($data,$key){
        ksort($key);
        $str = '';
        foreach ($key as $v){
            $str .=  $v . "=" . iconv('UTF-8','GBK',$data[$v]) . "&";
        }
        return $str;
    }
    public function tsCurlPost($url, $data,&$info)
    {   foreach ($data as $k => $v){
        $dataGbk[iconv('UTF-8','GBK',$k)] =  iconv('UTF-8','GBK',$v);
        }
        // 模拟提交数据函数
        $header[] = "Content-type: application/x-www-form-urlencoded;charset=GBK";
        $curl = curl_init(); // 启动一个CURL会话
        curl_setopt($curl, CURLOPT_URL, $url); // 要访问的地址
        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, 0); //
        curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 2); //
        curl_setopt($curl, CURLOPT_HTTPHEADER,$header);
        curl_setopt($curl, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows NT 5.1; rv:31.0) Gecko/20100101 Firefox/31.0'); // 模拟用户使用的浏览器
        curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1); // 使用自动跳转
        curl_setopt($curl, CURLOPT_AUTOREFERER, 1); //
        curl_setopt($curl, CURLOPT_POST, 1); // 发送一个常规的Post请求
        curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($data)); // Post提交的数据包
        curl_setopt($curl, CURLOPT_TIMEOUT, 120); // 设置超时限制防止死循环
        curl_setopt($curl, CURLOPT_HEADER, 0); // 显示返回的Header区域内容
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1); // 获取的信息以文件流的形式返回
        //var_dump($data);
        $tmpInfo = curl_exec($curl); // 执行操作
        if (curl_errno($curl)) {
            logdump('CURL Errno' . curl_error($curl)); //捕抓异常
        }
        $info = curl_getinfo($curl);
        curl_close($curl); // 关闭CURL会话
        return $tmpInfo; // 返回数据

    }
    public function ddPay(){
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
        $card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
        $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }
        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;
        if (time() > intval($time)) {
            die('交易超时，请刷新充值页面重新充值');
        }
        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));
        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }
        $cards = cards::getItemsById(array($card_id));
        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }
        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');
            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }
            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }
            $card_id = $this->request->getPost('card_id', 'trim');
            $card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
            $shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');
            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];
            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {
            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }
            $service_type = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['dd_api'];
            if ($cards[$card_id]["netway"] == "WX") {
                $service_type = "WECHATQR";
            }else if($cards[$card_id]["netway"] == "QQ"){
                $service_type = "QQWALLET";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $service_type = "ALIPAYQR";
            }else if ($cards[$card_id]['netway'] == "WX_WAP") {
                $service_type = "WECHATWAP";
            }else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $service_type = "ALIPAYWAP";
            }else if ($cards[$card_id]['netway'] == "QQ_WAP") {
                $service_type = "QQWAP";
            } else if ($cards[$card_id]['netway'] === 'WY') {
                $service_type = "gateway";
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                $apiUrl = $GLOBALS['cfg']['pay_url']['dd_api'];
                switch ($third_party_bank_id) {
                    // 工商银行1
                    case '1':
                        $bankId = '102';
                        break;
                    // 农业银行1
                    case '2':
                        $bankId = '103';
                        break;
                    // 建设银行1
                    case '3':
                        $bankId = '105';
                        break;
                    // 招商银行1
                    case '4':
                        $bankId = '308';
                        break;
                    // 交通银行1
                    case '5':
                        $bankId = '301';
                        break;
                    // 中信银行1
                    case '6':
                        $bankId = '302';
                        break;
                    // 邮政储蓄1
                    case '7':
                        $bankId = '403';
                        break;
                    // 中国光大银行1
                    case '8':
                        $bankId = '303';
                        break;
                    // 民生银行1
                    case '9':
                        $bankId = '305';
                        break;
                    // 兴业银行1
                    case '11':
                        $bankId = '309';
                        break;
                    // 广发银行1
                    case '12':
                        $bankId = '306';
                        break;
                    // 中国银行1
                    case '22':
                        $bankId = '104';
                        break;
                }
                $orderCreateTime = date('YmdHis', time());
                $lastPaytime = date('YmdHis', time()+24*60*60);
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
                $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
                $orderCreateTime = date('YmdHis', time());
                $md5Key = $cards[$card_id]['mer_key'];

                $postData['pay_type'] = $service_type;//支付类型2
                $postData['mchno'] = $cards[$card_id]['mer_no'];//商户号1
                $postData['price'] = $deposit_amount;//金额2
                $postData['bill_body'] = '会员充值';//回调地址1
                $postData['nonce_str'] = $shop_order_num;//订单号1
                $postData['bill_title'] = '充值';//订单标题2
                $sign = 'bill_body='.$postData['bill_body'].'&bill_title='.$postData['bill_title'].'&mchno='.$postData['mchno'].'&nonce_str='.$postData['nonce_str'].'&pay_type='.$postData['pay_type'].'&price='.$postData['price'].'&key='.$md5Key;
                $postData['sign'] = strtoupper(md5($sign));
                /*if($deposit_amount < '10'){
                 showMSG("充值金额不能小于10元");
                }*/

                //提交到接口
                $url = $apiUrl;
                $res = $this->send_post($url, $post);
                dd($res);
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
                $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $postData['down_sn'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );
                if (pay::addItem($data)) {
                    $headerUrl = $res['code_url'];
                    header("location:$headerUrl");
                } else {
                    log2file('mgPay.log', $postData);
                    die('生成订单失败');
                }
                die;
            }

            $orderCreateTime = date('YmdHis', time());
            $md5Key = $cards[$card_id]['mer_key'];
            $postData['MerId'] = $cards[$card_id]['mer_no'];//1
            $postData['OrdId'] = $shop_order_num;//4
            $postData['OrdAmt'] = $deposit_amount;//6
            $postData['PayType'] = 'DT';
            $postData['CurCode'] = 'CNY';
            $postData['BankCode'] = $service_type;//7
            $postData['ProductInfo'] = 'chongzhi';//2
            $postData['Remark'] = 'chongzhi';//2
            $postData['ReturnURL'] = $returnurl;//2
            $postData['NotifyURL'] = $callbackurl;//3
            $postData['SignType'] = 'MD5';//5
            $sign = 'MerId='.$postData['MerId'].'&OrdId='.$postData['OrdId'].'&OrdAmt='.$postData['OrdAmt'].'&PayType=DT&CurCode=CNY&BankCode='.$postData['BankCode'].'&ProductInfo=' .$postData['ProductInfo'].'&Remark='.$postData['Remark'].'&ReturnURL='.$postData['ReturnURL'].'&NotifyURL='.$postData['NotifyURL'].'&SignType=MD5&MerKey='.$md5Key;
            $postData['SignInfo'] = md5($sign);
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
                $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );
                if (pay::addItem($data)) {
                    self::$view->setVar('apiUrl', $apiUrl);
                    self::$view->setVar('postFields', $postData);
                    self::$view->render('pay_dd');die;
                }
            } else {

                    echo '生成订单失败';

                    log2file('ddPay.log', $postData);
                    log2file('ddPay.log', $res);

            }
    }
    public function ddBack(){
        $response = file_get_contents('php://input');
        parse_str($response,$resArr);
//        var_dump($response);
//        dd($resArr);
        if ($resArr ===  '') {
            die('参数错误1');
        }
        if (!isset($response)) {//金额
            die('参数错误3');
        }
        if (!isset($resArr['OrdAmt'])) {//金额
            die('参数错误2');
        }
        $orderAmount = $resArr['OrdAmt'];
        if(!isset($resArr['OrdId'])) {//商户生成订单
            die('参数错误4');
        }
        $orderNo = $resArr['OrdId'] != null ? $resArr['OrdId'] : '';
        if (!isset($resArr['ResultCode'])){
            die('参数错误5');
        }
        if(!isset($resArr['OrdNo'])){//第三方订单
            die('参数错误6');
        }
        $tradeNo = $resArr['OrdNo'] != null ? $resArr['OrdNo'] : '';
        if (!isset($resArr['Remark'])){
            die('参数错误7');
        }
        if (!isset($resArr['MerId'])){
            die('参数错误8');
        }
        if (!isset($resArr['SignInfo'])){
            die('参数错误9');
        }
        if (!isset($resArr['SignType'])){
            die('参数错误10');
        }
        $resArr['SignInfo'] = trim($resArr['SignInfo']);
        $card_id = explode("_", $orderNo)[0];
        $card = cards::getItemWithCache($card_id);
        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $stream = 'MerId='.$resArr['MerId'].'&OrdId='.$resArr['OrdId'].'&OrdAmt='.$resArr['OrdAmt'].'&OrdNo='.$resArr['OrdNo'].'&ResultCode='.$resArr['ResultCode'].'&Remark='.$resArr['Remark'].'&SignType='.$resArr['SignType'];
        $sign = md5( md5($stream) . $card['mer_key']);
        if ($sign == $resArr['SignInfo']) {
            $order = pay::getItemByOrderNumber($orderNo);
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->bak('gs4fj@5f!sda*dfuf', 'success9999', $orderAmount, $orderNo, $tradeNo, $order);
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }
    public function lyPay(){//利盈支付
    	$username = $this->request->getPost('username', 'trim');
    	$user_id = $this->request->getPost('user_id', 'intval');
    	$card_id = $this->request->getPost('card_id', 'trim');
    	$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    	$bank_id = $this->request->getPost('bank_id', 'trim');
    	$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    	if ($card_id == '') {
    		die('系统出错！(错误码：6003)');
    	}

    	$hash = $this->request->getPost('hash', 'trim');
    	$timePart1 = substr($hash, 0, 5);
    	$timePart2 = substr($hash, 5 + 32, 5);
    	$time = $timePart1 . $timePart2;
    	if (time() > intval($time)) {
    		die('交易超时，请刷新充值页面重新充值');
    	}
    	$new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));
    	if ($hash != $timePart1 . $new_hash . $timePart2) {
    		die('系统出错！(错误码：6002)');
    	}
    	$cards = cards::getItemsById(array($card_id));
    	if (count($cards) == 0) {
    		die('系统出错！(错误码：6004)');
    	}
    	if ($username != '' && $user_id != '') {
    		$codes = $this->request->getPost('codes', 'trim');
    		if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
    			die('系统出错！(错误码：6000)');
    		}
    		if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
    			die('系统出错！(错误码：6001)');
    		}
    		$card_id = $this->request->getPost('card_id', 'trim');
    		$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    		$shop_order_num = $this->request->getPost('shop_order_num', 'trim');
    		$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
    		$deposit_amount = $this->request->getPost('deposit_amount', 'floatval');
    		$protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
    		$domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
    		$payName = $GLOBALS['cfg']['pay_name'][$bank_id];
    		$shop_url = $cards[$card_id]['shop_url'];
    		$callbackurl = $cards[$card_id]['call_back_url'];
    		$returnurl = $cards[$card_id]['return_url'];
    		if($deposit_amount < '10'){
    		    showMSG("充值金额不能低于￥10元");
            }
    		if ($shop_url == "") {
    			$callbackurl = $domain . 'pay/' . $payName . 'Back.php';
    			$returnurl = $domain . 'pay/hrefback.php';
    		} else if (strpos($shop_url, '?c=pay') === 0) {

    		} else if (strpos($shop_url, '?c=pay') > 0) {

    		} else {
    			$callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
    			$returnurl = $shop_url . '/hrefback.php';
    		}
    		$service_type = '';
    		$apiUrl = $GLOBALS['cfg']['pay_url']['ly_api'];
            if($cards[$card_id]["netway"] == "QQ"){
    			$service_type = "05";
    		} else if ($cards[$card_id]['netway'] == "ZFB") {
    			$service_type = "02";
    		}else if ($cards[$card_id]['netway'] == "QQ_WAP") {
    			$service_type = "06";
    		} else if ($cards[$card_id]['netway'] === 'WY' || $cards[$card_id]['netway'] === 'WX' || $cards[$card_id]['netway'] === 'WX_WAP') {
    			if($cards[$card_id]['netway'] === 'WX'){
                    $service_type = "01";
                }
                if($cards[$card_id]['netway'] === 'WY'){
                    $service_type = "10";
                }
                if($cards[$card_id]['netway'] === 'WY_WAP'){
    			    $service_type = "08";
                }
    			$third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
    			$apiUrl = $GLOBALS['cfg']['pay_url']['ly_wy_api'];
    			switch ($third_party_bank_id) {
    				// 工商银行1
    				case '1':
                        $bank_id = "01020000";
    					break;
    					// 农业银行1
    				case '2':
                        $bank_id = "01030000";
    					break;
    					// 建设银行1
    				case '3':
                        $bank_id = "01050000";
    					break;
    					// 招商银行1
    				case '4':
                        $bank_id = "03080000";
    					break;
    					// 交通银行1
    				case '5':
                        $bank_id = "03010000";
    					break;
    					// 中信银行1
    				case '6':
                        $bank_id = "03020000";
    					break;
    					// 邮政储蓄1
    				case '7':
                        $bank_id = "04030000";
    					break;
    					// 中国光大银行1
    				case '8':
                        $bank_id = "03030000";
    					break;
    					// 民生银行1
    				case '9':
                        $bank_id = "03050000";
    					break;
    					// 兴业银行1
    				case '11':
                        $bank_id = "03090000";
    					break;
    					// 广发银行1
    				case '12':
                        $bank_id = "03060000";
    					break;
    					// 中国银行1
    				case '22':
                        $bank_id = "01040000";
    					break;
    			}
                $orderCreateTime = date('YmdHis', time());
                $md5Key = $cards[$card_id]['mer_key'];
                $postData['trade_type'] = $service_type;//
                $postData['mch_id'] = $cards[$card_id]['mer_no'];//
                $postData['total_fee'] = $deposit_amount*100;//
                $postData['out_trade_no'] = $shop_order_num;//
                $postData['notify_url'] = $callbackurl;//
                if($service_type == '10'){
                    $postData['bank_id'] = $bank_id;
                }else{
                    $postData['bank_id'] = '';
                }
                $postData['return_url'] = $returnurl;//
                $postData['time_start'] = $orderCreateTime;//
                $postData['nonce_str'] = 'thisisvip';//
                $postData['sign'] = $this->lyMD5Sign($postData, $md5Key);
                $postData['body'] = '充值';
                $postData['attach'] = '这是干嘛的';
                $url = $apiUrl;
    			$requestURI = $this->request->getPost('requestURI', 'trim');
    			$bank_id = $this->request->getPost('bank_id', 'trim');
    			$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    			$data = array(
    					'order_number' => $shop_order_num,
    					'user_id' => $user_id,
    					'username' => $username,
    					'amount' => $deposit_amount,
    					'pay_time' => date('Y-m-d H:i:s'),
    					'source' => $_SERVER['HTTP_HOST'],
    					'requestURI' => $requestURI,
    					'card_id' => $card_id,
    					'bank_id' => $bank_id,
    			);
    			if (pay::addItem($data)) {
                    self::$view->setVar('apiUrl', $apiUrl);
                    self::$view->setVar('postFields', $postData);
                    self::$view->render('pay_ly');die;
    			} else {
    				log2file('lyPay.log', $postData);
    				die('生成订单失败');
    			}
    			die;
    		}

    		$orderCreateTime = date('YmdHis', time());
    		$md5Key = $cards[$card_id]['mer_key'];
    		$postData['trade_type'] = $service_type;//7
    		$postData['mch_id'] = $cards[$card_id]['mer_no'];//1
    		$postData['total_fee'] = $deposit_amount*100;//6
    		$postData['out_trade_no'] = $shop_order_num;//4
    		$postData['notify_url'] = $callbackurl;//3
    		$postData['time_start'] = $orderCreateTime;//5
    		$postData['nonce_str'] = 'thisisvip';//2
    		$postData['sign'] = $this->lyMD5Sign($postData, $md5Key);
    		$postData['body'] = '充值';
    		$postData['attach'] = '这是干嘛的';
    		$url = $apiUrl;
    		$res = $this->send_post($url, $postData);
    		$html = json_decode($res,true);
    		//dd($html);
    		if ($res != null && $html['status'] == "SUCCESS") {
    			$requestURI = $this->request->getPost('requestURI', 'trim');
    			$bank_id = $this->request->getPost('bank_id', 'trim');
    			$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    			$data = array(
    					'order_number' => $postData['out_trade_no'],
    					'user_id' => $user_id,
    					'username' => $username,
    					'amount' => $deposit_amount,
    					'pay_time' => date('Y-m-d H:i:s'),
    					'source' => $_SERVER['HTTP_HOST'],
    					'requestURI' => $requestURI,
    					'card_id' => $card_id,
    					'bank_id' => $bank_id,
    			);
    			if (pay::addItem($data)) {
    				if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
    					header("location:" . $html->code_url);
    					die();
    				} else {
    					$qq_number = config::getConfig('qq_number');
                		$wechat_number = config::getConfig('wechat_number');
                		echo $html['code_url'];
                		die();
                		header("location:pay/xingyunQrcode.php?username=" . $data['username'] . "&coin=" . $data['amount'] . "&netway=" . $html['code_url'] . "&qq=" . $qq_number . "&wechat=" . $wechat_number . "&cdn=" . parent::$PublicImgCdn);
    				}
    			}
    		} else {
    			if ($res == null) {
    				echo '生成订单失败';
    			} else {
    				log2file('mgPay.log', $postData);
    				log2file('mgPay.log', $res);
    			}
    		}
    	} else {
    		log2file('lyPay.log', $postData);
    		log2file('lyPay.log', $res);
    		die();
    	}
    }
    public function lyMD5Sign($params,$key){

		ksort($params);
		//var_dump($params);
		//var_dump($key);
		$hbq = http_build_query($params)."&key=".$key;
		//var_dump($hbq);
		$sign = strtoupper( md5( $hbq ) );
		//var_dump($sign);
		return $sign;
	}
    public function lyBack(){
    	$response = file_get_contents('php://input');
    	parse_str($response,$resArr);
    	if ($resArr ===  '') {
    		die('参数错误1');
    	}
    	if (!isset($resArr['total_fee'])) {//金额
    		die('参数错误3');
    	}
    	if (!isset($resArr['trade_state'])) {//金额
    		die('参数错误2');
    	}
    	$orderAmount = $resArr['total_fee'];
    	if(!isset($resArr['out_trade_no'])) {//商户生成订单
    		die('参数错误4');
    	}
    	$orderNo = $resArr['out_trade_no'] != null ? $resArr['out_trade_no'] : '';
    	if (!isset($resArr['mch_id'])){
    		die('参数错误5');
    	}
    	if(!isset($resArr['trade_no'])){//第三方订单
    		die('参数错误6');
    	}
    	$tradeNo = $resArr['trade_no'] != null ? $resArr['trade_no'] : '';
    	if (!isset($resArr['nonce_str'])){
    		die('参数错误7');
    	}
    	if (!isset($resArr['time_end'])){
    		die('参数错误8');
    	}
    	if (!isset($resArr['sign'])){
    		die('参数错误9');
    	}
    	if (!isset($resArr['trade_type'])){
    		die('参数错误10');
    	}
    	$resArr['md5'] = trim($resArr['sign']);
    	$card_id = explode("_", $orderNo)[0];
    	$card = cards::getItemWithCache($card_id);
    	if (!$card || !$card['mer_key']) {
    		echo '不合法数据,签名不能为空.';
    		$this->logdump('伪造数据,程序终止.');
    		die;
    	}
    	$sigArray = array(
    			"mch_id" => $resArr['mch_id'],
    			"nonce_str" => $resArr['nonce_str'],
    			"out_trade_no" => $resArr['out_trade_no'],
    			"time_end" => $resArr['time_end'],
    			"total_fee" => $resArr['total_fee'],
    			"trade_no" => $resArr['trade_no'],
    			"trade_state" => $resArr['trade_state'],
    			"trade_type" => $resArr['trade_type'],
    			);
    	$sign = $this->lyMD5Sign($sigArray, $card['mer_key']);
    	//dd($sign);
    	if ($sign == $resArr['sign']) {
    		$order = pay::getItemByOrderNumber($orderNo);
    		$this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
    		$this->bak('gs4fj@5f!sda*dfuf', 'SUCCESS', $orderAmount, $orderNo, $tradeNo, $order);
    	} else {
    		echo '不合法数据';
    		$this->logdump("签名验证失败，程序中止。");
    		die;
    	}
    }
    public function lzfPay(){
    	$username = $this->request->getPost('username', 'trim');
    	$user_id = $this->request->getPost('user_id', 'intval');
    	$card_id = $this->request->getPost('card_id', 'trim');
		$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    	$bank_id = $this->request->getPost('bank_id', 'trim');
		$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    	if ($card_id == '') {
    		die('系统出错！(错误码：6003)');
    	}
    	$hash = $this->request->getPost('hash', 'trim');
    	$timePart1 = substr($hash, 0, 5);
    	$timePart2 = substr($hash, 5 + 32, 5);
    	$time = $timePart1 . $timePart2;
    	//     	if (time() > intval($time)) {
    	//     		die('交易超时，请刷新充值页面重新充值');
    	//     	}
    	$new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));
    	if ($hash != $timePart1 . $new_hash . $timePart2) {
    		die('系统出错！(错误码：6002)');
    	}
    	$cards = cards::getItemsById(array($card_id));
    	if (count($cards) == 0) {
    		die('系统出错！(错误码：6004)');
    	}
    	if ($username != '' && $user_id != '') {
    		$codes = $this->request->getPost('codes', 'trim');
    		if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
    			die('系统出错！(错误码：6000)');
    		}
    		if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
    			die('系统出错！(错误码：6001)');
    		}
    		$card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    		$shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
    		$deposit_amount = $this->request->getPost('deposit_amount', 'floatval');
    		$protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
    		$domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
    		$payName = $GLOBALS['cfg']['pay_name'][$bank_id];
    		$shop_url = $cards[$card_id]['shop_url'];
    		$callbackurl = $cards[$card_id]['call_back_url'];
    		$returnurl = $cards[$card_id]['return_url'];
    		if ($shop_url == "") {
    			$callbackurl = $domain . 'pay/' . $payName . 'Back.php';
    			$returnurl = $domain . 'pay/hrefback.php';
    		} else if (strpos($shop_url, '?c=pay') === 0) {

    		} else if (strpos($shop_url, '?c=pay') > 0) {

    		} else {
    			$callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
    			$returnurl = $shop_url . '/hrefback.php';
    		}
    		$service_type = '';
    		$apiUrl = $GLOBALS['cfg']['pay_url']['lzf_api'];
    		if ($cards[$card_id]["netway"] == "WX") {
    			$service_type = "weixin2";
    		} else if ($cards[$card_id]['netway'] == "ZFB") {
    			$service_type = "alipay2";
    		}else if ($cards[$card_id]['netway'] == "QQ") {
    			$service_type = "qqrcode";
    		} else if ($cards[$card_id]['netway'] === 'WY') {
    			$third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
    			$apiUrl = $GLOBALS['cfg']['pay_url']['lzf_api'];
    			$service_type = "bank";
    			switch ($third_party_bank_id) {
    				// 工商银行
    				case '1':
    					$bank_code = 'ICBC';
    					break;
    					// 农业银行
    				case '2':
    					$bank_code = 'ABC';
    					break;
    					// 建设银行
    				case '3':
    					$bank_code = 'CCB';
    					break;
    					// 招商银行
    				case '4':
    					$bank_code = 'CMB';
    					break;
    					// 交通银行
    				case '5':
    					$bank_code = 'BOCOM';
    					break;
    					// 中信银行
    				case '6':
    					$bank_code = 'CNCB';
    					break;
    					// 邮政储蓄
    				case '7':
    					$bank_code = 'PSBC';
    					break;
    					// 中国光大银行
    				case '8':
    					$bank_code = 'CEB';
    					break;
    					// 民生银行
    				case '9':
    					$bank_code = 'CMBC';
    					break;
    					// 上海浦东发展银行
    				case '10':
    					$bank_code = 'SPDB';
    					break;
    					// 兴业银行
    				case '11':
    					$bank_code = 'CIB';
    					break;
    					// 广发银行
    				case '12':
    					$bank_code = 'GDB';
    					break;
    					// 平安银行
    				case '13':
    					$bank_code = 'PAB';
    					break;
    					// 华夏银行
    				case '15':
    					$bank_code = 'HXB';
    					break;
    					// 东莞银行
    					/*case '16':
    					 break;*/
    					// 渤海银行
    					//     				case '17':
    					//     					$bank_code = '988';
    					//     					break;
    					// 浙商银行
    					//     				case '19':
    					//     					$bank_code = '968';
    					//     					break;
    					// 北京银行
    				case '20':
    					$bank_code = 'BCCB';
    					break;
    					// 中国银行
    				case '22':
    					$bank_code = 'BOCSH';
    					break;
    			}
    			$orderCreateTime = date('Y-m-d H:i:s', time());
    			$md5Key = $cards[$card_id]['mer_key'];//MD5key
    			$postData['version'] = '1.0';
    			$postData['customerid'] = $cards[$card_id]['mer_no'];//商户号
    			$postData['sdorderno'] = $shop_order_num;//订单号
    			$postData['total_fee'] = $deposit_amount;//$cards[$card_id]['mer_no'];//商户号
    			$postData['bankcode'] = $bank_code;
    			$postData['paytype'] = $service_type;//支付类型
    			$postData['notifyurl'] = $callbackurl;//回调地址
    			$postData['returnurl'] = $returnurl;//返回地址
    			$postData['remark'] = '';//银行类型
    			$postData['get_code'] = '';
    			$postData['sign'] = md5('version='.$postData['version'].'&customerid='.$postData['customerid'].'&total_fee='.$postData['total_fee'].'&sdorderno='.$postData['sdorderno'].'&notifyurl='.$postData['notifyurl'].'&returnurl='.$postData['returnurl'].'&'.$md5Key);
    			$requestURI = $this->request->getPost('requestURI', 'trim');
    			$bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    			//dd($postData);
    			$data = array(
    					'order_number' => $shop_order_num,
    					'user_id' => $user_id,
    					'username' => $username,
    					'amount' => $deposit_amount,
    					'pay_time' => date('Y-m-d H:i:s'),
    					'source' => $_SERVER['HTTP_HOST'],
    					'requestURI' => $requestURI,
    					'card_id' => $card_id,
    					'bank_id' => $bank_id,
    			);
    			if (pay::addItem($data)) {
    				self::$view->setVar('apiUrl', $apiUrl);
    				self::$view->setVar('postFields', $postData);
    				self::$view->render('pay_lzf');die;
    			}else {
    				if ($postData == null) {
    					echo '生成订单失败';
    				} else {
    					log2file('lzfPay.log', $postData);
    					log2file('lzfPay.log', $apiUrl);
    					die();
    				}
    			}
    		}
    		$orderCreateTime = date('Y-m-d H:i:s', time());
    		$md5Key = $cards[$card_id]['mer_key'];//MD5key
    		$postData['version'] = '1.0';
    		$postData['customerid'] = $cards[$card_id]['mer_no'];//商户号
    		$postData['sdorderno'] = $shop_order_num;//订单号
    		$postData['total_fee'] = $deposit_amount;//$cards[$card_id]['mer_no'];//商户号
    		$postData['bankcode'] = '';//订单创建时间
    		$postData['paytype'] = $service_type;//支付类型
    		$postData['notifyurl'] = $callbackurl;//回调地址
    		$postData['returnurl'] = $returnurl;//返回地址
    		$postData['remark'] = '';//银行类型
    		$postData['get_code'] = '';
    		$postData['sign'] = md5('version='.$postData['version'].'&customerid='.$postData['customerid'].'&total_fee='.$postData['total_fee'].'&sdorderno='.$postData['sdorderno'].'&notifyurl='.$postData['notifyurl'].'&returnurl='.$postData['returnurl'].'&'.$md5Key);
    		$requestURI = $this->request->getPost('requestURI', 'trim');
    		$bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    		$data = array(
    				'order_number' => $shop_order_num,
    				'user_id' => $user_id,
    				'username' => $username,
    				'amount' => $deposit_amount,
    				'pay_time' => date('Y-m-d H:i:s'),
    				'source' => $_SERVER['HTTP_HOST'],
    				'requestURI' => $requestURI,
    				'card_id' => $card_id,
    				'bank_id' => $bank_id,
    		);
    		if (pay::addItem($data)) {
    			self::$view->setVar('apiUrl', $apiUrl);
    			self::$view->setVar('postFields', $postData);
    			self::$view->render('pay_lzf');
    		}
    	} else {
    		if ($postData == null) {
    			echo '生成订单失败';
    		} else {
    			log2file('lzfPay.log', $postData);
    			log2file('lzfPay.log', $apiUrl);
    			die();
    		}
    	}
    	die();
    }
    public function lzfBack(){
    	$response = file_get_contents('php://input');
    	parse_str($response,$resArr);
    	if ($resArr ===  '') {
    		die('参数错误1');
    	}
    	if (!isset($resArr['total_fee'])) {//金额
    		die('参数错误3');
    	}
    	$orderAmount = $resArr['total_fee'];
    	if(!isset($resArr['sdorderno'])) {//商户生成订单
    		die('参数错误4');
    	}
    	$orderNo = $resArr['sdorderno'] != null ? $resArr['sdorderno'] : '';
    	if (!isset($resArr['customerid'])){
    		die('参数错误5');
    	}
    	if(!isset($resArr['sdpayno'])){//第三方订单
    		die('参数错误6');
    	}
    	$tradeNo = $resArr['sdpayno'] != null ? $resArr['sdpayno'] : '';
    	if (!isset($resArr['status'])){
    		die('参数错误7');
    	}
    	if (!isset($resArr['paytype'])){
    		die('参数错误8');
    	}
    	if (!isset($resArr['sign'])){
    		die('参数错误9');
    	}
    	$resArr['md5'] = trim($resArr['sign']);
    	$card_id = explode("_", $orderNo)[0];
    	$card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
    	$sign = md5('customerid='.$resArr['customerid'].'&status='.$resArr['status'].'&sdpayno='.$tradeNo.'&sdorderno='.$orderNo.'&total_fee='.$orderAmount.'&paytype='.$resArr['paytype'].'&'.$card['mer_key']);
    	if ($sign == $resArr['sign']) {
    		$order = pay::getItemByOrderNumber($orderNo);
    		$this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
    		$this->bak('gs4fj@5f!sda*dfuf', 'success', $orderAmount, $orderNo, $tradeNo, $order);
    	} else {
    		echo '不合法数据';
    		$this->logdump("签名验证失败，程序中止。");
    		die;
    	}
    }
     public function lwPay(){
    	$username = $this->request->getPost('username', 'trim');
    	$user_id = $this->request->getPost('user_id', 'intval');
    	$card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    	$bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    	if ($card_id == '') {
    		die('系统出错！(错误码：6003)');
    	}
    	$hash = $this->request->getPost('hash', 'trim');
    	$timePart1 = substr($hash, 0, 5);
    	$timePart2 = substr($hash, 5 + 32, 5);
    	$time = $timePart1 . $timePart2;
    	//     	if (time() > intval($time)) {
    	//     		die('交易超时，请刷新充值页面重新充值');
    	//     	}
    	$new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));
    	if ($hash != $timePart1 . $new_hash . $timePart2) {
    		die('系统出错！(错误码：6002)');
    	}
    	$cards = cards::getItemsById(array($card_id));
    	if (count($cards) == 0) {
    		die('系统出错！(错误码：6004)');
    	}
    	if ($username != '' && $user_id != '') {
    		$codes = $this->request->getPost('codes', 'trim');
    		if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
    			die('系统出错！(错误码：6000)');
    		}
    		if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
    			die('系统出错！(错误码：6001)');
    		}
    		$card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    		$shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
    		$deposit_amount = $this->request->getPost('deposit_amount', 'floatval');
    		$protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
    		$domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
    		$payName = $GLOBALS['cfg']['pay_name'][$bank_id];
    		$shop_url = $cards[$card_id]['shop_url'];
    		$callbackurl = $cards[$card_id]['call_back_url'];
    		$returnurl = $cards[$card_id]['return_url'];
    		if ($shop_url == "") {
    			$callbackurl = $domain . 'pay/' . $payName . 'Back.php';
    			$returnurl = $domain . 'pay/hrefback.php';
    		} else if (strpos($shop_url, '?c=pay') === 0) {

    		} else if (strpos($shop_url, '?c=pay') > 0) {

    		} else {
    			$callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
    			$returnurl = $shop_url . '/hrefback.php';
    		}
    		$service_type = '';
    		$apiUrl = $GLOBALS['cfg']['pay_url']['lw_api'];
    		if ($cards[$card_id]["netway"] == "WX") {
    			$service_type = "weixin";
    		} else if ($cards[$card_id]['netway'] == "ZFB") {
    			$service_type = "alipay";
    		}else if ($cards[$card_id]['netway'] == "QQ") {
    			$service_type = "qqrcode";
    		} else if ($cards[$card_id]['netway'] === 'WY') {
    			$third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
    			$apiUrl = $GLOBALS['cfg']['pay_url']['lw_api'];
    			$service_type = "chinapay";
    			switch ($third_party_bank_id) {
    				// 工商银行
    				case '1':
    					$bank_code = 'ICBC';
    					break;
    					// 农业银行
    				case '2':
    					$bank_code = 'ABC';
    					break;
    					// 建设银行
    				case '3':
    					$bank_code = 'CCB';
    					break;
    					// 招商银行
    				case '4':
    					$bank_code = 'CMB';
    					break;
    					// 交通银行
    				case '5':
    					$bank_code = 'BOCOM';
    					break;
    					// 中信银行
    				case '6':
    					$bank_code = 'CNCB';
    					break;
    					// 邮政储蓄
    				case '7':
    					$bank_code = 'PSBC';
    					break;
    					// 中国光大银行
    				case '8':
    					$bank_code = 'CEB';
    					break;
    					// 民生银行
    				case '9':
    					$bank_code = 'CMBC';
    					break;
    					// 上海浦东发展银行
    				case '10':
    					$bank_code = 'SPDB';
    					break;
    					// 兴业银行
    				case '11':
    					$bank_code = 'CIB';
    					break;
    					// 广发银行
    				case '12':
    					$bank_code = 'GDB';
    					break;
    					// 平安银行
    				case '13':
    					$bank_code = 'PAB';
    					break;
    					// 华夏银行
    				case '15':
    					$bank_code = 'HXB';
    					break;
    					// 东莞银行
    					/*case '16':
    					 break;*/
    					// 渤海银行
//     				case '17':
//     					$bank_code = '988';
//     					break;
    					// 浙商银行
//     				case '19':
//     					$bank_code = '968';
//     					break;
    					// 北京银行
    				case '20':
    					$bank_code = 'BCCB';
    					break;
    					// 中国银行
    				case '22':
    					$bank_code = 'BOCSH';
    					break;
    			}
    		$orderCreateTime = date('Y-m-d H:i:s', time());
    		$md5Key = $cards[$card_id]['mer_key'];//MD5key
    		$postData['version'] = '1.0';
    		$postData['customerid'] = $cards[$card_id]['mer_no'];//商户号
    		$postData['sdorderno'] = $shop_order_num;//订单号
    		$postData['total_fee'] = $deposit_amount;//$cards[$card_id]['mer_no'];//商户号
    		$postData['bankcode'] = '0';//订单创建时间
    		$postData['paytype'] = $service_type;//支付类型
    		$postData['notifyurl'] = $callbackurl;//回调地址
    		$postData['returnurl'] = $returnurl;//返回地址
    		$postData['remark'] = '';//银行类型
    		$postData['get_code'] = '';
    		$postData['sign'] = md5('version='.$postData['version'].'&customerid='.$postData['customerid'].'&total_fee='.$postData['total_fee'].'&sdorderno='.$postData['sdorderno'].'&notifyurl='.$postData['notifyurl'].'&returnurl='.$postData['returnurl'].'&'.$md5Key);
    		$requestURI = $this->request->getPost('requestURI', 'trim');
    		$bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    		//dd($postData);
    		$data = array(
    				'order_number' => $shop_order_num,
    				'user_id' => $user_id,
    				'username' => $username,
    				'amount' => $deposit_amount,
    				'pay_time' => date('Y-m-d H:i:s'),
    				'source' => $_SERVER['HTTP_HOST'],
    				'requestURI' => $requestURI,
    				'card_id' => $card_id,
    				'bank_id' => $bank_id,
    		);
    		if (pay::addItem($data)) {
    			self::$view->setVar('apiUrl', $apiUrl);
    			self::$view->setVar('postFields', $postData);
    			self::$view->render('pay_lw');die;
    		}else {
    		if ($postData == null) {
    			echo '生成订单失败';
    		} else {
    			log2file('lwPay.log', $postData);
    			log2file('lwPay.log', $apiUrl);
    			die();
    		}
    		}
    	}
    		$orderCreateTime = date('Y-m-d H:i:s', time());
    		$md5Key = $cards[$card_id]['mer_key'];//MD5key
    		$postData['version'] = '1.0';
    		$postData['customerid'] = $cards[$card_id]['mer_no'];//商户号
    		$postData['sdorderno'] = $shop_order_num;//订单号
    		$postData['total_fee'] = $deposit_amount;//$cards[$card_id]['mer_no'];//商户号
    		$postData['bankcode'] = '';//订单创建时间
    		$postData['paytype'] = $service_type;//支付类型
    		$postData['notifyurl'] = $callbackurl;//回调地址
    		$postData['returnurl'] = $returnurl;//返回地址
    		$postData['remark'] = '';//银行类型
    		$postData['get_code'] = '';
    		$postData['sign'] = md5('version='.$postData['version'].'&customerid='.$postData['customerid'].'&total_fee='.$postData['total_fee'].'&sdorderno='.$postData['sdorderno'].'&notifyurl='.$postData['notifyurl'].'&returnurl='.$postData['returnurl'].'&'.$md5Key);
    		$requestURI = $this->request->getPost('requestURI', 'trim');
    		$bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    		$data = array(
    				'order_number' => $shop_order_num,
    				'user_id' => $user_id,
    				'username' => $username,
    				'amount' => $deposit_amount,
    				'pay_time' => date('Y-m-d H:i:s'),
    				'source' => $_SERVER['HTTP_HOST'],
    				'requestURI' => $requestURI,
    				'card_id' => $card_id,
    				'bank_id' => $bank_id,
    		);
    		if (pay::addItem($data)) {
    			self::$view->setVar('apiUrl', $apiUrl);
    			self::$view->setVar('postFields', $postData);
    			self::$view->render('pay_lw');
    		}
    	} else {
    		if ($postData == null) {
    			echo '生成订单失败';
    		} else {
    			log2file('lwPay.log', $postData);
    			log2file('lwPay.log', $apiUrl);
    			die();
    		}
    	}
    	die();
    }
    public function lwBack(){
    	$response = file_get_contents('php://input');
    	parse_str($response,$resArr);
    	//dd($resArr);
    	//eval('$resArr = '.$response.';');
    	if ($resArr ===  '') {
    		die('参数错误1');
    	}
    	if (!isset($resArr['total_fee'])) {//金额
    		die('参数错误3');
    	}
    	$orderAmount = $resArr['total_fee'];
    	if(!isset($resArr['sdorderno'])) {//商户生成订单
    		die('参数错误4');
    	}
    	$orderNo = $resArr['sdorderno'] != null ? $resArr['sdorderno'] : '';
    	if (!isset($resArr['customerid'])){
    		die('参数错误5');
    	}
    	if(!isset($resArr['sdpayno'])){//第三方订单
    		die('参数错误6');
    	}
    	$tradeNo = $resArr['sdpayno'] != null ? $resArr['sdpayno'] : '';
    	if (!isset($resArr['status'])){
    		die('参数错误7');
    	}
    	if (!isset($resArr['paytype'])){
    		die('参数错误8');
    	}
    	if (!isset($resArr['sign'])){
    		die('参数错误9');
    	}
    	$resArr['md5'] = trim($resArr['sign']);
    	$card_id = explode("_", $orderNo)[0];
    	$card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
    	$sign = md5('customerid='.$resArr['customerid'].'&status='.$resArr['status'].'&sdpayno='.$tradeNo.'&sdorderno='.$orderNo.'&total_fee='.$orderAmount.'&paytype='.$resArr['paytype'].'&'.$card['mer_key']);
    	if ($sign == $resArr['sign']) {
    		$order = pay::getItemByOrderNumber($orderNo);
    		$this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
    		$this->bak('gs4fj@5f!sda*dfuf', 'success', $orderAmount, $orderNo, $tradeNo, $order);
    	} else {
    		echo '不合法数据';
    		$this->logdump("签名验证失败，程序中止。");
    		die;
    	}
    }
     public function xbswPay(){
    	$username = $this->request->getPost('username', 'trim');
    	$user_id = $this->request->getPost('user_id', 'intval');
    	$card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    	$bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    	if ($card_id == '') {
    		die('系统出错！(错误码：6003)');
    	}
    	$hash = $this->request->getPost('hash', 'trim');
    	$timePart1 = substr($hash, 0, 5);
    	$timePart2 = substr($hash, 5 + 32, 5);
    	$time = $timePart1 . $timePart2;
    	//     	if (time() > intval($time)) {
    	//     		die('交易超时，请刷新充值页面重新充值');
    	//     	}
    	$new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));
    	if ($hash != $timePart1 . $new_hash . $timePart2) {
    		die('系统出错！(错误码：6002)');
    	}
    	$cards = cards::getItemsById(array($card_id));
    	if (count($cards) == 0) {
    		die('系统出错！(错误码：6004)');
    	}
    	if ($username != '' && $user_id != '') {
    		$codes = $this->request->getPost('codes', 'trim');
    		if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
    			die('系统出错！(错误码：6000)');
    		}
    		if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
    			die('系统出错！(错误码：6001)');
    		}
    		$card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    		$shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
    		$deposit_amount = $this->request->getPost('deposit_amount', 'floatval');
    		$protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
    		$domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
    		$payName = $GLOBALS['cfg']['pay_name'][$bank_id];
    		$shop_url = $cards[$card_id]['shop_url'];
    		$callbackurl = $cards[$card_id]['call_back_url'];
    		$returnurl = $cards[$card_id]['return_url'];
    		if ($shop_url == "") {
    			$callbackurl = $domain . 'pay/' . $payName . 'Back.php';
    			$returnurl = $domain . 'pay/hrefback.php';
    		} else if (strpos($shop_url, '?c=pay') === 0) {

    		} else if (strpos($shop_url, '?c=pay') > 0) {

    		} else {
    			$callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
    			$returnurl = $shop_url . '/hrefback.php';
    		}
    		$service_type = '';
    		$apiUrl = $GLOBALS['cfg']['pay_url']['xbsw_api'];
    		if ($cards[$card_id]["netway"] == "WX") {
    			$service_type = "8011";
    		} else if ($cards[$card_id]['netway'] == "ZFB") {
    			$service_type = "8012";
    		}else if ($cards[$card_id]['netway'] == "QQ") {
    			$service_type = "993";
    		} else if ($cards[$card_id]['netway'] === 'WY') {
    			$third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
    			$apiUrl = $GLOBALS['cfg']['pay_url']['xbsw_api'];
    			switch ($third_party_bank_id) {
    				// 工商银行
                case '1':
                    $service_type = '967';
                    break;
                // 农业银行
                case '2':
                    $service_type = '964';
                    break;
                // 建设银行
                case '3':
                    $service_type = '965';
                    break;
                // 招商银行
                case '4':
                    $service_type = '970';
                    break;
                // 交通银行
                case '5':
                    $service_type = '981';
                    break;
                // 中信银行
                case '6':
                    $service_type = '962';
                    break;
                // 邮政储蓄
                case '7':
                    $service_type = '971';
                    break;
                // 中国光大银行
                case '8':
                    $service_type = '986';
                    break;
                // 民生银行
                case '9':
                    $service_type = '980';
                    break;
                // 上海浦东发展银行
                case '10':
                    $service_type = '977';
                    break;
                // 兴业银行
                case '11':
                    $service_type = '972';
                    break;
                // 广发银行
                case '12':
                    $service_type = '985';
                    break;
                // 平安银行
                case '13':
                    $service_type = '978';
                    break;
                // 华夏银行
                case '15':
                    $service_type = '982';
                    break;
                // 东莞银行
                /*case '16':
                    break;*/
                // 渤海银行
                 case '17':
                    $service_type = '988';
                    break;
                // 浙商银行
                case '19':
                    $service_type = '968';
                    break;
                // 北京银行
                case '20':
                    $service_type = '989';
                    break;
                // 中国银行
                case '22':
                    $service_type = '963';
                    break;
    			}
    			$orderCreateTime = date('YmdHis', time());
    			$md5Key = $cards[$card_id]['mer_key'];//MD5key
    			$postData['parter'] = $cards[$card_id]['mer_no'];
    			$postData['orderid'] = $shop_order_num;//订单号
    			$postData['value'] = $deposit_amount;//$cards[$card_id]['mer_no'];//商户号
    			$postData['type'] = $bankId;//支付类型
    			$postData['callbackurl'] = $callbackurl;//回调地址
    			$postData['hrefbackurl'] = $returnurl;//返回地址
    			$postData['payerIp'] = $_SERVER["REMOTE_ADDR"];//IP
    			$postData['spzdy'] = date('YmdHis', time());
    			$postData['attach'] = 'pay';
    			$postData['agent'] = '';
    			$md5      = "parter=".$postData['parter']."&type=".$postData['type']."&value=".$postData['value']."&orderid=".$postData['orderid']."&callbackurl=".$postData['callbackurl'].$md5Key;
    			$postData['sign'] = md5($md5);
    			$url      = "$apiUrl"."?parter=".$postData['parter']."&type=".$postData['type']."&value=".$postData['value']."&orderid=".$postData['orderid']."&callbackurl=".$postData['callbackurl']."&hrefbackurl=".$postData['hrefbackurl']."&payerIp=".$postData['payerIp']."&attach=".$postData['attach']."&sign=".$postData['sign']."&agent=".$postData['agent']."";
    			$requestURI = $this->request->getPost('requestURI', 'trim');
    			$bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    			$data = array(
    					'order_number' => $shop_order_num,
    					'user_id' => $user_id,
    					'username' => $username,
    					'amount' => $deposit_amount,
    					'pay_time' => date('Y-m-d H:i:s'),
    					'source' => $_SERVER['HTTP_HOST'],
    					'requestURI' => $requestURI,
    					'card_id' => $card_id,
    					'bank_id' => $bank_id,
    			);
    			if (pay::addItem($data)) {
    				header("location:$url");
    			}else {
		    		if ($postData == null) {
		    			echo '生成订单失败';
		    		} else {
		    			log2file('xbswPay.log', $postData);
		    			log2file('xbswPay.log', $url);
		    			die();
		    		}
		    	}
    		}
    		$orderCreateTime = date('YmdHis', time());
    		$md5Key = $cards[$card_id]['mer_key'];//MD5key
    		$postData['parter'] = $cards[$card_id]['mer_no'];
    		$postData['orderid'] = $shop_order_num;//订单号
    		$postData['value'] = $deposit_amount;//$cards[$card_id]['mer_no'];//商户号
    		$postData['type'] = $service_type;//支付类型
    		$postData['callbackurl'] = $callbackurl;//回调地址
    		$postData['hrefbackurl'] = $returnurl;//返回地址
    		$postData['payerIp'] = $_SERVER["REMOTE_ADDR"];//IP
    		$postData['spzdy'] = date('YmdHis', time());
    		$postData['attach'] = 'pay';
    		$postData['agent'] = '';
    		$md5      = "parter=".$postData['parter']."&type=".$postData['type']."&value=".$postData['value']."&orderid=".$postData['orderid']."&callbackurl=".$postData['callbackurl'].$md5Key;
    		$postData['sign'] = md5($md5);
    		$url      = "$apiUrl"."?parter=".$postData['parter']."&type=".$postData['type']."&value=".$postData['value']."&orderid=".$postData['orderid']."&callbackurl=".$postData['callbackurl']."&hrefbackurl=".$postData['hrefbackurl']."&payerIp=".$postData['payerIp']."&attach=".$postData['attach']."&sign=".$postData['sign']."&agent=".$postData['agent']."";
    		$requestURI = $this->request->getPost('requestURI', 'trim');
    		$bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    		$data = array(
    				'order_number' => $shop_order_num,
    				'user_id' => $user_id,
    				'username' => $username,
    				'amount' => $deposit_amount,
    				'pay_time' => date('Y-m-d H:i:s'),
    				'source' => $_SERVER['HTTP_HOST'],
    				'requestURI' => $requestURI,
    				'card_id' => $card_id,
    				'bank_id' => $bank_id,
    		);
    		if (pay::addItem($data)) {
    			header("location:$url");
    		}
    	} else {
    		if ($postData == null) {
    			echo '生成订单失败';
    		} else {
    			log2file('xbswPay.log', $postData);
    			log2file('xbswPay.log', $url);
    			die();
    		}
    	}
    	die();
    }
    public function xbswBack(){
    	$response = file_get_contents('php://input');
    	$response1 = parse_str($response,$resArr);
    	//dd($resArr);
    	if ($resArr ===  '') {
    		die('参数错误1');
    	}
    	if (!isset($resArr['ovalue'])) {//金额
    		die('参数错误3');
    	}
    	$orderAmount = $resArr['ovalue'];
    	if(!isset($resArr['orderid'])) {//商户生成订单
    		die('参数错误4');
    	}
    	$orderNo = $resArr['orderid'] != null ? $resArr['orderid'] : '';
    	if (!isset($resArr['opstate'])){
    		die('参数错误5');
    	}
    	if(!isset($resArr['sysorderid'])){//第三方订单
    		die('参数错误6');
    	}
    	$tradeNo = $resArr['sysorderid'] != null ? $resArr['sysorderid'] : '';
    	if (!isset($resArr['systime'])){
    		die('参数错误7');
    	}
    	if (!isset($resArr['attach'])){
    		die('参数错误8');
    	}
    	if (!isset($resArr['sign'])){
    		die('参数错误9');
    	}
    	$resArr['md5'] = trim($resArr['sign']);
    	$card_id = explode("_", $orderNo)[0];
    	$card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
    	$sign = md5("orderid=".$orderNo."&opstate=".$resArr['opstate']."&ovalue=".$resArr['ovalue']."&time=".$resArr['systime']."&sysorderid=".$tradeNo.$card['mer_key']);
//     	var_dump($sign);
//     	dd($resArr['sign']);
    	if ($sign == $resArr['sign']) {
    		$order = pay::getItemByOrderNumber($orderNo);
    		$this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
    		$this->bak('gs4fj@5f!sda*dfuf', 'success', $orderAmount, $orderNo, $tradeNo, $order);
    	} else {
    		echo '不合法数据';
    		$this->logdump("签名验证失败，程序中止。");
    		die;
    	}
    }
    public function yhxfPay(){
    	$username = $this->request->getPost('username', 'trim');
    	$user_id = $this->request->getPost('user_id', 'intval');
    	$card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    	$bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    	if ($card_id == '') {
    		die('系统出错！(错误码：6003)');
    	}
    	$hash = $this->request->getPost('hash', 'trim');
    	$timePart1 = substr($hash, 0, 5);
    	$timePart2 = substr($hash, 5 + 32, 5);
    	$time = $timePart1 . $timePart2;
    	$new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));
    	if ($hash != $timePart1 . $new_hash . $timePart2) {
    		die('系统出错！(错误码：6002)');
    	}
    	$cards = cards::getItemsById(array($card_id));
    	if (count($cards) == 0) {
    		die('系统出错！(错误码：6004)');
    	}
    	if ($username != '' && $user_id != '') {
    		$codes = $this->request->getPost('codes', 'trim');
    		if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
    			die('系统出错！(错误码：6000)');
    		}
    		if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
    			die('系统出错！(错误码：6001)');
    		}
    		$card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    		$shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
    		$deposit_amount = $this->request->getPost('deposit_amount', 'floatval');
    		$protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
    		$domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
    		$payName = $GLOBALS['cfg']['pay_name'][$bank_id];
    		$shop_url = $cards[$card_id]['shop_url'];
    		$callbackurl = $cards[$card_id]['call_back_url'];
    		$returnurl = $cards[$card_id]['return_url'];
    		if ($shop_url == "") {
    			$callbackurl = $domain . 'pay/' . $payName . 'Back.php';
    			$returnurl = $domain . 'pay/hrefback.php';
    		} else if (strpos($shop_url, '?c=pay') === 0) {

    		} else if (strpos($shop_url, '?c=pay') > 0) {

    		} else {
    			$callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
    			$returnurl = $shop_url . '/hrefback.php';
    		}
    		$service_type = '';
    		$apiUrl = $GLOBALS['cfg']['pay_url']['yhxf_api'];
    		if ($cards[$card_id]["netway"] == "WX") {
    			$service_type = "2";
    		} else if ($cards[$card_id]['netway'] == "ZFB") {
    			$service_type = "1";
    		}else if ($cards[$card_id]['netway'] == "QQ") {
    			$service_type = "4";
    		} else if ($cards[$card_id]['netway'] === 'WY') {
    			$third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
    			$apiUrl = $GLOBALS['cfg']['pay_url']['yhxf_api'];
    			switch ($third_party_bank_id) {
    				// 工商银行1
    				case '1':
    					$bankId = 'ICBC';
    					break;
    					// 农业银行1
    				case '2':
    					$bankId = 'ABC';
    					break;
    					// 建设银行1
    				case '3':
    					$bankId = 'CCB';
    					break;
    					// 招商银行1
    				case '4':
    					$bankId = 'CMB';
    					break;
    					// 交通银行1
    				case '5':
    					$bankId = 'BCM';
    					break;
    					// 中信银行1
    				case '6':
    					$bankId = 'CITIC';
    					break;
    					// 邮政储蓄1
    				case '7':
    					$bankId = 'PSBC';
    					break;
    					// 中国光大银行1
    				case '8':
    					$bankId = 'CEB';
    					break;
    					// 民生银行1
    				case '9':
    					$bankId = 'CMBC';
    					break;
    					// 兴业银行1
    				case '10':
    					$bankId = 'CIB';
    					break;
    					// 广发银行1
    				case '11':
    					$bankId = 'GDB';
    					break;
    					// 平安银行1
    				case '12':
    					$bankId = 'PAB';
    					// 北京银行1
    				case '13':
    					$bankId = 'BCCB';
    					break;
    					// 中国银行1
    				case '14':
    					$bankId = 'BOC';
    					break;
    			}
    		}
    		$orderCreateTime = date('YmdHis', time());
    		$md5Key = $cards[$card_id]['mer_key'];//MD5key
//     		$postData['spid'] = $cards[$card_id]['mer_no'];
//     		$postData['orderid'] = $shop_order_num;//订单号
//     		$postData['ms'] = $deposit_amount;//$cards[$card_id]['mer_no'];//商户号
//     		$postData['uid'] = 'userid';//PS:搞不懂干嘛的
//     		$postData['spsuc'] = $returnurl;//$orderCreateTime;//订单创建时间
//     		$postData['ordertype'] = $service_type;//是否支持信用卡
//     		$postData['interfacetype'] = '1';
//     		$postData['paroductname'] = '充值';
//     		$postData['notifurl'] = $callbackurl;

    		$postData['spid'] = $cards[$card_id]['mer_no'];
    		$postData['orderid'] = $shop_order_num;//订单号
    		$postData['mz'] = $deposit_amount;//$cards[$card_id]['mer_no'];//商户号
    		$postData['spzdy'] = date('YmdHis', time());
    		$postData['uid'] = date('YmdHis', time());//PS:搞不懂干嘛的
    		$postData['spsuc'] = $returnurl;//$orderCreateTime;//订单创建时间
    		$postData['ordertype'] = $service_type;//是否支持信用卡
    		$postData['interfacetype'] = '1';
    		$postData['productname'] = '充值';
    		$postData['notifyurl'] = $callbackurl;

    		$postData['sign'] = strtoupper(md5("{$postData['spid']}{$postData['orderid']}{$md5Key}{$postData['mz']}{$postData['spsuc']}{$postData['ordertype']}{$postData['interfacetype']}"));
    		$requestURI = $this->request->getPost('requestURI', 'trim');
    		$bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    		$data = array(
    					'order_number' => $shop_order_num,
    					'user_id' => $user_id,
    					'username' => $username,
    					'amount' => $deposit_amount,
    					'pay_time' => date('Y-m-d H:i:s'),
    					'source' => $_SERVER['HTTP_HOST'],
    					'requestURI' => $requestURI,
    					'card_id' => $card_id,
    					'bank_id' => $bank_id,
    				);
    		//dd($data);
    		if (pay::addItem($data)) {
    				//dd($postData);
    				self::$view->setVar('apiUrl', $apiUrl);
    				self::$view->setVar('postFields', $postData);
    				self::$view->render('pay_yhxf');die;
    		}
    		} else {
    			if ($jsonData == null) {
    				echo '生成订单失败';
    			} else {
    				log2file('yhxfPay.log', $postData);
    				log2file('yhxfPay.log', $jsonData);
    				die();
    			}
    		}
    		die();
    	}
    public function yhxfBack(){
    		$response = file_get_contents('php://input');
    		$response1 = parse_str($response,$resArr);
    		if ($resArr ===  '') {
    			die('参数错误1');
    		}
    		if (!isset($resArr['mz'])) {//金额
    			die('参数错误3');
    		}
    		$orderAmount = $resArr['mz'];
    		if(!isset($resArr['sporder'])) {//商户生成订单
    			die('参数错误4');
    		}
    		$orderNo = $resArr['sporder'] != null ? $resArr['sporder'] : '';
    		if (!isset($resArr['spid'])){
    			die('参数错误5');
    		}
    		if(!isset($resArr['oid'])){//第三方订单
    			die('参数错误6');
    		}
    		$tradeNo = $resArr['oid'] != null ? $resArr['oid'] : '';
    		if (!isset($resArr['zdy'])){
    			die('参数错误7');
    		}
    		if (!isset($resArr['spuid'])){
    			die('参数错误8');
    		}
    		if (!isset($resArr['md5'])){
    			die('参数错误9');
    		}
    		$resArr['md5'] = trim($resArr['md5']);
    		$card_id = explode("_", $orderNo)[0];
    		$card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
    		$sign = strtoupper(md5("{$resArr['oid']}{$resArr['sporder']}{$resArr['spid']}{$resArr['mz']}{$card['mer_key']}"));
    		if ($sign == $resArr['md5']) {
    			$order = pay::getItemByOrderNumber($orderNo);
    			$this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
    			$this->bak('gs4fj@5f!sda*dfuf', 'ok', $orderAmount, $orderNo, $tradeNo, $order);
    		} else {
    			echo '不合法数据';
    			$this->logdump("签名验证失败，程序中止。");
    			die;
    		}
    	}
    public function ydfPay(){//易代付支付
    	$username = $this->request->getPost('username', 'trim');
    	$user_id = $this->request->getPost('user_id', 'intval');
    	$card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    	$bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    	if ($card_id == '') {
    		die('系统出错！(错误码：6003)');
    	}

    	$hash = $this->request->getPost('hash', 'trim');
    	$timePart1 = substr($hash, 0, 5);
    	$timePart2 = substr($hash, 5 + 32, 5);
    	$time = $timePart1 . $timePart2;
    	if (time() > intval($time)) {
    		die('交易超时，请刷新充值页面重新充值');
    	}
    	$new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));
    	if ($hash != $timePart1 . $new_hash . $timePart2) {
    		die('系统出错！(错误码：6002)');
    	}
    	$cards = cards::getItemsById(array($card_id));
    	if (count($cards) == 0) {
    		die('系统出错！(错误码：6004)');
    	}
    	if ($username != '' && $user_id != '') {
    		$codes = $this->request->getPost('codes', 'trim');
    		if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
    			die('系统出错！(错误码：6000)');
    		}
    		if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
    			die('系统出错！(错误码：6001)');
    		}
    		$card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    		$shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
    		$deposit_amount = $this->request->getPost('deposit_amount', 'floatval');
    		$protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
    		$domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
    		$payName = $GLOBALS['cfg']['pay_name'][$bank_id];
    		$shop_url = $cards[$card_id]['shop_url'];
    		$callbackurl = $cards[$card_id]['call_back_url'];
    		$returnurl = $cards[$card_id]['return_url'];
    		if ($shop_url == "") {
    			$callbackurl = $domain . 'pay/' . $payName . 'Back.php';
    			$returnurl = $domain . 'pay/hrefback.php';
    		} else if (strpos($shop_url, '?c=pay') === 0) {

    		} else if (strpos($shop_url, '?c=pay') > 0) {

    		} else {
    			$callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
    			$returnurl = $shop_url . '/hrefback.php';
    		}
    		$service_type = '';
    		$apiUrl = $GLOBALS['cfg']['pay_url']['ydf_api'];
    		if ($cards[$card_id]["netway"] == "WX") {
    			$service_type = "1004";
    		} else if ($cards[$card_id]['netway'] == "ZFB") {
    			$service_type = "992";
    		}else if ($cards[$card_id]['netway'] == "QQ") {
    			$service_type = "993";
    		} else if ($cards[$card_id]['netway'] === 'WY') {
    			$service_type = "gateway";
    			$third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
    			$apiUrl = $GLOBALS['cfg']['pay_url']['mg_api'];
    			switch ($third_party_bank_id) {
    				// 工商银行1
    				case '1':
    					$bankId = '102';
    					break;
    					// 农业银行1
    				case '2':
    					$bankId = '103';
    					break;
    					// 建设银行1
    				case '3':
    					$bankId = '105';
    					break;
    					// 招商银行1
    				case '4':
    					$bankId = '308';
    					break;
    					// 交通银行1
    				case '5':
    					$bankId = '301';
    					break;
    					// 中信银行1
    				case '6':
    					$bankId = '302';
    					break;
    					// 邮政储蓄1
    				case '7':
    					$bankId = '403';
    					break;
    					// 中国光大银行1
    				case '8':
    					$bankId = '303';
    					break;
    					// 民生银行1
    				case '9':
    					$bankId = '305';
    					break;
    					// 兴业银行1
    				case '11':
    					$bankId = '309';
    					break;
    					// 广发银行1
    				case '12':
    					$bankId = '306';
    					break;
    					// 中国银行1
    				case '22':
    					$bankId = '104';
    					break;
    			}
    			$orderCreateTime = date('YmdHis', time());
    			$lastPaytime = date('YmdHis', time()+24*60*60);
    			$requestURI = $this->request->getPost('requestURI', 'trim');
    			$bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    			$orderCreateTime = date('YmdHis', time());
    			$md5Key = $cards[$card_id]['mer_key'];
    			$postData['type_code'] = $service_type;//支付类型1
    			$postData['member_code'] = $cards[$card_id]['mer_no'];//商户号1
    			$postData['amount'] = $deposit_amount;//金额1
    			$postData['bank_segment'] = '103';//这B参数是必填
    			$postData['notify_url'] = $callbackurl;//回调地址1
    			$postData['down_sn'] = $shop_order_num;//订单号1
    			$postData['subject'] = '充值';//订单标题（可空）1
    			$postData['down_sn'] = $shop_order_num;
    			$path = $cards[$card_id]['card_pass'];
    			$path = $this->formatKey($path);

    			$dataSign['type_code'] = $service_type;
    			$dataSign['subject'] = $postData['subject'];
    			$dataSign['amount'] = $postData['amount'];
    			$dataSign['bank_segment'] = $bankId;
    			$dataSign['notify_url'] = $callbackurl;
    			$dataSign['user_type'] = '1';
    			$dataSign['agent_type'] = '1';
    			$dataSign['card_type'] = '1';
    			$dataSign['down_sn'] = $shop_order_num;
    			$dataSign['return_url'] = $returnurl;
    			$dataSign['sign'] = $this->makeInSign($dataSign, $md5Key);
    			//生成签名
    			$post = array(
    					'member_code' => $postData['member_code'],
    					'cipher_data' => $this->encrypt($dataSign, $path),
    			);
    			//提交到接口
    			$url = $apiUrl;
    			$res = $this->mgCurlPost($url, $post);
    			$requestURI = $this->request->getPost('requestURI', 'trim');
    			$bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

    			$data = array(
    					'order_number' => $postData['down_sn'],
    					'user_id' => $user_id,
    					'username' => $username,
    					'amount' => $deposit_amount,
    					'pay_time' => date('Y-m-d H:i:s'),
    					'source' => $_SERVER['HTTP_HOST'],
    					'requestURI' => $requestURI,
    					'card_id' => $card_id,
    					'bank_id' => $bank_id,
    			);
    			if (pay::addItem($data)) {
    				$headerUrl = $res['code_url'];
    				header("location:$headerUrl");
    			} else {
    				log2file('mgPay.log', $postData);
    				die('生成订单失败');
    			}
    			die;
    		}
    		$orderCreateTime = date('YmdHis', time());
    		$md5Key = $cards[$card_id]['mer_key'];
    		$postData['type_code'] = $service_type;//支付类型1
    		$postData['member_code'] = $cards[$card_id]['mer_no'];//商户号1
    		$postData['amount'] = $deposit_amount;//金额1
    		$postData['bank_segment'] = '103';//这B参数是必填
    		$postData['notify_url'] = $callbackurl;//回调地址1
    		$postData['down_sn'] = $shop_order_num;//订单号1
    		$postData['subject'] = '充值';//订单标题（可空）1
    		$postData['down_sn'] = $shop_order_num;
    		$path = $cards[$card_id]['card_pass'];
    		$path = $this->formatKey($path);
    		//生成签名
    		$orderid = $shop_order_num;//订单
    		$value = $deposit_amount;//金额
    		$type = $service_type;//支付类型
    		$hrefbackurl = $callbackurl;//回调地址
    		$backurl  = $returnurl;//取货地址
    		$payerIp = $this->getClientIp();//获取IP
    		$attach = '充值';
    		$parter = $postData['member_code'];
    		$key = $md5Key;
    		$sign = "parter=".$parter."&type=".$type."&value=".$value."&orderid=".$orderid."&callbackurl=".$hrefbackurl;
    		$sign = md5($sign.$key);
    		$url=$apiUrl."?parter=".$parter."&type=".$type."&value=".$value."&orderid=".$orderid."&callbackurl=".$hrefbackurl."&attach=".$attach."&hrefbackurl=".$backurl."&payerIp=".$payerIp."&sign=".$sign;
    		$requestURI = $this->request->getPost('requestURI', 'trim');
    		$bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    		$data = array(
    					'order_number' => $shop_order_num,
    					'user_id' => $user_id,
    					'username' => $username,
    					'amount' => $deposit_amount,
    					'pay_time' => date('Y-m-d H:i:s'),
    					'source' => $_SERVER['HTTP_HOST'],
    					'requestURI' => $requestURI,
    					'card_id' => $card_id,
    					'bank_id' => $bank_id,
    		);
    		if (pay::addItem($data)) {
    				if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
    					header("location:" . $res->url);
    					die();
    				} else {
    					header("location:$url");
    					die();
    				}
    			}
    		} else {
    			if ($res == null) {
    				echo '生成订单失败';
    			} else {
    				log2file('mgPay.log', $postData);
    				log2file('mgPay.log', $res);
    			}
    		}
    }
    public function ydfBack(){
    	$response = file_get_contents('php://input');
    	$response1 = parse_str($response,$resArr);
    	if ($resArr ===  '') {
    		die('参数错误1');
    	}
    	if (!isset($resArr['ovalue'])) {//金额
    		die('参数错误3');
    	}
    	$orderAmount = $resArr['ovalue'];
    	if(!isset($resArr['orderid'])) {//商户生成订单
    		die('参数错误4');
    	}
    	$orderNo = $resArr['orderid'] != null ? $resArr['orderid'] : '';
    	if (!isset($resArr['opstate'])){
    		die('参数错误5');
    	}
    	if(!isset($resArr['sysorderid'])){//第三方订单
    		die('参数错误6');
    	}
    	$tradeNo = $resArr['sysorderid'] != null ? $resArr['sysorderid'] : '';
    	if (!isset($resArr['completiontime'])){
    		die('参数错误7');
    	}
    	if (!isset($resArr['systime'])){
    		die('参数错误8');
    	}
    	if (!isset($resArr['sign'])){
    		die('参数错误9');
    	}
    	$resArr['sign'] = trim($resArr['sign']);
    	$card_id = explode("_", $orderNo)[0];
    	$card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
    	$sign_text	= "orderid=".$orderNo."&opstate=".$resArr['opstate']."&ovalue=".$resArr['ovalue'];
    	$sign = md5($sign_text.$card['mer_key']);
    	if ($sign == $resArr['sign']) {

    		$order = pay::getItemByOrderNumber($orderNo);
    		$this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
    		$this->bak('gs4fj@5f!sda*dfuf', '0', $orderAmount, $orderNo, $tradeNo, $order);
    	} else {
    		echo '不合法数据';
    		$this->logdump("签名验证失败，程序中止。");
    		die;
    	}
    }

    public function jialianBack(){
        $response = file_get_contents('php://input');
        if ($response ===  '') die('参数错误0');
        parse_str($response, $response);
        if (!isset($response["returnCode"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        if($response['returnCode']==0){
            if (!isset($response["resultCode"])) {
                $this->logdump('参数错误3');
                die('参数错误3');
            }
            if (!isset($response["sign"])) {
                $this->logdump('参数错误4');
                die('参数错误4');
            }
            if (!isset($response["outChannelNo"])) {
                $this->logdump('参数错误5');
                die('参数错误5');
            }
            if (!isset($response["status"])) {
                $this->logdump('参数错误6');
                die('参数错误6');
            }
            if (!isset($response["mchId"])) {
                $this->logdump('参数错误7');
                die('参数错误7');
            }
            if (!isset($response["channel"])) {
                $this->logdump('参数错误8');
                die('参数错误8');
            }
            if (!isset($response["body"])) {
                $this->logdump('参数错误9');
                die('参数错误9');
            }
            if (!isset($response["outTradeNo"])) {
                $this->logdump('参数错误9');
                die('参数错误10');
            }
            if (!isset($response["amount"])) {
                $this->logdump('参数错误9');
                die('参数错误11');
            }
            $sign = $response["sign"];
            $card_id = explode("_", $response["outTradeNo"])[0];
            $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
            $order = pay::getItemByOrderNumber($response["outTradeNo"]);
            $unSignKeyList=array ("sign");
            $index=(int)$response["body"];
            $keys=explode('|',$card['mer_key']);
            if(empty($keys[$index])){
                $this->logdump('密钥错误'.$card['mer_key']);
                die('密钥错误');
            }
            $respSign =  $this->signMD5($response, $unSignKeyList,trim($keys[$index]));
            if($respSign !=  $response['sign']){
                $this->logdump('签名错误'.$keys[$index].'++++'.$card['mer_key']);
                die('签名错误');
            }
            if($response['status']=='02' && $response['resultCode']==0){
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->yiaibak('gs4fj@5f!sda*dfuf', 'success','fail', $response['amount'], $response['outTradeNo'], $response['outChannelNo'],$order);
            }else{
                $this->logdump("failed!交易失败{$response['errCode']}{$response['errCodeDes']},用户名{$order['username']} 交易订单{$response['outTradeNo']} 金额{$response['amount']} ");
                echo 'fails';
                die;
            }
        }else{
            $this->logdump('签名错误');
            die($response['returnMsg']);
        }
    }
    private function getPostDatas(){
        $datas=[];
        $datas['username'] = $this->request->getPost('username', 'trim');
        $datas['user_id'] = $this->request->getPost('user_id', 'intval');
        $datas['card_id'] = $this->request->getPost('card_id', 'trim');
        $datas['card_id'] = authcode($datas['card_id'], 'DECODE', 'a6sbe!x4^5d_ghd');
        $datas['bank_id'] = $this->request->getPost('bank_id', 'trim');
        $datas['bank_id'] = authcode($datas['bank_id'], 'DECODE', 'a6sbe!x4^5d_ghd');
        $datas['codes'] = $this->request->getPost('codes', 'trim');
        $datas['shop_order_num'] = $this->request->getPost('shop_order_num', 'trim');
        $datas['shop_order_num'] = authcode($datas['shop_order_num'], 'DECODE', 'a6sbe!x4^5d_ghd');
        $datas['deposit_amount'] = $this->request->getPost('deposit_amount', 'floatval');
        $datas['requestURI'] = $this->request->getPost('requestURI', 'trim');
        if (empty($datas['username']) || empty($datas['user_id']) || empty($datas['card_id']) || empty($datas['bank_id']) || empty($datas['codes']) || empty($datas['shop_order_num']) || empty($datas['deposit_amount']) || empty($datas['requestURI'])) die('参数错误');
        if ($datas['card_id'] == '') die('系统出错！(错误码：6003)');
        return $datas;
    }
    private function _handleOrderTimer($username,$user_id){
        if ($username =='' && $user_id == '') die('用户不存在');
        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;
        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));
        if ($hash != $timePart1 . $new_hash . $timePart2) die('系统出错！(错误码：6002)');
        if (time() > intval($time)) die('交易超时，请刷新充值页面重新充值');
    }
    private function _handleCards($card_id){
        $cards = cards::getItemsById(array($card_id));
        if (count($cards) == 0) die('系统出错！(错误码：6004)');
        return $cards;
    }
    private function _handleMerchantSN($codes,$username,$user_id){
        if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) die('系统出错！(错误码：6000)');
        if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) die('系统出错！(错误码：6001)');
    }
    private function _handleUrl($bank_id,$cards,$card_id){
        $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
        $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
        $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
        $shop_url = $cards[$card_id]['shop_url'];
        $callbackurl = $cards[$card_id]['call_back_url'];
        $returnurl = $cards[$card_id]['return_url'];
        if ($shop_url == "") {
            $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
            $returnurl = $domain . 'pay/hrefback.php';
        } else if (strpos($shop_url, '?c=pay') === 0) {

        } else if (strpos($shop_url, '?c=pay') > 0) {

        } else {
            $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
            $returnurl = $shop_url . '/hrefback.php';
        }
        return [$callbackurl,$returnurl];
    }
    private function _handleAdd($post){
        $data = array(
            'order_number' => $post['shop_order_num'],
            'user_id' => $post['user_id'],
            'username' => $post['username'],
            'amount' => $post['deposit_amount'],
            'pay_time' => date('Y-m-d H:i:s'),
            'source' => $_SERVER['HTTP_HOST'],
            'requestURI' => $post['requestURI'],
            'card_id' => $post['card_id'],
            'bank_id' => $post['bank_id'],
        );
        return pay::addItem($data);
    }
    private function _handleKeys($cards,$card_id){
        $key=$cards[$card_id]['mer_key']; //安全码(密钥)：
        $mchId=$cards[$card_id]['mer_no']; //商户ID didi
        return [$key,$mchId];
    }
    private function _hanldeJlPayType($cards,$card_id){
        $apiUrl = $GLOBALS['cfg']['pay_url']['jialian_api'];
        if ($cards[$card_id]["netway"] == "WX") {
            $service_type = "wxPubQR";
        } else if ($cards[$card_id]['netway'] == "ZFB") {
            $service_type = "alipayQR";
        } else{
            die('支付方式暂不支持!');
        }
        return [$apiUrl,$service_type];
    }
    private function signMD5($params,$unSignKeyList,$key,$type=1) {
        if(!is_array($params)){
            p($params);
            die('数据处理错误请重试');
        }
        ksort($params);
        $sourceSignString = $this->rsignString ($params, $unSignKeyList,$type);
        $sourceSignString .= "&key=" .$key;
        return strtoupper(md5($sourceSignString));
    }
    private function rsignString($data, $unSignKeyList,$type=1) {
        ksort($data);
        $fields = array();
        foreach($data as $key=>$value){
            if($value==null || $value==""){
                continue;
            }
            $bool=false;
            foreach ($unSignKeyList as $str) {
                if($key."" == $str.""){
                    $bool=true;
                    break;
                }
            }
            if($bool){
                continue;
            }
            if($type==2 && $key=='amount'){
                $value=sprintf("%.2f",$value);
            }
            array_push($fields, $key."=".(string)$value);
        }
        return join("&",$fields);
    }
    private function jl_http_post_data($url, $data_string ) {
        $cacert = '';	//CA根证书  (目前暂不提供)
        $CA = false ; 	//HTTPS时是否进行严格认证
        $TIMEOUT = 30;	//超时时间(秒)
        $SSL = substr($url, 0, 8) == "https://" ? true : false;

        $ch = curl_init ();
        if ($SSL && $CA) {
            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, true); 	// 	只信任CA颁布的证书
            curl_setopt($ch, CURLOPT_CAINFO, $cacert); 			// 	CA根证书（用来验证的网站证书是否是CA颁布）
            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 2); 		//	检查证书中是否设置域名，并且是否与提供的主机名匹配
        } else if ($SSL && !$CA) {
            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false); 	// 	信任任何证书
            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 2); 		// 	检查证书中是否设置域名
        }

        curl_setopt ( $ch, CURLOPT_TIMEOUT, $TIMEOUT);
        curl_setopt ( $ch, CURLOPT_CONNECTTIMEOUT, $TIMEOUT-2);
        curl_setopt ( $ch, CURLOPT_POST, 1 );
        curl_setopt ( $ch, CURLOPT_URL, $url );
        curl_setopt ( $ch, CURLOPT_POSTFIELDS, $data_string );
        curl_setopt ( $ch, CURLOPT_HTTPHEADER, array (
            'Content-Type:application/xml;charset=utf-8',
            'Content-Length:' . strlen( $data_string )
        ) );

        ob_start();
        curl_exec($ch);
        $return_content = ob_get_contents();
        ob_end_clean();

        $return_code = curl_getinfo ( $ch, CURLINFO_HTTP_CODE );
        return array (
            $return_code,
            $return_content
        );
    }
    private function _handle_jialian_key(&$keys,&$mchIds){
        if(!is_array($keys) || !is_array($mchIds)) die('商户号或密钥错误');
        if(empty($mchIds))die('请后台设置本支付的商户号');
        $count=count($mchIds);
        if($count<=0)die('请后台设置本支付的商户号');
        $index=date('s')*1%$count;
        $subMchId=(string)trim($mchIds[$index]);
        if(empty($subMchId))die('请后台设置本支付的商户号');

        $count1=count($keys);
        if($count1<=0)die('请后台设置本支付的商户密钥');
        if($count!=$count1)die('请后台设置本支付的商户密钥,设置格式如下:  " 商户密钥1 | 商户密钥2 | 商户密钥3 | ... | 商户密钥n "注:商户密钥顺序与子商户号顺序一致');
        $key=(string)trim($keys[$index]);
        unset($keys[$index],$mchIds[$index]);
        return [$key,$subMchId,$index];
    }
    private function _get_jialian_params($post,$mchId,$key,$service_type,$callbackurl,$returnurl,$index){
        $params=[];
        $params["tradeType"]='cs.pay.submit';
        $params["version"]='1.5';
        $params["channel"]=$service_type;
        $params["mchId"]=$mchId;
        $params["body"]=(string)$index;
        $params["outTradeNo"]=$post["shop_order_num"];
        $params["amount"]=$post["deposit_amount"];
        $params["currency"]="CNY";
        $params["notifyUrl"]=$callbackurl;
        $params["callbackUrl"]=$returnurl;
        $unSignKeyList = array ("sign");
        $sign = $this->signMD5($params, $unSignKeyList,$key);
        $params["sign"] = $sign;
        return $params;
    }
    public function jialianPay(){
        $post=$this->getPostDatas();
        $this->_handleOrderTimer($post['username'],$post['user_id']);
        $cards=$this->_handleCards($post['card_id']);
        $this->_handleMerchantSN($post['codes'],$post['username'],$post['user_id']);

        list($callbackurl,$returnurl)=$this->_handleUrl($post['bank_id'],$cards,$post['card_id']);
        list($key,$mchId)=$this->_handleKeys($cards,$post['card_id']);
        $mchIds=explode('|',$mchId);
        $keys=explode('|',$key);
        list($key,$mchId,$index)=$this->_handle_jialian_key($keys,$mchIds);
        list($apiUrl,$service_type)=$this->_hanldeJlPayType($cards,$post['card_id']);
        $params=$this->_get_jialian_params($post,$mchId,$key,$service_type,$callbackurl,$returnurl,$index);

        if(!$this->_handleAdd($post)){
            log2file('jialianPay.log', $params);
            die('生成订单失败!');
        }
        $logparams=$params;
        $jsonStr=json_encode($params);
        list ( $return_code, $return_content )  = $this->jl_http_post_data($apiUrl, $jsonStr);
        $respJson=json_decode($return_content,true);

        $logparams['key']=$key;
        if($respJson['returnCode'] != '0'){
            log2file('jialianPay.log', '第三方返回失败');
            log2file('jialianPay.log', $logparams);
            log2file('jialianPay.log', $key);
            log2file('jialianPay.log', $mchId);
            log2file('jialianPay.log', $respJson);
//            list($key,$mchId)=$this->_handle_jialian_key($keys,$mchIds);
//            $params=$this->_get_jialian_params($post,$mchId,$key,$service_type,$callbackurl,$returnurl);
//            $jsonStr=json_encode($params);
//            list ( $return_code, $return_content )  = $this->jl_http_post_data($apiUrl, $jsonStr);
//            $respJson=json_decode($return_content,true);
//            $logparams=$params;
//            $logparams['key']=$key;
//            if($respJson['returnCode'] != '0'){
//                log2file('jialianPay.log', $logparams);
//                log2file('jialianPay.log', $respJson);
//                die($respJson['returnMsg']);
//            }
            die('第三方支付错误:'.$return_code.$respJson['returnMsg']);
        }
        $unSignKeyList=['sign'];
        $respSign =  $this->signMD5($respJson, $unSignKeyList,$key,2);
        if(empty($respJson['sign'])){
            log2file('jialianPay.log', '第三方返回失败2');
            log2file('jialianPay.log', $logparams);
            log2file('jialianPay.log', $key);
            log2file('jialianPay.log', $mchId);
            log2file('jialianPay.log', $respJson);
            die('请求返回数据未签名');
        }
        if($respSign !=  $respJson['sign']){
            log2file('jialianPay.log', $logparams);
            log2file('jialianPay.log', $respJson);
            die('验证签名失败!');
        }
        if($respJson['returnCode'] == '0' && $respJson['resultCode'] == '0'){
            header("location:" . '../pay/qrcode.php?code=' .  $respJson['codeUrl'] . '&netway=' . $cards[$post['card_id']]['netway'] . '&amount=' . $post['deposit_amount'] ."&cdn=" . parent::$PublicImgCdn);
            die();
        }else{
            log2file('jialianPay.log', $respJson);
            die('生成订单失败!第三方返回错误信息'.$respJson['returnMsg']);
        }

    }


    public function changchengfuBack(){
        $response = file_get_contents('php://input');
        if ($response ===  '') die('参数错误0');
        parse_str($response, $response);
        if (!isset($response["merchno"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        if (!isset($response["amount"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        if (!isset($response["traceno"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        if (!isset($response["orderno"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        if (!isset($response["status"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }
        if (!isset($response["signature"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }
        if (!isset($response["channelOrderno"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }
        if (!isset($response["channelTraceno"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }
        if (!isset($response["merchName"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }
        $sign = $response["signature"];
        $card_id = explode("_", $response["traceno"])[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $order = pay::getItemByOrderNumber($response["traceno"]);
        unset($response['signature']);
        ksort($response);
        $a='';
        foreach($response as $x=>$x_value)
        {
            if($x_value){
                $a=$a.$x."=".$x_value."&";
            }
        }
        if ($sign != strtoupper(md5($a.$card['mer_key']))) {
            $this->logdump('签名错误');
            die('签名错误');
        }
        if($response['status']==1){
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->yiaibak('gs4fj@5f!sda*dfuf', 'success','fail', $response['amount'], $response['traceno'], $response['orderno'],$order);
        }else{
            $this->logdump("failed!交易失败,用户名{$order['username']} 交易订单{$response['traceno']} 金额{$response['amount']} ");
            echo 'fails';
            die;
        }
    }
    public function changchengfuPay(){
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $codes = $this->request->getPost('codes', 'trim');
        $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
        $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');
        $requestURI = $this->request->getPost('requestURI', 'trim');
        if (empty($username) || empty($user_id) || empty($card_id) || empty($bank_id) || empty($codes) || empty($shop_order_num) || empty($deposit_amount) || empty($requestURI)) die('参数错误');
        if ($card_id == '') die('系统出错！(错误码：6003)');
        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;
        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));
        if ($hash != $timePart1 . $new_hash . $timePart2) die('系统出错！(错误码：6002)');
        $cards = cards::getItemsById(array($card_id));
        if (count($cards) == 0) die('系统出错！(错误码：6004)');
//        if (time() > intval($time)) die('交易超时，请刷新充值页面重新充值');
        if ($username =='' && $user_id == '') die('用户不存在');
        if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) die('系统出错！(错误码：6000)');
        if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) die('系统出错！(错误码：6001)');
        $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
        $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
        $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
        $shop_url = $cards[$card_id]['shop_url'];
        $callbackurl = $cards[$card_id]['call_back_url'];
        $returnurl = $cards[$card_id]['return_url'];
        if ($shop_url == "") {
            $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
            $returnurl = $domain . 'pay/hrefback.php';
        } else if (strpos($shop_url, '?c=pay') === 0) {

        } else if (strpos($shop_url, '?c=pay') > 0) {

        } else {
            $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
            $returnurl = $shop_url . '/hrefback.php';
        }
        $service_type = '';
        $type=1;
        $apiUrl = $GLOBALS['cfg']['pay_url']['changchengfu_api'];
        if ($cards[$card_id]["netway"] == "WX") {
            $service_type = "2";
        } else if ($cards[$card_id]['netway'] == "ZFB") {
            $service_type = "1";
        } else if ($cards[$card_id]['netway'] == "QQ") {
            $service_type = "4";
        } else if ($cards[$card_id]['netway'] == "WX_WAP") {
            $type=2;
            $apiUrl = $GLOBALS['cfg']['pay_url']['changchengfu_wap_api'];
            $service_type = "2";
        } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
            $type=2;
            $apiUrl = $GLOBALS['cfg']['pay_url']['changchengfu_wap_api'];
            $service_type = "1";
        } else{
            die('支付方式暂不支持!');
        }

        $requestURI = $this->request->getPost('requestURI', 'trim');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $data = array(
            'order_number' => $shop_order_num,
            'user_id' => $user_id,
            'username' => $username,
            'amount' => $deposit_amount,
            'pay_time' => date('Y-m-d H:i:s'),
            'source' => $_SERVER['HTTP_HOST'],
            'requestURI' => $requestURI,
            'card_id' => $card_id,
            'bank_id' => $bank_id,
        );

        $key=$cards[$card_id]['mer_key']; //安全码(密钥)：
        $jsonResponse=$this->changChengFuCurlPostRequest($cards[$card_id]['mer_no'],$shop_order_num,$service_type,$deposit_amount,$callbackurl,$apiUrl,$key,$returnurl,$type);
        $response=json_decode($jsonResponse,true);

        if (!isset($response['respCode'])) {
            log2file('mgPay.log', '第三方返回数据异常');
            log2file('mgPay.log', 'merchno=' . $cards[$card_id]['mer_no'] . ', timetraceno=' . $shop_order_num . ', paytype=' . $service_type . ', amount=' . $deposit_amount . ', notifyUrl=' . $callbackurl . ', apiUrl=' . $apiUrl . ', returnUrl=' . $returnurl . ', type=' . $type);
            log2file('mgPay.log', $jsonResponse);
            showMSG('第三方返回数据异常');
        }

        if ($response['respCode'] !== '00') {
            log2file('mgPay.log', $response['message']);
            log2file('mgPay.log', 'merchno=' . $cards[$card_id]['mer_no'] . ', timetraceno=' . $shop_order_num . ', paytype=' . $service_type . ', amount=' . $deposit_amount . ', notifyUrl=' . $callbackurl . ', apiUrl=' . $apiUrl . ', returnUrl=' . $returnurl . ', type=' . $type);
            log2file('mgPay.log', $jsonResponse);
            showMSG($response['message']);
        }

        if (pay::addItem($data)) {
            if($response['respCode']=='00' && isset($response['barCode']) && !empty($response['barCode'])){
                if($type==1){
                    header("location:" . '../pay/qrcode.php?code=' . $response['barCode'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                }else{
                    header("location:".$response['barCode']);
                }
                die();
            }else{
                log2file('caifubaoPay.log', "支付失败!返回json数据为:".$jsonResponse);
                die('第三方支付错误信息:'.$response['message']);
            }
        }else {
            $post_data = array(
                'merchno' => $cards[$card_id]['mer_no'],
                'amount' => $deposit_amount,
                'traceno' => $shop_order_num,
                'payType' => $service_type,
                'notifyUrl'=>$callbackurl,
                'goodsName'=>'pay',
                'settleType'=>'1',
                'remark'=>"remark"
            );
            log2file('caifubaoPay.log', $post_data);
            die('生成订单失败!');
        }
    }
    private function changChengFuCurlPostRequest($merchno,$timetraceno,$paytype,$amount,$notifyUrl,$apiUrl,$key,$returnUrl,$type=1,$timeout = 120){
        $post_data = array(
            'merchno' => $merchno,
            'amount' => $amount,
            'traceno' => $timetraceno,
            'payType' => $paytype,
            'notifyUrl'=>$notifyUrl,
            'goodsName'=>'pay',
            'remark'=>"remark"
        );
        if($type==1){
            $post_data['settleType']='1';
        }else{
            $post_data['returnUrl']=$returnUrl;
        }
        ksort($post_data);
        $a='';
        foreach($post_data as $x=>$x_value)
        {
            $a=$a.$x."=".iconv('UTF-8', 'GB2312',$x_value)."&";
        }
        $b=md5($a.$key);
        $c=$a.'signature'.'='.$b;
        if($apiUrl == '' || $c == '' || $timeout <=0){
            return false;
        }
        $con = curl_init((string)$apiUrl);
        curl_setopt($con, CURLOPT_HEADER, false);
        curl_setopt($con, CURLOPT_POSTFIELDS, $c);
        curl_setopt($con, CURLOPT_POST,true);
        curl_setopt($con, CURLOPT_RETURNTRANSFER,true);
        curl_setopt($con, CURLOPT_TIMEOUT,(int)$timeout);
        return iconv('GB2312', 'UTF-8',curl_exec($con));
    }
    public function caifubaoBack(){
        $response = file_get_contents('php://input');
        if ($response ===  '') die('参数错误0');
        parse_str($response, $response);
        if (!isset($response["P_UserId"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        if (!isset($response["P_OrderId"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        if (!isset($response["P_SMPayId"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        if (!isset($response["P_FaceValue"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        if (!isset($response["P_ChannelId"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }
        if (!isset($response["P_Subject"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }
        if (!isset($response["attach"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }
        if (!isset($response["P_PostKey"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }
        if (!isset($response["P_Type"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }
        $sign = $response["P_PostKey"];
        $card_id = explode("_", $response["P_OrderId"])[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $order = pay::getItemByOrderNumber($response["P_OrderId"]);
        //md5(P_UserId|P_OrderId|P_SMPayId|P_FaceValue|P_ChannelId|秘钥)
        $signSource = sprintf("%s|%s|%s|%s|%s|%s", $response["P_UserId"], $response["P_OrderId"], $response["P_SMPayId"], $response["P_FaceValue"],$response["P_ChannelId"], $card['mer_key']);

        if ($sign != md5($signSource)) {
            $this->logdump('签名错误');
            die('签名错误');
        }
        $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
        $ordernumber=substr($response["P_OrderId"], 0, 32);
        $this->yiaibak('gs4fj@5f!sda*dfuf', 'success','fail', $response['P_FaceValue'], $ordernumber, $response['P_SMPayId'],$order);
    }
    public function caifubaoPay(){
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $codes = $this->request->getPost('codes', 'trim');
        $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
        $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');
        $requestURI = $this->request->getPost('requestURI', 'trim');
        if ($card_id == '') die('系统出错！(错误码：6003)');
        if (empty($username) || empty($user_id) || empty($card_id) || empty($bank_id) || empty($codes) || empty($shop_order_num) || empty($deposit_amount) || empty($requestURI)) die('参数错误');
        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;
        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));
        if ($hash != $timePart1 . $new_hash . $timePart2) die('系统出错！(错误码：6002)');
        $cards = cards::getItemsById(array($card_id));
        if (count($cards) == 0) die('系统出错！(错误码：6004)');
        if (time() > intval($time)) die('交易超时，请刷新充值页面重新充值');
        if ($username =='' && $user_id == '') die('用户不存在');
        if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) die('系统出错！(错误码：6000)');
        if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) die('系统出错！(错误码：6001)');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
        $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
        $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
        $shop_url = $cards[$card_id]['shop_url'];
        $callbackurl = $cards[$card_id]['call_back_url'];
        $returnurl = $cards[$card_id]['return_url'];
        if ($shop_url == "") {
            $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
            $returnurl = $domain . 'pay/hrefback.php';
        } else if (strpos($shop_url, '?c=pay') === 0) {

        } else if (strpos($shop_url, '?c=pay') > 0) {

        } else {
            $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
            $returnurl = $shop_url . '/hrefback.php';
        }
        $service_type = '';
        $apiUrl = $GLOBALS['cfg']['pay_url']['caifubao_api'];
        if ($cards[$card_id]["netway"] == "WX") {
            $service_type = "2";
        } else if ($cards[$card_id]['netway'] == "ZFB") {
            $service_type = "4";
        } else if ($cards[$card_id]['netway'] == "QQ") {
            $service_type = "6";
        } else{
            die('支付方式暂不支持!');
        }
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $data = array(
            'order_number' => $shop_order_num,
            'user_id' => $user_id,
            'username' => $username,
            'amount' => $deposit_amount,
            'pay_time' => date('Y-m-d H:i:s'),
            'source' => $_SERVER['HTTP_HOST'],
            'requestURI' => $requestURI,
            'card_id' => $card_id,
            'bank_id' => $bank_id,
        );
        $pay=array();
        $key=$cards[$card_id]['mer_key']; //安全码(密钥)：
        $pay['P_UserId']=$cards[$card_id]['mer_no']; //商户ID didi
        $pay['P_OrderId']=(string)$shop_order_num; //商户订单号
        $pay['P_FaceValue']=(string)$deposit_amount; //面值
        $pay['P_CustormId']=$user_id.'_'.md5($pay['P_UserId'].'|'.$key.'|'.$user_id);//用户编号
        $pay['P_Type']=(string)$service_type;//充值渠道	1:微信支付 2:微信扫码 3:支付宝支付 4:支付宝扫码 5:快捷支付
        $pay['P_SDKVersion']='3.1.3';//SDK 版本
        $pay['P_RequestType']='2';//0:web 1:wap 2:iPhone 3:Android
        $pay['P_Subject']='pay';//产品名称
        $pay['attach']=(string)$card_id;//自定义
        $pay['P_Result_URL']=(string)$returnurl;//充值状态通知地址
        $pay['P_Notify_URL']=(string)$callbackurl;//充值后网页跳转地址
        $pay['P_PostKey']=md5($pay['P_UserId'].'|'.$pay['P_OrderId'].'|'.$pay['P_FaceValue'].'|'.$pay['P_Type'].'|'.$pay['P_SDKVersion'].'|'.$pay['P_RequestType'].'|'.$key);//签名认证串
        if (pay::addItem($data)) {
            $jsonResponse = $this->curlPostData($apiUrl, http_build_query($pay), $info);
            $response=json_decode($jsonResponse,true);
            if($response['status']==0 && $response['result_code']==0){
                if(!isset($response['code_url'])){
                    if(isset($response['code_img_url'])){
                        $response['code_url']=$response['code_img_url'];
                        header("location:" . '../pay/qrcodeurl.php?code=' . $response['code_img_url'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                        die();
                    }else{
                        log2file('caifubaoPay.log', $pay);
                        log2file('caifubaoPay.log', $jsonResponse);
                        die('生成订单失败!第三方返回参数错误');
                    }
                }
                header("location:" . '../pay/qrcode.php?code=' . $response['code_url'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                die();
            }else{
                log2file('caifubaoPay.log', $pay);
                log2file('caifubaoPay.log', $jsonResponse);
                die('生成订单失败!'.$response['message']);
            }
        }else {
            log2file('caifubaoPay.log', $pay);
            die('生成订单失败!');
        }
    }
    /**
     * 金银宝支付
     */
    public function jinyinbaoPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }
        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;
        if (time() > intval($time)) {
            die('交易超时，请刷新充值页面重新充值');
        }
        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));
        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }
        $cards = cards::getItemsById(array($card_id));
        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }
        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');
            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }
            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }
            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');
            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];
            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }
            $service_type = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['jinyinbao_api'];
            if ($cards[$card_id]["netway"] == "WX") {
                $service_type = "wxpay";
            }elseif($cards[$card_id]["netway"] == "ZFB")
            {
                $service_type = "alipay";
            }
            $postData = array();
            $postData['parter'] = $cards[$card_id]['mer_no'];
            $postData['PayMethod'] = $service_type;
            $postData['paymoney'] = $deposit_amount;
            $postData['ordernumber'] = substr($shop_order_num, 0, 32);
            $postData['callbackurl'] = $callbackurl;
            $postData['hrefbackurl'] = $returnurl;
            $postData['attach'] = 'pay';
            $signSource = sprintf("partner=%s&PayMethod=%s&paymoney=%s&ordernumber=%s&callbackurl=%s%s", $postData['parter'], $service_type, $deposit_amount, $postData['ordernumber'], $callbackurl, $cards[$card_id]['mer_key']);
            $sign = md5($signSource);
            $postData['sign'] = $sign;
            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
            $data = array(
                'order_number' => $postData['ordernumber'],
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (pay::addItem($data)) {
                //构造要请求的参数数组，无需改动
                $parameter = array(
                    "merchant_no" => $cards[$card_id]['mer_no'],
                    "version" => '1.0.3',
                    "out_trade_no" => $postData['ordernumber'],
                    "payment_type" => $service_type,
                    "payment_bank" => '',
                    "notify_url" => $callbackurl,
                    "page_url" => $returnurl,
                    "total_fee" => $deposit_amount,
                    "trade_time" => date('YmdHis'),
                    "user_account" => 'wangchao',
                    "body" => '',
                    "channel" => 'default'
                );
                $para_filter = $this->paraFilter($parameter);
                $para_sort = $this->argSort($para_filter);
                $parameter['sign'] = $this->buildRequestMysign($para_sort, $cards[$card_id]['mer_key']);
                $parameter['pay_url'] = $apiUrl;
                self::$view->setVar('parameter', $parameter);
                self::$view->render('pay_jinyinbao');
                exit;
            }
        } else {
            die();
        }
    }
    /**
     * 金银宝回掉
     */
    public function jinyinbaoBack()
    {
        $response = file_get_contents('php://input');
        parse_str($response,$resArr);
        if ($resArr ===  '') {
            die('参数错误1');
        }
        if ($response ===  null) {
            die('参数错误2');
        }
        if (!isset($resArr['sign'])) {//金额
            die('参数错误3');
        }
        $orderAmount = $resArr['total_fee'];
        if(!isset($resArr['total_fee'])) {//商户生成订单
            die('参数错误4');
        }
        $orderNo = $resArr['out_trade_no'] != null ? $resArr['out_trade_no'] : '';
        if (!isset($resArr['obtain_fee'])){
            die('参数错误5');
        }
        if(!isset($resArr['trade_no'])){//第三方订单
            die('参数错误6');
        }
        $tradeNo = $resArr['trade_no'] != null ? $resArr['trade_no'] : '';

        if (!isset($resArr['notify_time'])){
            die('参数错误7');
        }
        if (!isset($resArr['merchant_no'])){
            die('参数错误8');
        }
        if (!isset($resArr['obtain_fee'])){
            die('参数错误9');
        }
        if (!isset($resArr['payment_type'])){
            die('参数错误9');
        }
        if (!isset($resArr['trade_status'])){
            die('参数错误9');
        }
        if (!isset($resArr['version'])){
            die('参数错误9');
        }
        $res=$this->verifyNotify($resArr);
        if ($res) {
            $order = pay::getItemByOrderNumber($orderNo);
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->bak('gs4fj@5f!sda*dfuf', 'SUCCESS', $orderAmount, $orderNo, $tradeNo, $order);
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    /**
     * 针对notify_url验证消息是否是支付服务器发出的合法消息
     * @return 验证结果
     */
    function verifyNotify($post){
        if(empty($post)) {//判断POST来的数组是否为空
            return false;
        }
        else {
            $sign=$post["sign"];
            unset($post["sign"]);
            //生成签名结果
            $isSign = $this->getSignVeryfy($post, $sign);
            if ($isSign) {
                return true;
            } else {
                return false;
            }
        }
    }
    /**
     * 获取返回时的签名验证结果
     * @param $para_temp 通知返回来的参数数组
     * @param $sign 返回的签名结果
     * @return 签名验证结果
     */
    function getSignVeryfy($para_temp, $sign) {
        //除去待签名参数数组中的空值和签名参数
        $para_filter = $this->paraFilter($para_temp);

        //对待签名参数数组排序
        $para_sort = $this->argSort($para_filter);

        //把数组所有元素，按照“参数=参数值”的模式用“&”字符拼接成字符串
        $prestr = $this->createLinkstring($para_sort);
        $resArr['sign'] = trim($sign);
        $card_id = explode("_", $para_temp['out_trade_no'])[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $isSgin = false;
        switch (strtoupper('MD5')) {
            case "MD5" :
                $isSgin = $this->md5Verify($prestr, $sign, $card['mer_key']);
                break;
            default :
                $isSgin = false;
        }

        return $isSgin;
    }
    function md5Verify($prestr, $sign, $key) {
        $prestr = $prestr . $key;
        $mysgin = md5($prestr);
        if($mysgin == $sign) {
            return true;
        }
        else {
            return false;
        }
    }
    /**
     * 对数组排序
     * @param $para
     * @return mixed
     */
    function argSort($para) {
        ksort($para);
        reset($para);
        return $para;
    }
    /**
     *
     * @param $para
     * @return array
     */
    function paraFilter($para) {
        $para_filter = array();
        while (list ($key, $val) = each ($para)) {
            if($key == "sign")continue;
            else	$para_filter[$key] = $para[$key];
        }
        return $para_filter;
    }

    /**
     * 金银宝签名生成
     * @param $para_sort
     * @return string
     */
    function buildRequestMysign($para_sort,$secretKey) {
        //把数组所有元素，按照“参数=参数值”的模式用“&”字符拼接成字符串
        $prestr = $this->createLinkstring($para_sort);
//        echo $prestr;exit;
        $mysign = "";
        switch (strtoupper(trim(strtoupper('MD5')))) {
            case "MD5" :
                $mysign = $this->md5Sign($prestr, $secretKey);
                break;
            default :
                $mysign = "";
        }

        return $mysign;
    }
    /**
     * 签名字符串
     * @param $prestr 需要签名的字符串
     * @param $key 私钥
     * @return 签名结果
     */
    function md5Sign($prestr, $key) {
        $prestr = $prestr . $key;
        return md5($prestr);
    }
    /**把数组所有元素，按照“参数=参数值”的模式用“&”字符拼接成字符串-金银宝
     * @param $para
     * @return bool|string
     */
    function createLinkstring($para) {
        $arg  = "";
        while (list ($key, $val) = each ($para)) {
            $arg.=$key."=".$val."&";
        }
        //去掉最后一个&字符
        $arg = substr($arg,0,count($arg)-2);

        //如果存在转义字符，那么去掉转义
        if(get_magic_quotes_gpc()){$arg = stripslashes($arg);}

        return $arg;
    }



    public function yunxunBack(){
        $response = file_get_contents('php://input');
        if ($response ===  '') die('参数错误0');
        parse_str($response, $response);
        if (!isset($response["partner"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $partner = $response["partner"];
        //>>商户订单号
        if (!isset($response["ordernumber"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $ordernumber = $response["ordernumber"];
        if (!isset($response["orderstatus"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $orderstatus = $response["orderstatus"];
        //>>订单结果0：支付成功  -1 请求参数无效   -2 签名错误
        if (!isset($response["paymoney"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $paymoney = $response["paymoney"];
        //>>易爱订单号
        if (!isset($response["sysnumber"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }
        $sysnumber = $response["sysnumber"];
        //>>易爱订单时间
        if (!isset($response["sign"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }
        $sign = $response["sign"];
        $card_id = explode("_", $ordernumber)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $order = pay::getItemByOrderNumber($ordernumber);

        $signSource = sprintf("partner=%s&ordernumber=%s&orderstatus=%s&paymoney=%s%s", $partner, $ordernumber, $orderstatus, $paymoney, $card['mer_key']);

        if ($sign != md5($signSource)) {
            $this->logdump('签名错误');
            die('签名错误');
        }
        if ($orderstatus==1) {
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $ordernumber=substr($ordernumber, 0, 32);
            $this->yiaibak('gs4fj@5f!sda*dfuf', 'ok','fails', $paymoney, $ordernumber, $sysnumber,$order);
        } else {
            $this->logdump("failed!交易失败,用户名{$order['username']} 交易订单{$ordernumber} 金额{$paymoney} ");
            echo 'fails';
            die;
        }
    }
    public function yunxunPay(){
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $codes = $this->request->getPost('codes', 'trim');
        $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
        $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');
        $requestURI = $this->request->getPost('requestURI', 'trim');
        if ($card_id == '') die('系统出错！(错误码：6003)');
        if (empty($username) || empty($user_id) || empty($card_id) || empty($bank_id) || empty($codes) || empty($shop_order_num) || empty($deposit_amount) || empty($requestURI)) die('参数错误');
        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;
        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));
        if ($hash != $timePart1 . $new_hash . $timePart2) die('系统出错！(错误码：6002)');
        $cards = cards::getItemsById(array($card_id));
        if (count($cards) == 0) die('系统出错！(错误码：6004)');
        if (time() > intval($time)) die('交易超时，请刷新充值页面重新充值');
        if ($username =='' && $user_id == '') die('用户不存在');
        if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) die('系统出错！(错误码：6000)');
        if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) die('系统出错！(错误码：6001)');
        $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
        $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
        $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
        $shop_url = $cards[$card_id]['shop_url'];
        $callbackurl = $cards[$card_id]['call_back_url'];
        $returnurl = $cards[$card_id]['return_url'];
        if ($shop_url == "") {
            $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
            $returnurl = $domain . 'pay/hrefback.php';
        } else if (strpos($shop_url, '?c=pay') === 0) {

        } else if (strpos($shop_url, '?c=pay') > 0) {

        } else {
            $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
            $returnurl = $shop_url . '/hrefback.php';
        }
        $service_type = '';
        $apiUrl = $GLOBALS['cfg']['pay_url']['yunxun_api'];

        if ($cards[$card_id]["netway"] == "WX") {
            $service_type = "0001";
        } else if ($cards[$card_id]["netway"] == "QQ") {
            $service_type = "0003";
        } else if ($cards[$card_id]['netway'] == "ZFB") {
            $service_type = "0002";
        }else if ($cards[$card_id]['netway'] === 'WY') {
            $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
            switch ($third_party_bank_id) {
                // 工商银行
                case '1':
                    $service_type = 'ICBC';
                    break;
                // 农业银行
                case '2':
                    $service_type = 'ABC';
                    break;
                // 建设银行
                case '3':
                    $service_type = 'CCB';
                    break;
                // 招商银行
                case '4':
                    $service_type = 'CMB';
                    break;
                // 交通银行
                case '5':
                    $service_type = 'BOCO';
                    break;
                // 中信银行
                case '6':
                    $service_type = 'CTTIC';
                    break;
                // 邮政储蓄
                case '7':
                    $service_type = 'PSBS';
                    break;
                // 中国光大银行
                case '8':
                    $service_type = 'CEB';
                    break;
                // 民生银行
                case '9':
                    $service_type = 'CMBC';
                    break;
                // 上海浦东发展银行
                /*case '10':
                    $service_type = '977';
                    break;*/
                // 兴业银行
                case '11':
                    $service_type = 'CIB';
                    break;
                // 广发银行
                case '12':
                    $service_type = 'GDB';
                    break;
                // 平安银行
                case '13':
                    $service_type = 'PINGANBANK';
                    break;
                // 华夏银行
                /*case '15':
                    $service_type = '982';
                    break;*/
                // 东莞银行
                /*case '16':
                    break;*/
                // 渤海银行
                /*case '17':
                    $service_type = '988';
                    break;*/
                // 浙商银行
                /*case '19':
                    $service_type = '968';
                    break;*/
                // 北京银行
                case '20':
                    $service_type = 'BCCB';
                    break;
                // 中国银行
                case '22':
                    $service_type = 'BOC';
                    break;
                default:
                    die('当前银行该支付方式暂不支持!');
                    break;
            }
        }
        $postData = array();
        $postData['parter'] = $cards[$card_id]['mer_no'];
        $postData['PayMethod'] = $service_type;
        $postData['paymoney'] = $deposit_amount;
        $postData['ordernumber'] = substr($shop_order_num, 0, 32);
        $postData['callbackurl'] = $callbackurl;
        $postData['hrefbackurl'] = $returnurl;
        $postData['attach'] = 'pay';
        $signSource = sprintf("partner=%s&PayMethod=%s&paymoney=%s&ordernumber=%s&callbackurl=%s%s", $postData['parter'], $service_type, $deposit_amount, $postData['ordernumber'], $callbackurl, $cards[$card_id]['mer_key']);
        $sign = md5($signSource);
        $postData['sign'] = $sign;
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $data = array(
            'order_number' => $postData['ordernumber'],
            'user_id' => $user_id,
            'username' => $username,
            'amount' => $deposit_amount,
            'pay_time' => date('Y-m-d H:i:s'),
            'source' => $_SERVER['HTTP_HOST'],
            'requestURI' => $requestURI,
            'card_id' => $card_id,
            'bank_id' => $bank_id,
        );
        if (pay::addItem($data)) {
            $postUrl = $apiUrl."?PayMethod=".$postData['PayMethod'];
            $postUrl.="&partner=".$postData['parter'];
            $postUrl.="&paymoney=".$postData['paymoney'];
            $postUrl.="&ordernumber=".$postData['ordernumber'];
            $postUrl.="&callbackurl=".$callbackurl;
//            $postUrl.="&hrefbackurl=".$hrefbackurl;
            $postUrl.="&attach=".$postData['attach'];
            $postUrl.="&sign=".$sign;
            header("location:$postUrl");
            die();
        } else {
            log2file('yiaiPay.log', $postData);
            die('生成订单失败');
        }
    }

    public function mgPay(){//芒果支付
    	//echo '1';die;
    	$username = $this->request->getPost('username', 'trim');
    	$user_id = $this->request->getPost('user_id', 'intval');
    	$card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    	$bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    	if ($card_id == '') {
    		die('系统出错！(错误码：6003)');
    	}

    	$hash = $this->request->getPost('hash', 'trim');
    	$timePart1 = substr($hash, 0, 5);
    	$timePart2 = substr($hash, 5 + 32, 5);
    	$time = $timePart1 . $timePart2;
    	if (time() > intval($time)) {
    		die('交易超时，请刷新充值页面重新充值');
    	}
    	$new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));
    	if ($hash != $timePart1 . $new_hash . $timePart2) {
    		die('系统出错！(错误码：6002)');
    	}
    	$cards = cards::getItemsById(array($card_id));
    	if (count($cards) == 0) {
    		die('系统出错！(错误码：6004)');
    	}
    	if ($username != '' && $user_id != '') {
    		$codes = $this->request->getPost('codes', 'trim');
    		if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
    			die('系统出错！(错误码：6000)');
    		}
    		if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
    			die('系统出错！(错误码：6001)');
    		}
    		$card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    		$shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
    		$deposit_amount = $this->request->getPost('deposit_amount', 'floatval');
    		$protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
    		$domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
    		$payName = $GLOBALS['cfg']['pay_name'][$bank_id];
    		$shop_url = $cards[$card_id]['shop_url'];
    		$callbackurl = $cards[$card_id]['call_back_url'];
    		$returnurl = $cards[$card_id]['return_url'];
    		if ($shop_url == "") {
    			$callbackurl = $domain . 'pay/' . $payName . 'Back.php';
    			$returnurl = $domain . 'pay/hrefback.php';
    		} else if (strpos($shop_url, '?c=pay') === 0) {
    		} else if (strpos($shop_url, '?c=pay') > 0) {
    		} else {
    			$callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
    			$returnurl = $shop_url . '/hrefback.php';
    		}
    		$service_type = '';
    		$apiUrl = $GLOBALS['cfg']['pay_url']['mg_api'];
    		if ($cards[$card_id]["netway"] == "WX") {
    			$service_type = "wxbs";
    		}else if($cards[$card_id]["netway"] == "WX_WAP"){
    			$service_type = "wxh5";
    		} else if ($cards[$card_id]['netway'] == "ZFB") {
    			$service_type = "zfbbs";
    		}else if ($cards[$card_id]['netway'] == "QQ") {
    			$service_type = "qqbs";
            }else if ($cards[$card_id]['netway'] == "QQ_WAP") {
                $service_type = "qqh5";
    		} else if ($cards[$card_id]['netway'] === 'WY') {
    			$service_type = "gateway";
    			$third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
    			$apiUrl = $GLOBALS['cfg']['pay_url']['mg_api'];
    			switch ($third_party_bank_id) {
    				// 工商银行1
    				case '1':
    					$bankId = '102';
    					break;
    					// 农业银行1
    				case '2':
    					$bankId = '103';
    					break;
    					// 建设银行1
    				case '3':
    					$bankId = '105';
    					break;
    					// 招商银行1
    				case '4':
    					$bankId = '308';
    					break;
    					// 交通银行1
    				case '5':
    					$bankId = '301';
    					break;
    					// 中信银行1
    				case '6':
    					$bankId = '302';
    					break;
    					// 邮政储蓄1
    				case '7':
    					$bankId = '403';
    					break;
    					// 中国光大银行1
    				case '8':
    					$bankId = '303';
    					break;
    					// 民生银行1
    				case '9':
    					$bankId = '305';
    					break;
    					// 兴业银行1
    				case '11':
    					$bankId = '309';
    					break;
    					// 广发银行1
    				case '12':
    					$bankId = '306';
    					break;
    					// 平安银行1
//     				case '13':
//     					$bankId = 'PAB';
    					// 北京银行1
//     				case '20':
//     					$bankId = 'BCCB';
//     					break;
    					// 中国银行1
    				case '22':
    					$bankId = '104';
    					break;
    			}
    			$orderCreateTime = date('YmdHis', time());
    			$lastPaytime = date('YmdHis', time()+24*60*60);
    			$requestURI = $this->request->getPost('requestURI', 'trim');
    			$bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    			$orderCreateTime = date('YmdHis', time());
    			$md5Key = $cards[$card_id]['mer_key'];
    			$postData['type_code'] = $service_type;//支付类型1
    			$postData['member_code'] = $cards[$card_id]['mer_no'];//商户号1
    			$postData['amount'] = $deposit_amount;//金额1
    			$postData['bank_segment'] = '103';//这B参数是必填
    			$postData['notify_url'] = $callbackurl;//回调地址1
    			$postData['down_sn'] = $shop_order_num;//订单号1
    			$postData['subject'] = '充值';//订单标题（可空）1
    			$postData['down_sn'] = $shop_order_num;
    			$path = $cards[$card_id]['card_pass'];
    			$path = $this->formatKey($path);
    			if($deposit_amount < '10'){
    				showMSG("充值金额不能小于10元");
    			}
    			$dataSign['type_code'] = $service_type;
    			$dataSign['subject'] = $postData['subject'];
    			$dataSign['amount'] = $postData['amount'];
    			$dataSign['bank_segment'] = $bankId;
    			$dataSign['notify_url'] = $callbackurl;
    			$dataSign['user_type'] = '1';
    			$dataSign['agent_type'] = '1';
    			$dataSign['card_type'] = '1';
    			$dataSign['down_sn'] = $shop_order_num;
    			$dataSign['return_url'] = $returnurl;
    			$dataSign['sign'] = $this->makeInSign($dataSign, $md5Key);

    			$post = array(
    					'member_code' => $postData['member_code'],
    					'cipher_data' => $this->encrypt($dataSign, $path),
    			);
    			//提交到接口
    			$url = $apiUrl;
     			$res = $this->mgCurlPost($url, $post);

     			if (!isset($res['code'])) {
                    log2file('mgPay.log', '第三方返回数据异常');
                    log2file('mgPay.log', $postData);
                    log2file('mgPay.log', $res);
                    showMSG('第三方返回数据异常');
                }

                if ($res['code'] !== '0000') {
                    log2file('mgPay.log', $res['msg']);
                    log2file('mgPay.log', $postData);
                    log2file('mgPay.log', $res);
                    showMSG($res['msg']);
                }

    			$requestURI = $this->request->getPost('requestURI', 'trim');
    			$bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

    			$data = array(
    					'order_number' => $postData['down_sn'],
    					'user_id' => $user_id,
    					'username' => $username,
    					'amount' => $deposit_amount,
    					'pay_time' => date('Y-m-d H:i:s'),
    					'source' => $_SERVER['HTTP_HOST'],
    					'requestURI' => $requestURI,
    					'card_id' => $card_id,
    					'bank_id' => $bank_id,
    			);
    			if (pay::addItem($data)) {
    				$headerUrl = $res['code_url'];
    				header("location:$headerUrl");
    			} else {
    				log2file('mgPay.log', $postData);
    				die('生成订单失败');
    			}
    			die;
    		}
    		$orderCreateTime = date('YmdHis', time());
    		$md5Key = $cards[$card_id]['mer_key'];
    		$postData['type_code'] = $service_type;//支付类型1
    		$postData['member_code'] = $cards[$card_id]['mer_no'];//商户号1
    		$postData['amount'] = $deposit_amount;//金额1
    		$postData['bank_segment'] = '103';//这B参数是必填
    		$postData['notify_url'] = $callbackurl;//回调地址1
    		$postData['down_sn'] = $shop_order_num;//订单号1
    		$postData['subject'] = '充值';//订单标题（可空）1
    		$postData['down_sn'] = $shop_order_num;
    		$path = $cards[$card_id]['card_pass'];
    		$path = $this->formatKey($path);
    		//生成签名
    		$dataSign['type_code'] = $postData['type_code'];
    		$dataSign['subject'] = $postData['subject'];
    		$dataSign['amount'] = $postData['amount'];
    		$dataSign['notify_url'] = $callbackurl;
    		$dataSign['down_sn'] = $shop_order_num;
    		$dataSign['sign'] = $this->makeInSign($dataSign, $md5Key);
    		//组合数据
    		$post = array(
    		'member_code' => $postData['member_code'],
    		'cipher_data' => $this->encrypt($dataSign, $path),
    		);
    		//提交到接口
    		$url = $apiUrl;
    		$res = $this->mgCurlPost($url, $post);
            if($res['code'] != "0000"){
    			showMSG("$res[msg]");
    		}
    		if ($res != null && $res['code'] == "0000") {
    			$requestURI = $this->request->getPost('requestURI', 'trim');
    			$bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    			$data = array(
    					'order_number' => $postData['down_sn'],
    					'user_id' => $user_id,
    					'username' => $username,
    					'amount' => $deposit_amount,
    					'pay_time' => date('Y-m-d H:i:s'),
    					'source' => $_SERVER['HTTP_HOST'],
    					'requestURI' => $requestURI,
    					'card_id' => $card_id,
    					'bank_id' => $bank_id,
    			);
    			if (pay::addItem($data)) {
    				if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
    					//var_dump($res);die;
                        if ($this->GetBrowser() == 'Safari') {
                            self::$view->setVar('qrcode_url', $res['code_url']);
                            self::$view->render('pay_sank');
                        } else {
                            header("location:" . $res['code_url']);
                        }
    					die();
    				} else {
    					header("location:" . '../pay/qrcode.php?code=' . $res['code_url'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
    					die();
    				}
    			}
    		} else {
    			if ($res == null) {
    				echo '生成订单失败';
    			} else {
    				log2file('mgPay.log', $postData);
    				log2file('mgPay.log', $res);
    			}
    		}
    	} else {
    		die();
    	}
    }
    public function mgBack()//芒果回调
    {
    	$response = file_get_contents('php://input');
    	parse_str($response,$resArr);
    	//dd($resArr);
    	if ($resArr ===  '') {
    		die('参数错误1');
    	}
    	if ($response ===  null) {
    		die('参数错误2');
    	}
    	if (!isset($resArr['amount'])) {//金额
    		die('参数错误3');
    	}
    	$orderAmount = $resArr['amount'];
    	if(!isset($resArr['down_sn'])) {//商户生成订单
    		die('参数错误4');
    	}
    	$orderNo = $resArr['down_sn'] != null ? $resArr['down_sn'] : '';
    	if (!isset($resArr['trans_time'])){
    		die('参数错误5');
    	}
    	if(!isset($resArr['order_sn'])){//第三方订单
    		die('参数错误6');
    	}
    	$tradeNo = $resArr['order_sn'] != null ? $resArr['order_sn'] : '';
    	if (!isset($resArr['trans_time'])){
    		die('参数错误7');
    	}
    	if (!isset($resArr['fee'])){
    		die('参数错误8');
    	}
    	if (!isset($resArr['sign'])){
    		die('参数错误9');
    	}
    	$resArr['sign'] = trim($resArr['sign']);
    	$card_id = explode("_", $orderNo)[0];
    	$card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
    	$checkSign['order_sn'] = $resArr['order_sn'];
    	$checkSign['down_sn'] = $resArr['down_sn'];
    	$checkSign['status'] = $resArr['status'];
    	$checkSign['amount'] = $resArr['amount'];
    	$checkSign['fee'] = $resArr['fee'];
    	$checkSign['trans_time'] = $resArr['trans_time'];
    	if ($this->makeInSign($checkSign,$card['mer_key']) == $resArr['sign']) {
    		$order = pay::getItemByOrderNumber($orderNo);
    		$this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
    		$this->bak('gs4fj@5f!sda*dfuf', 'SUCCESS', $orderAmount, $orderNo, $tradeNo, $order);
    	} else {
    		echo '不合法数据';
    		$this->logdump("签名验证失败，程序中止。");
    		die;
    	}
    }

/******************************* snow 汇通支付 ***************************************/


    public function huitongPay()
    {
        //>>汇通支付

        $username 	= $this->request->getPost('username', 'trim');
        $user_id 	= $this->request->getPost('user_id', 'intval');     //>>用户id
        $card_id 	= $this->request->getPost('card_id', 'trim');     //>>收款卡id
        $card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id 	= $this->request->getPost('bank_id', 'trim');     //>>收款卡支付id
        $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $third_party_bank_id 	= $this->request->getPost('third_party_bank_id', 'intval');     //>>收款卡银行id
        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        //>>验证是否交易超时 和生成新的hash
        $hash 		= $this->request->getPost('hash', 'trim');
        $new_hash   = $this->_handleHashTime($hash, $user_id, $username );

        $cards 		= cards::getItemsById(array($card_id));
        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes 	= $this->request->getPost('codes', 'trim');
            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }
            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }
            $card_id 			= $this->request->getPost('card_id', 'trim');     //>>获取页面传入的收款卡id
            $card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
            $shop_order_num 	= $this->request->getPost('shop_order_num', 'trim');//>>获取订单号
            $shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount 	= $this->request->getPost('deposit_amount', 'floatval');//>>获取订单金额
            $requestURI 		= $this->request->getPost('requestURI', 'trim');
            //>>获取当前使用的是http协议还是https协议
            $protocol 			= strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            //>>完整主机地址加上端口号的
            $domain 			= $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName 			= $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url 			= $cards[$card_id]['shop_url'];
            $callback_url 		= $cards[$card_id]['call_back_url'];                //>>支付成功回调地址
            $return_url 		= $cards[$card_id]['return_url'];                   //>>通过页面跳转支付的支付成功后的跳转地址
            $mer_key            = $cards[$card_id]['mer_key'];  //>>平台私钥
            $card_pass          = $cards[$card_id]['card_pass'];
            $apiCurlUrl 		= $GLOBALS['cfg']['pay_url']['huitong_api'];        //>>curl交易请求地址
            $apiWyUrl 			= $GLOBALS['cfg']['pay_url']['huitong_wy_api'];     //>>网银交易请求地址
            $bank_code          = $this->_setBankCode($third_party_bank_id);                    //>>获取银行编码
            $req_referer        = $_SERVER['SERVER_NAME'];                          //>>当前网站域名,防止钓鱼
            if ($shop_url == "") {
                $callback_url 	= $domain . 'pay/' . $payName . 'Back.php';         //>>支付成功回调地址
                $return_url 	= $domain . 'pay/hrefback.php';                     //>>通过页面跳转支付的支付成功后的跳转地址
            } else if (strpos($shop_url, '?c=pay') === 0 || strpos($shop_url, '?c=pay') > 0) {
                //>>不更改
            }  else {
                $callback_url 	= $shop_url . '/pay/' . $payName . 'Back.php';      //>>支付成功回调地址
                $return_url 	= $shop_url . '/hrefback.php';                      //>>通过页面跳转支付的支付成功后的跳转地址
            }

            //>>获取支付方式
            $netway     = isset($cards[$card_id]['netway']) ? $cards[$card_id]['netway'] : false;
            if($netway === false){
                die('支付方式没有找到');
            }

            //>>设置支付方式
            if(is_null($service_type = $this->_setServiceType($netway))){
                die('设置支付方式出错');
            };

            $postData['notify_url']   	    = $callback_url;				//>>支付成功异步通知地址 ：
            $postData['return_url']   	    = $return_url;				    //>>页面同步跳转通知地址 ：
            $postData['pay_type']   	    = $service_type;				//>>支付方式：
            $postData['bank_code']   	    = $bank_code;				    //>>参见附录中的银行编码对照表：
            $postData['merchant_code'] 		= $cards[$card_id]['mer_no'];	//>>商户号  商户签约时，支付平台分配的唯一商家号。
            $postData['order_no'] 			= $shop_order_num;				//>>商户系统订单号，由商户系统
            $postData['order_amount'] 		= sprintf("%01.2f", $deposit_amount);	//>>该笔订单的总金额，以元为单位，精确到小数点后两位。
            $postData['order_time'] 		= date('Y-m-d H:i:s');			//>>商户订单时间，格式：yyyy-MM-dd HH:mm:ss
            $postData['req_referer'] 		= $req_referer;  				//>>来路域名
            $postData['customer_ip'] 		= $this->request->getClientIp();//>>消费者创建交易时所使用机器的IP或者终端ip，最大长度为15个字符。
            //>> TODO 测试ip 需要删掉
            if($postData['customer_ip'] == '192.168.247.221'){
                $postData['customer_ip'] 	= '113.61.35.247';				//>>消费者创建交易时所使用机器的IP或者终端ip，最大长度为15个字符。
            }
            $postData['return_params'] 		= $card_id;   					//>>回传参数  传入收款卡id

            //>>生成添加订单的固定数组
            $data = array(
                'order_number' 	=> $postData['order_no'],   //>>商户订单号 只需要修改商户订单号
                'user_id' 		=> $user_id,
                'username' 		=> $username,
                'amount' 		=> $deposit_amount,
                'pay_time' 		=> date('Y-m-d H:i:s'),
                'source' 		=> $_SERVER['HTTP_HOST'],
                'requestURI' 	=> $requestURI,
                'card_id' 		=> $card_id,
                'bank_id' 		=> $bank_id,
            );

            //>>如果是网银跳转支付
            switch($service_type){
                case '1' :
                    $this->_huitongWyPay($data, $postData,  $mer_key, $apiWyUrl );
                    break;
                case '2' :
                case '3' :
                case '5' :
                    $this->_huitongCurlPay($data, $postData,  $mer_key, $apiCurlUrl, $netway, $deposit_amount);
                    break;
            }

        } else {
            die();
        }
    }

    //>>汇通支付生成url地址参数方法
    private function _appendParam(& $sb, $name, $val, $and = true, $charset = null)
    {
        if ($and)
        {
            $sb .= "&";
        }
        else
        {
            $sb .= "?";
        }
        $sb .= $name;
        $sb .= "=";
        if (is_null($val))
        {
            $val = "";
        }
        if (is_null($charset))
        {
            $sb .= $val;
        }
        else
        {
            $sb .= urlencode($val);
        }
    }

    //>>添加需要参与签名的数据
    private function _addWyDataHuitong(&$params, $data, $mer_key)
    {
        $this->_addDataHuitongKV($params,'notify_url', $data['notify_url']);
        $this->_addDataHuitongKV($params,'return_url', $data['return_url']);
        $this->_addDataHuitongKV($params,'pay_type', $data['pay_type']);
        $this->_addDataHuitongKV($params,'bank_code', $data['bank_code']);
        $this->_addDataHuitongKV($params,'merchant_code', $data['merchant_code']);
        $this->_addDataHuitongKV($params,'order_no', $data['order_no']);
        $this->_addDataHuitongKV($params,'order_amount', $data['order_amount']);
        $this->_addDataHuitongKV($params,'order_time', $data['order_time']);
        $this->_addDataHuitongKV($params,'req_referer', $data['req_referer']);
        $this->_addDataHuitongKV($params,'customer_ip', $data['customer_ip']);
        $this->_addDataHuitongKV($params,'return_params', $data['return_params']);

        //>>生成签名
        return $this->_makeSignHuitong($params,$mer_key);
    }

    //>>根据传入的参数判断不为null 就添加进数组
    private function _addDataHuitongKV(&$data, $k, $v)
    {
        if (!is_null($v)) $data[$k] = $v;
    }

    //生成签名
    private function _makeSignHuitong($params, $mer_key)
    {
        $strb = "";
        ksort($params);
        foreach ($params as $key => $val)
        {
            $this->_appendParam($strb, $key, $val);
        }
        $this->_appendParam($strb, 'key', $mer_key);
        return md5(substr($strb, 1, strlen($strb) - 1));


    }


    //>>验证交易是否超时,并生成新的hash 验证字符串
    private function _handleHashTime($hash, $user_id, $username )
    {
        $timePart1 	= substr($hash, 0, 5);
        $timePart2 	= substr($hash, 5 + 32, 5);
        $time 		= $timePart1 . $timePart2;
        if (time() > intval($time)) {
            die('交易超时，请刷新充值页面重新充值');
        }
        $new_hash 	= generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));
        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }
        return $new_hash;
    }

    //>>设置支付方式
    private function _setServiceType($netway)
    {
        //>>网银:WY
        $service_type = null;
        if ($netway == "WY") {
            $service_type 	= "1";
        }
        //>>微信:WX
        if ($netway == "WX") {
            $service_type 	= "2";
        }
        //>> 支付宝:ZFB
        if ($netway == "ZFB") {
            $service_type 	= "3";
        }
        //>>腾讯:QQ
        if ($netway == "QQ") {
            $service_type 	= "5";
        }

        return $service_type;
    }

    private function _setBankCode($third_party_bank_id)
    {
        switch ($third_party_bank_id) {
            // 工商银行
            case '1':
                $bank_code = 'ICBC';
                break;
            // 农业银行
            case '2':
                $bank_code = 'ABC';
                break;
//            // 建设银行
            case '3':
                $bank_code = 'CCB';
                break;
//            // 招商银行
            case '4':
                $bank_code = 'CMB';
                break;
//            // 交通银行
//            case '5':
//                $bank_code = 'BOCM';
//                break;
//            // 中信银行
            case '6':
                $bank_code = 'ECITIC';
                break;
//            // 邮政储蓄
            case '7':
                $bank_code = 'PSBC';
                break;
//            // 中国光大银行
//            case '8':
//                $bank_code = 'CEBB';
//                break;
//            // 民生银行
            case '9':
                $bank_code = 'CMBC';
                break;
//            // 上海浦东发展银行
//            case '10':
//                $bank_code = 'SPDB';
//                break;
//            // 兴业银行
//            case '11':
//                $bank_code = 'CIB';
//                break;
            // 广发银行
            case '12':
                $bank_code = 'CGB';
                break;
//            // 平安银行
            case '13':
                $bank_code = 'SPABANK';
                break;
//            // 华夏银行
//            case '15':
//                $bank_code = 'HXB';
//                break;
            // 东莞银行
            /*case '16':
                break;*/
            // 渤海银行
            /* case '17':
                 $bank_code = '988';
                 break;*/
            // 浙商银行
            /*case '19':
                $bank_code = 'CZB';
                break;*/
            // 北京银行
//            case '20':
//                $bank_code = 'BOB';
//                break;
//            // 中国银行
            case '22':
                $bank_code = 'BOC';
                break;
//    //>>交通银行
    case '23':
        $bank_code = 'BOCOM';
        break;
//    //>>中国光大银行
    case '24':
        $bank_code = 'CEBBANK';
        break;
//    //>>平安银行
//    case '25':
//        $bank_code = 'PINGAN';
//        break;
//    //>>中国民生银行
//    case '26':
//        $bank_code = 'CMBCS';
//        break;
//    //>>广发银行
//    case '27':
//        $bank_code = 'CGB';
//        break;
//    //>>北京银行
//    case '28':
//        $bank_code = 'BJBANK';
//        break;
//    //>>上海银行
//    case '29':
//        $bank_code = 'BOS';
//        break;
            default:
                $bank_code = null;
                break;
        }
        return $bank_code;
    }
    private function _huitongCurlPay($data, $postData,  $mer_key, $apiCurlUrl, $netway, $deposit_amount)
    {
        if (pay::addItem($data)) {
            //构造要请求的参数数组，无需改动

            $params = [];
            //>>添加需要参与签名的数据

            $sign           = $this->_addWyDataHuitong($params,$postData, $mer_key);//>>生成签名
            $postData['sign']      = $sign;
            //>>模拟post提交
            $response = $this->_httpRequestSnow($apiCurlUrl, $postData);
            if($response != null && $response['flag'] === '01'){
                die($response['msg']);
            }

            //>>调用方法验签
            if($this->_huitongCurlHandleSign($response, $mer_key) === true)
            {
                //>>生成二维码
                log2file('huitongPay.log', $response);
                header("location:" . '../pay/qrcode.php?code=' . $response['qrCodeUrl'] . '&netway=' . $netway . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                die();
            }
        }else{
            log2file('huitongPay.log', $postData);
            die('生成订单失败');
        }


    }

    /**
     * 支付获取二维码成功,验证签名
     * @param $response
     * @param $mer_key
     */
    private function _huitongCurlHandleSign($response, $mer_key)
    {

        $this->_addDataHuitongKV($data,'flag', $response['flag']);
        $this->_addDataHuitongKV($data,'msg', $response['msg']);
        $this->_addDataHuitongKV($data,'orderId', $response['orderId']);
        $this->_addDataHuitongKV($data,'payType', $response['payType']);
        $this->_addDataHuitongKV($data,'qrCodeUrl', $response['qrCodeUrl']);
        $this->_addDataHuitongKV($data,'transId', $response['transId']);
        if($response['sign'] == $this->_makeSignHuitong($data, $mer_key))
        {
            //>>验证签名成功
            if($response['msg'] === '下单成功')
            {
                return true;
            }
            else
            {
                die('验签失败');
            }
        }
        else
        {
            die('不合法数据');
        }
    }

    private function _huitongWyPay($data, $postData, $mer_key, $apiWyUrl)
    {
        if (pay::addItem($data)) {
            //构造要请求的参数数组，无需改动

            $params = [];
            //>>添加需要参与签名的数据

            $sign           = $this->_addWyDataHuitong($params,$postData, $mer_key);//>>生成签名
            $postData['sign']      = $sign;
            $postData['pay_url']   = $apiWyUrl;
//            echo "<pre>";
//            dd($postData);
            //>>调用方法验签
            self::$view->setVar('parameter', $postData);
            self::$view->render('pay_huitong');
            exit;
        }else{
            die('生成订单失败');
        }
    }
/******************************* snow 汇通支付  up ***************************************/

    /*************************** snow 汇通支付回调***************************************/


    public function huitongBack()
    {

        //易宝通回调
        //>>获取post数据
        $response = file_get_contents('php://input');

        if ($response ===  null) {
            die('参数错误1');

        }//>>转换成数组
        parse_str($response,$res);

        //>>处理拿到数据 转换成数组

        if ($res ===  null) {
            die('参数错误2');

        }

        //>>回传参数
        if ( !isset($res['return_params'])) {
            die('参数错误3');

        }

        //>>验证通过 传入平台公钥
        $cards = cards::getItemsById(array($res['return_params']));

        if (!$cards[$res['return_params']] || !$cards[$res['return_params']]['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

        $result = $this->_huitongNotifyHandle($res,$cards[$res['return_params']]['mer_key']);
        if($result === true){
            $order = pay::getItemByOrderNumber($res['order_no']); //>>传入订单号
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));

            //>>传入订单金额,订单编号,平台交易号,订单数据
            $this->bak('gs4fj@5f!sda*dfuf', 'success', $res['order_amount'], $res['order_no'], $res['trade_no'], $order);

        } else {
            echo '不合法数据' . $result;
            $this->logdump("签名验证失败，程序中止。");
            die;

        }
    }

    private function _huitongNotifyHandle($post, $mer_key)
    {
        //>>1.验证签名
        $data = [];
        $this->_addDataHuitongKV($data, 'merchant_code', $post['merchant_code']);
        $this->_addDataHuitongKV($data, 'order_no', $post['order_no']);
        $this->_addDataHuitongKV($data, 'order_time', urldecode($post['order_time']));
        $this->_addDataHuitongKV($data, 'order_amount', $post['order_amount']);
        $this->_addDataHuitongKV($data, 'trade_status', $post['trade_status']);
        $this->_addDataHuitongKV($data, 'trade_no', $post['trade_no']);
        $this->_addDataHuitongKV($data, 'notify_type', $post['notify_type']);
        $this->_addDataHuitongKV($data, 'trade_time', urldecode($post['trade_time']));
        $this->_addDataHuitongKV($data, 'return_params', $post['return_params']);
        return $this->_handleHuitongSign($data,$mer_key, $post['sign']);
        //>>2.判断通知结果

    }

    private function _handleHuitongSign($data,$mer_key,$sign)
    {
        if($this->_makeSignHuitong($data,$mer_key) == $sign)
        {
            if($data['trade_status'] == 'success')
            {
                return true;
            }
            else
            {
                die("fail");
            }
        }
        else
        {
            die("不合法数据");
        }

    }

    private function _httpRequestSnow($url, $data=[])
    {
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 10);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE);
        if(!empty($data)){
            curl_setopt($ch, CURLOPT_POST, 1);
            curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
        }
        $output = curl_exec($ch);
        curl_close($ch);
        return json_decode($output, true);
    }

    /*************************** snow 汇通支付回调****************************************/

    /***************************  snow  易宝通支付 down *****************************************/
    public function yibaotongPay(){
    	//>>易宝通支付

    	$username 	= $this->request->getPost('username', 'trim');
    	$user_id 	= $this->request->getPost('user_id', 'intval');
        $card_id 	= $this->request->getPost('card_id', 'trim');
        $card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id 	= $this->request->getPost('bank_id', 'trim');
        $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    	if ($card_id == '') {
    		die('系统出错！(错误码：6003)');
    	}

    	$hash 		= $this->request->getPost('hash', 'trim');
    	$timePart1 	= substr($hash, 0, 5);
    	$timePart2 	= substr($hash, 5 + 32, 5);
    	$time 		= $timePart1 . $timePart2;
    	if (time() > intval($time)) {
    		die('交易超时，请刷新充值页面重新充值');
    	}
    	$new_hash 	= generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));
    	if ($hash != $timePart1 . $new_hash . $timePart2) {
    		die('系统出错！(错误码：6002)');
    	}
    	$cards 		= cards::getItemsById(array($card_id));
    	if (count($cards) == 0) {
    		die('系统出错！(错误码：6004)');
    	}
    	if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');
            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }
            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }
            $card_id = $this->request->getPost('card_id', 'trim');
            $card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
            $shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');
            $requestURI = $this->request->getPost('requestURI', 'trim');
            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];
            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }
            $service_type = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['yibaotong_api'];  //>>易宝通交易请求地址
            //>>判断使用哪种第三方类型  微信:WX  支付宝:ZFB 腾讯:QQ

            //>>微信:WX
            if ($cards[$card_id]["netway"] == "WX") {
                $service_type = "weixin_scan";
            }
            //>> 支付宝:ZFB
            if ($cards[$card_id]['netway'] == "ZFB") {
                $service_type = "alipay_scan";
            }
            //>>腾讯:QQ
            if ($cards[$card_id]['netway'] == "QQ") {
                $service_type = "tenpay_scan";
            }

            if ($cards[$card_id]['netway'] === 'WY') {
                $apiUrl = $GLOBALS['cfg']['pay_url']['yibaotongwy_api'];
                $service_type = "b2c";
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bank_code = 'ICBC';
                        break;
                    // 农业银行
                    case '2':
                        $bank_code = 'ABC';
                        break;
                    // 建设银行
                    case '3':
                        $bank_code = 'CCB';
                        break;
                    // 招商银行
                    case '4':
                        $bank_code = 'CMB';
                        break;
                    // 交通银行
                    case '5':
                        $bank_code = 'BCOM';
                        break;
                    // 中信银行
                    case '6':
                        $bank_code = 'ECITIC';
                        break;
                    // 邮政储蓄
                    case '7':
                        $bank_code = 'PSBC';
                        break;
                    // 中国光大银行
                    case '8':
                        $bank_code = 'CEBB';
                        break;
                    // 民生银行
                    case '9':
                        $bank_code = 'CMBC';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bank_code = 'SPDB';
                        break;
                    // 兴业银行
                    case '11':
                        $bank_code = 'CIB';
                        break;
                    // 广发银行
                    case '12':
                        $bank_code = 'GDB';
                        break;
                    // 平安银行
                    case '13':
                        $bank_code = 'SPABANK';
                        break;
                    // 华夏银行
                    case '15':
                        $bank_code = 'HXB';
                        break;
                    // 东莞银行
                    /*case '16':
                        break;*/
                    // 渤海银行
                    /* case '17':
                         $bank_code = '988';
                         break;*/
                    // 浙商银行
                    /*case '19':
                        $bank_code = 'CZB';
                        break;*/
                    // 北京银行
                    case '20':
                        $bank_code = 'BOB';
                        break;
                    // 中国银行
                    case '22':
                        $bank_code = 'BOC';
                        break;
                    default:
                        die('当前银行该支付方式暂不支持!');
                        break;
                }
                $postData['merchant_code'] = $cards[$card_id]['mer_no'];    //>>商户号  商户签约时，亿宝通支付平台分配的唯一商家号。
                $postData['service_type'] = "direct_pay";
                $postData['service_type'] = "direct_pay";
                $postData['input_charset'] = "UTF-8";
                $postData['pay_type'] = $service_type;
                //$postData['bank_code'] = $bank_code;//>>业务类型  固定值：alipay_scan 或 weixin_scan或tenpay_scan
                $postData['notify_url'] = $callbackurl;                //>>回调地址
                $postData['interface_version'] = 'V3.0';                        //>>接口版本，固定值：V3.1(必须大写)
                $postData['client_ip'] = $this->getClientIp();//>>消费者创建交易时所使用机器的IP或者终端ip，最大长度为15个字符。
                //>> TODO 测试ip 需要删掉
                if ($postData['client_ip'] == '192.168.247.221') {
                    $postData['client_ip'] = '113.61.35.247';                //>>消费者创建交易时所使用机器的IP或者终端ip，最大长度为15个字符。
                }
                $postData['sign_type'] = 'RSA-S';                    //>>RSA或RSA-S，不参与签名
                $postData['order_no'] = $shop_order_num;                //>>商户系统订单号，由商户系统
                $postData['order_time'] = date('Y-m-d H:i:s');            //>>商户订单时间，格式：yyyy-MM-dd HH:mm:ss
                $postData['order_amount'] = sprintf("%01.2f", $deposit_amount);    //>>该笔订单的总金额，以元为单位，精确到小数点后两位。
                $postData['product_name'] = 'testProductName';            //>>商品名称，不超过100个字符。
                $postData['extra_return_param'] = $card_id;
                //>>生成签名:传入商户私钥
                $postData['sign'] = $this->_yiBaoTongMakeInSign($postData, $cards[$card_id]['mer_key']);//>>签名。
                //$url = $apiUrl;
                $postData['url'] = $apiUrl;
                /*$res = $this->_yiBaoTongCurlPost($url, $postData);
                if (!$res || !isset($res['response'])) {
                    //>>提交失败
                    die('提交失败');
                }
                $res = $res['response'];
                //>>验证签名 传入平台公钥
                if ($this->_yiBaoTongHandleSign($res, $cards[$card_id]['card_pass']) !== true) {
                    //>>签名验证失败
                    die('第三方签名验证失败');
                }*/

                $data = array(
                    'order_number' => $postData['order_no'],   //>>商户订单号
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );
                if (pay::addItem($data)) {
                    self::$view->setVar('postFields', $postData);
                    self::$view->render('pay_ybtwy');
                } else {
                    log2file('yibaotongPay.log', $postData);
                    die('生成订单失败');
                }
            }

			$postData['merchant_code'] 		= $cards[$card_id]['mer_no'];	//>>商户号  商户签约时，亿宝通支付平台分配的唯一商家号。
			$postData['service_type']   	= $service_type;				//>>业务类型  固定值：alipay_scan 或 weixin_scan或tenpay_scan
			$postData['notify_url'] 		= $callbackurl;  				//>>回调地址
			$postData['interface_version'] 	= 'V3.1';						//>>接口版本，固定值：V3.1(必须大写)
			$postData['client_ip'] 			= $this->getClientIp();//>>消费者创建交易时所使用机器的IP或者终端ip，最大长度为15个字符。
            //>> TODO 测试ip 需要删掉
            if($postData['client_ip'] == '192.168.247.221'){
                $postData['client_ip'] 	= '113.61.35.247';				//>>消费者创建交易时所使用机器的IP或者终端ip，最大长度为15个字符。
            }
			$postData['sign_type'] 			= 'RSA-S';   					//>>RSA或RSA-S，不参与签名
			$postData['order_no'] 			= $shop_order_num;				//>>商户系统订单号，由商户系统
			$postData['order_time'] 		= date('Y-m-d H:i:s');			//>>商户订单时间，格式：yyyy-MM-dd HH:mm:ss
			$postData['order_amount'] 		= sprintf("%01.2f", $deposit_amount);	//>>该笔订单的总金额，以元为单位，精确到小数点后两位。
			$postData['product_name'] 		= 'testProductName';			//>>商品名称，不超过100个字符。
			$postData['extra_return_param'] = $card_id;						//>>回传参数/card_id
			//>>生成签名:传入商户私钥
            $postData['sign'] 				= $this->_yiBaoTongMakeInSign($postData,$cards[$card_id]['mer_key']);//>>签名。
			$url = $apiUrl;
			$res = $this->_yiBaoTongCurlPost($url, $postData);
            if ($cards[$card_id]['netway'] !== 'WY') {
                if (!$res || !isset($res['response'])) {
                    //>>提交失败
                    die('提交失败');
                }
            }
			$res = $res['response'];
            if ($cards[$card_id]['netway'] !== 'WY') {
                if ($res['resp_code'] == "SUCCESS" && $res['result_code'] == 0) {

                    //>>验证签名 传入平台公钥
                    if ($this->_yiBaoTongHandleSign($res, $cards[$card_id]['card_pass']) !== true) {
                        //>>签名验证失败
                        die('第三方签名验证失败');
                    }

                    $data = array(
                        'order_number' => $postData['order_no'],   //>>商户订单号
                        'user_id' => $user_id,
                        'username' => $username,
                        'amount' => $deposit_amount,
                        'pay_time' => date('Y-m-d H:i:s'),
                        'source' => $_SERVER['HTTP_HOST'],
                        'requestURI' => $requestURI,
                        'card_id' => $card_id,
                        'bank_id' => $bank_id,
                    );
                    if (pay::addItem($data)) {
                        //>>生成二维码
                        header("location:" . '../pay/qrcode.php?code=' . $res['qrcode'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount . "&cdn=" . parent::$PublicImgCdn);
                        die();
                    }
                } else {

                    log2file('yiBaoTongPay.log', $postData);
                    log2file('yiBaoTongPay.log', $res);

                }
            }
    	} else {
    		die();
    	}
    }

	/**
	 * 易宝通curl post 请求
	 * @param $url  string 请求接口地址
	 * @param $postData array  post 数据
	 * @return array  返回数据
	 */
	private static function _yiBaoTongCurlPost($url, $postData)
	{
		$ch = curl_init();
		curl_setopt($ch,CURLOPT_URL,$url);
		curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
		curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);
		curl_setopt($ch, CURLOPT_POST, true);
		curl_setopt($ch, CURLOPT_HEADER, false);
		curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($postData));
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);

		$response=curl_exec($ch);

		curl_close($ch);
		$response = simplexml_load_string($response);
		$response = json_decode(json_encode($response),true);

		return $response;
		}
	/**
	 * 生成签名
	 * @param $post
	 * @param $mer_key string  商户私钥
	 * @return string
	 */
	private static function _yiBaoTongMakeInSign($post,$mer_key)
	{
		ksort($post);
		$signStr = "";
		foreach ($post as $key => $val) {
			//>>排除不参与签名的
			if (  $val != '' && $key != 'sign_type'  && $key != 'sign')  {
				$signStr .= $key . '=' . $val . '&';
			}
		}

		$signStr = substr($signStr,0,-1);
        $merchant_private_key = $mer_key;

		$merchant_private_key = @openssl_get_privatekey($merchant_private_key);

		@openssl_sign($signStr,$sign_info,$merchant_private_key,OPENSSL_ALGO_MD5);
		//>>生成签名
		return base64_encode($sign_info);
	}



    /**
	 * 返回xml验证签名
	 * @param $post
	 * @param $card_pass string 平台公钥
	 * @return string
	 */
	private static function _yiBaoTongHandleSign($post,$card_pass)
	{
		ksort($post);
		$signStr = "";
		foreach ($post as $key => $val) {
			//>>排除不参与签名的
			if (  $val != '' && $key != 'sign_type'  && $key != 'sign' )  {
                $val = trim($val);
				$signStr .= $key . '=' . $val . '&';
			}
		}
		$sign_info = $post['sign'];
		$signStr = substr($signStr,0,-1);
        $dinpay_public_key = $card_pass;

        $sign_info = base64_decode($sign_info);
        $res = openssl_get_publickey($dinpay_public_key);
		return (bool)openssl_verify($signStr,$sign_info,$res,OPENSSL_ALGO_MD5);
		//>>生成签名
	}

    /**
     * 易宝通回调验证
     * @param $data
     * @param $card_pass
     * @return bool
     */
    private  function _yibaotongNotifyHandle($data,$card_pass)
    {
        //>>回调需要验证必须传入的参数
        $options = [
            'merchant_code',
            'notify_type',
            'notify_id',
            'interface_version',
            'sign_type',
            'sign',
            'order_no',
            'order_time',
            'order_amount',
            'extra_return_param',
            'trade_no',
            'trade_time',
            'trade_status',
//            'bank_seq_no',  这个是可选参数
        ];
        //>>遍历判断
        foreach($options as $key => $val){
            if( !isset($data[$val])){
                return '参数错误' . $val;
            }
        }
        //>>传入平台公钥
        return $this->_yiBaoTongHandleSign($data,$card_pass);
    }


    public function yibaotongBack()
    {

        //易宝通回调
        //>>获取post数据
    	$response = file_get_contents('php://input');
        if ($response ===  '') {
            die('参数错误1');

        }
        //>>处理拿到数据 转换成数组
        parse_str($response,$res);

        if ($res ===  null) {
            die('参数错误2');

        }

        if ( !isset($res['extra_return_param'])) {
            die('参数错误3');

        }

        //>>验证通过 传入平台公钥
        $cards = cards::getItemsById(array($res['extra_return_param']));

        if (!$cards[$res['extra_return_param']] || !$cards[$res['extra_return_param']]['card_pass']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

        $result = $this->_yibaotongNotifyHandle($res,$cards[$res['extra_return_param']]['card_pass']);
        if($result === true){
            $order = pay::getItemByOrderNumber($res['order_no']); //>>传入订单号
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));

            //>>传入订单金额,订单编号,平台交易号,订单数据
            $this->bak('gs4fj@5f!sda*dfuf', 'SUCCESS', $res['order_amount'], $res['order_no'], $res['trade_no'], $order);

        } else {
            echo '不合法数据' . $result;
            $this->logdump("签名验证失败，程序中止。");
            die;

        }

        //>>暂时没有发现有什么用
//    	$card_id = $response['extra_return_param'];
//    	$card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

    }
    /***************************  snow  易宝通支付 up *****************************************/
    public function encrypt($params, $path)
    {
    	$originalData = json_encode($params);
    	$crypto = '';
    	$encryptData = '';
    	$rsaPublicKey = $path;
    	//dd($rsaPublicKey);
    	foreach (str_split($originalData, 117) as $chunk) {
    		openssl_public_encrypt($chunk, $encryptData, $rsaPublicKey);
    		$crypto .= $encryptData;
    	}
    	//dd($crypto);
    	return base64_encode($crypto);
    }
    protected $resTimeOut = 20;
    public function mgCurlPost($url, $data)
    {
    try{
            $header[] = "Content-type: application/x-www-form-urlencoded;charset=UTF-8";
            $ch = curl_init ();
            curl_setopt($ch, CURLOPT_URL, $url);
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
            curl_setopt($ch, CURLOPT_HTTPHEADER,$header);
            curl_setopt($ch, CURLOPT_POST, true);
            curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 20);
            curl_setopt($ch, CURLOPT_TIMEOUT, 20);
            curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($data));
            //dd(http_build_query($data));
            $result = curl_exec($ch);
            curl_close($ch);
            //dd($ch);
            return json_decode($result, true);
        }catch(\Exception $e){
            return ['code'=>'9999', 'msg'=>'接口链接失败'];
        }
    }
    /**
     * 内部验签
     * @access public
     * @param array $post  数据
     * @param string $secretKey  密钥
     * @return Driver
     */
    public function checkInSign($post, $secretKey)
    {
    	return $post['sign'] == $this->makeInSign($post, $secretKey);
    }
    /**
     * 生成内部签名
     * @access public
     * @param array $post  数据
     * @param string $secretKey  密钥
     * @return Driver
     */
    public function makeInSign($post, $secretKey)
    {
    	$noarr = ['sign','code','msg'];
    	ksort($post);
    	$data = "";
    	foreach ($post as $key => $val) {
    		if ( !in_array($key, $noarr) && (!empty($val) || $val ===0 || $val ==='0') ) {
    			$data .= $key . '=' . $val . '&';
    		}
    	}
    	$data .= 'key='.$secretKey;
    	return strtolower(md5($data));
    }
    public function createNo()
    {
    	return date('YmdHis').substr(implode(NULL, array_map('ord', str_split(substr(uniqid(), 7, 13), 1))), 0, 8);
    }
    public function xidakejiBack(){
        $response = file_get_contents('php://input');
        if ($response ===  '') die('参数错误0');
        parse_str($response, $response);
        if (!isset($response["notify_type"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $notify_type = $response["notify_type"];
        if (!isset($response["order_no"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $order_no = $response["order_no"];
        if (!isset($response["host_order_no"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $host_order_no = $response["host_order_no"];
        if (!isset($response["order_type"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $order_type=$response['order_type'];
        if (!isset($response["amount"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }
        $amount = $response["amount"];
        if (!isset($response["org_amount"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }
        $org_amount = $response["org_amount"];
        if (!isset($response["order_time"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }
        $order_time = $response["order_time"];
        if (!isset($response["status"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }
        $status = $response["status"];
        if (!isset($response["sign"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }
        $sign = $response["sign"];
        $card_id=explode("_", $order_no)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        if(!$this->isXidakejiSign($response,$sign,$card['mer_key'])){
            $this->logdump('签名错误');
            die('签名错误');
        }
        $order = pay::getItemByOrderNumber($order_no);
        if ($response['status'] == 'SUCCESS') {
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->yiaibak('gs4fj@5f!sda*dfuf', 'SUCCESS',$response['err_code'], $amount, $order_no, $host_order_no,$order);
        } else {
            $this->logdump("failed!交易失败:交易失败,用户名{$order['username']} 交易订单{$host_order_no} 金额{$order['amount']} ");
            die($response['err_code']);
        }
    }
    public function isXidakejiSign($sign_parse,$sign,$prikey) {
        ksort($sign_parse);
        reset($sign_parse);
        $md5str = "";
        foreach ($sign_parse as $key => $val) {
            if(!empty($val) && $key!='sign')$md5str = $md5str . $key . "=" . $val . "&";
        }
        $md5str=rtrim($md5str,'&');
        return $sign == md5($md5str . $prikey);
    }
    public function xidakejiPay(){
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $codes = $this->request->getPost('codes', 'trim');
        $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
        $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');
        $requestURI = $this->request->getPost('requestURI', 'trim');
        if ($card_id == '') die('系统出错！(错误码：6003)');
        if (empty($username) || empty($user_id) || empty($card_id) || empty($bank_id) || empty($codes) || empty($shop_order_num) || empty($deposit_amount) || empty($requestURI)) die('参数错误');
        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;
        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));
        if ($hash != $timePart1 . $new_hash . $timePart2) die('系统出错！(错误码：6002)');
        $cards = cards::getItemsById(array($card_id));
        if (count($cards) == 0) die('系统出错！(错误码：6004)');
        if (time() > intval($time)) die('交易超时，请刷新充值页面重新充值');
        if ($username =='' && $user_id == '') die('用户不存在');
        if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) die('系统出错！(错误码：6000)');
        if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) die('系统出错！(错误码：6001)');
        $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
        $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
        $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
        $shop_url = $cards[$card_id]['shop_url'];
        $callbackurl = $cards[$card_id]['call_back_url'];
        $returnurl = $cards[$card_id]['return_url'];
        if ($shop_url == "") {
            $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
            $returnurl = $domain . 'pay/hrefback.php';
        } else if (strpos($shop_url, '?c=pay') === 0) {

        } else if (strpos($shop_url, '?c=pay') > 0) {

        } else {
            $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
            $returnurl = $shop_url . '/hrefback.php';
        }
        $service_type = '';
        if ($cards[$card_id]["netway"] == "WX") {
            $apiUrl = $GLOBALS['cfg']['pay_url']['xidakeji_sm_api'];
            $service_type = "1001";
        } else if ($cards[$card_id]["netway"] == "WX_WAP") {
            $apiUrl = $GLOBALS['cfg']['pay_url']['xidakeji_h5_api'];
            $service_type = "1004";
        } else if ($cards[$card_id]['netway'] == "ZFB") {
            $apiUrl = $GLOBALS['cfg']['pay_url']['xidakeji_sm_api'];
            $service_type = "1002";
        } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
            $apiUrl = $GLOBALS['cfg']['pay_url']['xidakeji_h5_api'];
            $service_type = "1005";
        } else if ($cards[$card_id]['netway'] === 'WY') {
            $apiUrl = $GLOBALS['cfg']['pay_url']['xidakeji_wy_api'];
            $service_type="1003";
            $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
            switch ($third_party_bank_id) {
                // 工商银行
                case '1':
                    $bank_code = 'ICBC';
                    break;
                // 农业银行
                case '2':
                    $bank_code = 'ABC';
                    break;
                // 建设银行
                case '3':
                    $bank_code = 'CCB';
                    break;
                // 招商银行
                case '4':
                    $bank_code = 'CMB';
                    break;
                // 交通银行
                case '5':
                    $bank_code = 'BOCM';
                    break;
                // 中信银行
                case '6':
                    $bank_code = 'ECITIC';
                    break;
                // 邮政储蓄
                case '7':
                    $bank_code = 'PSBC';
                    break;
                // 中国光大银行
                case '8':
                    $bank_code = 'CEBB';
                    break;
                // 民生银行
                case '9':
                    $bank_code = 'CMBC';
                    break;
                // 上海浦东发展银行
                case '10':
                    $bank_code = 'SPDB';
                    break;
                // 兴业银行
                case '11':
                    $bank_code = 'CIB';
                    break;
                // 广发银行
                case '12':
                    $bank_code = 'GDB';
                    break;
                // 平安银行
                case '13':
                    $bank_code = 'SPABANK';
                    break;
                // 华夏银行
                case '15':
                    $bank_code = 'HXB';
                    break;
                // 东莞银行
                /*case '16':
                    break;*/
                // 渤海银行
                /* case '17':
                     $bank_code = '988';
                     break;*/
                // 浙商银行
                /*case '19':
                    $bank_code = 'CZB';
                    break;*/
                // 北京银行
                case '20':
                    $bank_code = 'BOB';
                    break;
                // 中国银行
                case '22':
                    $bank_code = 'BOC';
                    break;
                default:
                    die('当前银行该支付方式暂不支持!');
                    break;
            }
        }
        $postData = array();
        $postData['merchant_no'] = (string)$cards[$card_id]['mer_no'];
        $postData['order_no'] = (string)$shop_order_num;
        $postData['order_type'] = (string)$service_type;
        if(isset($bank_code))$postData['bank_code'] = (string)$bank_code;
        $postData['trans_amount'] = (string)sprintf("%.2f",$deposit_amount)*100;
        $postData['bg_url'] = (string)$callbackurl;
        if(!in_array($cards[$card_id]['netway'],['WX','ZFB']))$postData['page_url'] = (string)$returnurl;
        $postData['goods'] = (string)"goods";
        ksort($postData);
        reset($postData);
        $signStr = "";
        foreach ($postData as $key => $val) {
            $signStr .= $key . "=" . $val . "&";
        }
        $signStr=rtrim($signStr,'&');
        $signStr.=$cards[$card_id]['mer_key'];
        $sign = md5($signStr);
        $postData['sign'] = (string)$sign;
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $data = array(
            'order_number' => $postData['order_no'],
            'user_id' => $user_id,
            'username' => $username,
            'amount' => $deposit_amount,
            'pay_time' => date('Y-m-d H:i:s'),
            'source' => $_SERVER['HTTP_HOST'],
            'requestURI' => $requestURI,
            'card_id' => $card_id,
            'bank_id' => $bank_id,
        );

        if(in_array($cards[$card_id]['netway'],['WX','ZFB'])){
            $jsonResponse = $this->curlPostData($apiUrl, http_build_query($postData), $info);
            $response = json_decode($jsonResponse, true);
            if ($response != null && $response['status'] == 'SUCCESS' && pay::addItem($data)) {
                header("location:" . '../pay/qrcode.php?code=' . $response['code_url'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                die();
//                }
            }else {
                log2file('xidakejiPay.log', $postData);
                die($response['err_msg']);
            }
        }
        $postFields=$postData;
        $postFields['url']=$apiUrl;
        if (pay::addItem($data)) {
            self::$view->setVar('postFields', $postFields);
            self::$view->render('pay_xidakeji');
        } else {
            log2file('xidakejiPay.log', $postData);
            die('生成订单失败');
        }
        die();
    }
    public function ebaoBack(){
        $response = file_get_contents('php://input');
        if ($response ===  '') die('参数错误0');
        parse_str($response, $response);
        if (!isset($response["memberid"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $memberid = $response["memberid"];
        if (!isset($response["orderid"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $orderid = $response["orderid"];
        if (!isset($response["amount"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $amount = $response["amount"];
        if (!isset($response["datetime"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $datetime=$response['datetime'];
        if (!isset($response["returncode"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }
        $returncode = $response["returncode"];
        if (!isset($response["sign"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }
        $sign = $response["sign"];
        //>>支付完成时间
        if (!isset($response["pay_reserved1"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }
        $card_id=$response['pay_reserved1'];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        if(!$this->isEbaoSign($response,$sign,$card['mer_key'])){
            $this->logdump('签名错误');
            die('签名错误');
        }
        $order = pay::getItemByOrderNumber($orderid);
        if ($response['returncode'] == '00000') {
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->yiaibak('gs4fj@5f!sda*dfuf', 'success',$response['returncode'], $amount, $orderid, $orderid,$order);
        } else {
            $this->logdump("failed!交易失败:交易失败,用户名{$order['username']} 交易订单{$orderid} 金额{$order['amount']} ");
            die($response['returncode']);
        }
    }
    public function isEbaoSign($sign_parse,$sign,$prikey) {
        $ReturnArray = array( // 返回字段
            "memberid" => $sign_parse["memberid"], // 商户ID
            "orderid" =>  $sign_parse["orderid"], // 订单号
            "amount" =>  $sign_parse["amount"], // 交易金额
            "datetime" =>  $sign_parse["datetime"], // 交易时间
            "returncode" => $sign_parse["returncode"]//响应码
        );
        ksort($ReturnArray);
        reset($ReturnArray);
        $md5str = "";
        foreach ($ReturnArray as $key => $val) {
            $md5str = $md5str . $key . "=" . $val . "&";
        }
        return $sign == strtoupper(md5($md5str . "key=" . $prikey));
    }
    public function ebaoPay(){
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $codes = $this->request->getPost('codes', 'trim');
        $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
        $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');
        $requestURI = $this->request->getPost('requestURI', 'trim');
        if ($card_id == '') die('系统出错！(错误码：6003)');
        if (empty($username) || empty($user_id) || empty($card_id) || empty($bank_id) || empty($codes) || empty($shop_order_num) || empty($deposit_amount) || empty($requestURI)) die('参数错误');
        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;
        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));
        if ($hash != $timePart1 . $new_hash . $timePart2) die('系统出错！(错误码：6002)');
        $cards = cards::getItemsById(array($card_id));
        if (count($cards) == 0) die('系统出错！(错误码：6004)');
        if (time() > intval($time)) die('交易超时，请刷新充值页面重新充值');
        if ($username =='' && $user_id == '') die('用户不存在');
        if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) die('系统出错！(错误码：6000)');
        if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) die('系统出错！(错误码：6001)');
        $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
        $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
        $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
        $shop_url = $cards[$card_id]['shop_url'];
        $callbackurl = $cards[$card_id]['call_back_url'];
        $returnurl = $cards[$card_id]['return_url'];
        if ($shop_url == "") {
            $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
            $returnurl = $domain . 'pay/hrefback.php';
        } else if (strpos($shop_url, '?c=pay') === 0) {

        } else if (strpos($shop_url, '?c=pay') > 0) {

        } else {
            $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
            $returnurl = $shop_url . '/hrefback.php';
        }
        $service_type = '';
        $apiUrl = $GLOBALS['cfg']['pay_url']['ebao_api'];
        if ($cards[$card_id]["netway"] == "WX") {
            $service_type = "WXZF";
        } else if ($cards[$card_id]['netway'] == "ZFB") {
            $service_type = "ALIPAY";
        } else {
            die('支付方式不存在');
        }
        $postData = array();
        $postData['pay_amount'] = (string)sprintf("%.2f",$deposit_amount);
        $postData['pay_applydate'] = (string)date("Y-m-d H:i:s");
        $postData['pay_bankcode'] = (string)$service_type;
        $postData['pay_memberid'] = (string)$cards[$card_id]['mer_no'];
        $postData['pay_notifyurl'] = (string)$callbackurl;
        $postData['pay_orderid'] = (string)$shop_order_num;
        ksort($postData);
        $signStr = "";
        foreach($postData as $key=>$val){
            $signStr .= $key.'='.$val.'&';
        }
        $signStr .='key='.$cards[$card_id]['mer_key'];
        $sign = strtoupper(md5($signStr));
        $postData['pay_md5sign'] = $sign;
        $postData["pay_reserved1"]=$card_id;
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $data = array(
            'order_number' => $postData['pay_orderid'],
            'user_id' => $user_id,
            'username' => $username,
            'amount' => $deposit_amount,
            'pay_time' => date('Y-m-d H:i:s'),
            'source' => $_SERVER['HTTP_HOST'],
            'requestURI' => $requestURI,
            'card_id' => $card_id,
            'bank_id' => $bank_id,
        );
        $postFields=$postData;
        $postFields['url']=$apiUrl;
        $postFields['signStr']=$signStr;
        if (pay::addItem($data)) {
            self::$view->setVar('postFields', $postFields);
            self::$view->render('pay_ebao');
        } else {
            log2file('ebaoPay.log', $postData);
            die('生成订单失败');
        }
    }
    public function jieanfuBack(){
        $response = file_get_contents('php://input');
        if ($response ===  '') die('参数错误0');
        parse_str($response, $response);
        //>>签名
        if (!isset($response["sign"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $sign = $response["sign"];
        //>>商家号
        if (!isset($response["merchantno"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $merchantno = $response["merchantno"];
        //>>商家支付订单号
        if (!isset($response["billno"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $billno = $response["billno"];
        //>>支付订单号
        if (!isset($response["orderno"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $orderno=$response['orderno'];
        //>>银行订单号
        if (!isset($response["bankbillno"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }
        $bankbillno = $response["bankbillno"];
        //>>提交支付时间
        if (!isset($response["submitdate"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }
        $submitdate = $response["submitdate"];
        //>>支付完成时间
        if (!isset($response["completedate"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }
        $completedate=$response['completedate'];
        //>>支付结果1：支付成功  -1：支付失败  0：未支付。
        if (!isset($response["success"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }
        $success=$response['success'];
        //>>支付金额
        if (!isset($response["amount"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }
        $amount=$response['amount'];
        //>>card_id
        if (!isset($response["keep_field1"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }
        $card_id=$response['keep_field1'];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        if(!$this->isJieAnFuSign($response,$sign,$card['mer_key'])){
            $this->logdump('签名错误');
            die('签名错误');
        }
        $order = pay::getItemByOrderNumber($billno);
        if ($response['success'] == '1') {
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->yiaibak('gs4fj@5f!sda*dfuf', 'serverBackOk','serverBackOk', $amount, $billno, $orderno,$order);
        } elseif($response['success']==0) {
            $this->logdump("failed!交易未支付:{$response['msg']},用户名{$order['username']} 交易订单{$billno} 金额{$order['amount']} ");
            echo 'opstate=-1';
            die;
        }else {
            $this->logdump("failed!交易失败:{$response['msg']},用户名{$order['username']} 交易订单{$billno} 金额{$order['amount']} ");
            echo 'opstate=-1';
            die;
        }
    }
    public function isJieAnFuSign($sign_parse,$sign,$prikey) {
        $signPars = "";
        $signPars .= $sign_parse['merchantno'];
        $signPars .= $sign_parse['billno'];
        $signPars .= $sign_parse['orderno'];
        $signPars .= $sign_parse['amount'];
        $signPars .= $sign_parse['keep_field1'];
        if(!empty($sign_parse['bankbillno'])) $signPars .= $sign_parse['bankbillno'];
        $signPars .= $sign_parse['submitdate'];
        $signPars .= $sign_parse['success'];
        $signPars .= $prikey;
        return $sign == md5(md5(md5($signPars)));
    }
    public function jieanfuPay(){
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $codes = $this->request->getPost('codes', 'trim');
        $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
        $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');
        $requestURI = $this->request->getPost('requestURI', 'trim');
        if ($card_id == '') die('系统出错！(错误码：6003)');
        if (empty($username) || empty($user_id) || empty($card_id) || empty($bank_id) || empty($codes) || empty($shop_order_num) || empty($deposit_amount) || empty($requestURI)) die('参数错误');
        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;
        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));
        if ($hash != $timePart1 . $new_hash . $timePart2) die('系统出错！(错误码：6002)');
        $cards = cards::getItemsById(array($card_id));
        if (count($cards) == 0) die('系统出错！(错误码：6004)');
        if (time() > intval($time)) die('交易超时，请刷新充值页面重新充值');
        if ($username =='' && $user_id == '') die('用户不存在');
        if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) die('系统出错！(错误码：6000)');
        if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) die('系统出错！(错误码：6001)');
        $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
        $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
        $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
        $shop_url = $cards[$card_id]['shop_url'];
        $callbackurl = $cards[$card_id]['call_back_url'];
        $returnurl = $cards[$card_id]['return_url'];
        if ($shop_url == "") {
            $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
            $returnurl = $domain . 'pay/hrefback.php';
        } else if (strpos($shop_url, '?c=pay') === 0) {

        } else if (strpos($shop_url, '?c=pay') > 0) {

        } else {
            $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
            $returnurl = $shop_url . '/hrefback.php';
        }
        $service_type = '';
        $apiUrl = $GLOBALS['cfg']['pay_url']['jieanfu_api'];
        if ($cards[$card_id]["netway"] == "WX") {
            $service_type = "WECHAT";
        } else if ($cards[$card_id]["netway"] == "WX_WAP") {
            $service_type = "WECHAT";
        } else if ($cards[$card_id]['netway'] == "ZFB") {
            $service_type = "ALIPAY";
        } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
            $service_type = "ALIPAY";
        } else if ($cards[$card_id]['netway'] === 'WY') {
            $apiUrl = $GLOBALS['cfg']['pay_url']['jieanfu_wy_api'];
            $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
            switch ($third_party_bank_id) {
                // 工商银行
                case '1':
                    $service_type = 'ICBC';
                    break;
                // 农业银行
                case '2':
                    $service_type = 'ABC';
                    break;
                // 建设银行
                case '3':
                    $service_type = 'CCB';
                    break;
                // 招商银行
                case '4':
                    $service_type = 'CMB';
                    break;
                // 交通银行
                case '5':
                    $service_type = 'BOCM';
                    break;
                // 中信银行
                case '6':
                    $service_type = 'CITIC';
                    break;
                // 邮政储蓄
                case '7':
                    $service_type = 'PSBC';
                    break;
                // 中国光大银行
                case '8':
                    $service_type = 'CEB';
                    break;
                // 民生银行
                case '9':
                    $service_type = 'CMBC';
                    break;
                // 上海浦东发展银行
                case '10':
                    $service_type = 'SPDB';
                    break;
                // 兴业银行
                case '11':
                    $service_type = 'CIB';
                    break;
                // 广发银行
                case '12':
                    $service_type = 'CGB';
                    break;
                // 平安银行
                case '13':
                    $service_type = 'PAYH';
                    break;
                // 华夏银行
                case '15':
                    $service_type = 'HXB';
                    break;
                // 东莞银行
                /*case '16':
                    break;*/
                // 渤海银行
                /* case '17':
                     $service_type = '988';
                     break;*/
                // 浙商银行
                case '19':
                    $service_type = 'CZB';
                    break;
                // 北京银行
                case '20':
                    $service_type = 'BCCB';
                    break;
                // 中国银行
                case '22':
                    $service_type = 'BOC';
                    break;
                default:
                    die('当前银行该支付方式暂不支持!');
                    break;
            }
            $postData = array();
            $postData['merchantno'] = (string)$cards[$card_id]['mer_no'];
            $postData['orderno'] = (string)$shop_order_num;
            $postData['code'] = (string)$service_type;
            $postData['amount'] = (string)sprintf("%.2f",$deposit_amount);
            $postData['keep_field1'] = (string)$card_id;
            $postData['browser_url'] = (string)$returnurl;//WY
            $postData['serverback_url'] = (string)$callbackurl;
            $signStr = "";
            foreach($postData as $val){
                $signStr .= $val;
            }
            $signStr.=$cards[$card_id]['mer_key'];
            $sign = md5(md5(md5($signStr)));
            $postData['bank_type'] = "0";
            $postData['sign'] = (string)$sign;
            $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
            $data = array(
                'order_number' => $postData['orderno'],
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );
            $postFields=$postData;
            $postFields['url']=$apiUrl;
            if (pay::addItem($data)) {
                self::$view->setVar('postFields', $postFields);
                self::$view->render('pay_jieanfu');
            } else {
                log2file('jieanfuPay.log', $postData);
                die('生成订单失败');
            }
            die();
        }
        $postData = array();
        $postData['merchantno'] = (string)$cards[$card_id]['mer_no'];
        $postData['billno'] = (string)$shop_order_num;
        $postData['bank_code'] = (string)$service_type;
        $postData['amount'] = (string)sprintf("%.2f",$deposit_amount);
        $postData['keep_field1'] = (string)$card_id;
        $postData['browserback_url'] = (string)$returnurl;//WY
        $postData['serverback_url'] = (string)$callbackurl;
        $signStr = "";
        foreach($postData as $val){
            $signStr .= $val;
        }
        $signStr.=$cards[$card_id]['mer_key'];
        $sign = md5(md5(md5($signStr)));
        $postData['aisleid'] = "-1";
        $postData['sign'] = (string)$sign;
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $data = array(
            'order_number' => $postData['billno'],
            'user_id' => $user_id,
            'username' => $username,
            'amount' => $deposit_amount,
            'pay_time' => date('Y-m-d H:i:s'),
            'source' => $_SERVER['HTTP_HOST'],
            'requestURI' => $requestURI,
            'card_id' => $card_id,
            'bank_id' => $bank_id,
        );
        $jsonResponse = $this->curlPostData($apiUrl, http_build_query($postData), $info);
        $response = json_decode($jsonResponse, true);
        if ($response != null && $response['success'] == 'true' && pay::addItem($data)) {
//                if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
//                    header("location:" . $response['qrcode']);
//                    die();
//                } else {
            header("location:" . '../pay/qrcode.php?code=' . $response['qrcode'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
            die();
//                }
        }else {
            log2file('jieanfuPay.log', $postData);
            die($jsonResponse);
        }
//        $postFields=$postData;
//        $postFields['url']=$apiUrl;
//        if (pay::addItem($data)) {
//            self::$view->setVar('postFields', $postFields);
//            self::$view->render('pay_jieanfuqrcode');
//        } else {
//            log2file('pay_jieanfuqrcode.log', $postData);
//            die('生成订单失败');
//        }
    }
    public function yiaiBack(){
        $response = file_get_contents('php://input');
        if ($response ===  '') die('参数错误0');
        parse_str($response, $response);
        //>>签名
        if (!isset($response["sign"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $sign = $response["sign"];
        //>>商户订单号
        if (!isset($response["orderid"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $orderid = $response["orderid"];
        //>>订单金额
        if (!isset($response["ovalue"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $ovalue = $response["ovalue"];
        //>>订单结果0：支付成功  -1 请求参数无效   -2 签名错误
        if (!isset($response["opstate"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        //>>易爱订单号
        if (!isset($response["sysorderid"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }
        $sysorderid = $response["sysorderid"];
        //>>易爱订单时间
        if (!isset($response["completiontime"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }
        //>>备注信息
        if (!isset($response["attach"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }
        //>>订单结果说明
        if (!isset($response["msg"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }

        $card_id = explode("_", $orderid)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        if(!$this->isYiaiSign($response,$sign,$card['mer_key'])){
            $this->logdump('签名错误');
            die('签名错误');
        }
        $order = pay::getItemByOrderNumber($orderid);
        if ($response['opstate'] == '0') {
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->yiaibak('gs4fj@5f!sda*dfuf', 'opstate=0','opstate=-1', $ovalue, $orderid, $sysorderid,$order);
        } else {
            $this->logdump("failed!交易失败:{$response['msg']},用户名{$order['username']} 交易订单{$orderid} 金额{$order['amount']} ");
            echo 'opstate=-1';
            die;
        }
    }
    public function yiaibak($authcode_key, $success_code, $fail_code,$orderAmount, $orderNo, $tradeNo, $order)
    {
        $depositOrder = deposits::getItemByOrderNum($orderNo, 2);
        if(empty($depositOrder)){
            $this->logdump("订单异常：存款记录不存在：{$orderNo}");
            echo $fail_code;
            die();
        }
        if (empty($order)) {
            $this->logdump("订单异常：订单不存在：{$orderNo}");
            echo $fail_code;
            die();
        }
        if ($order['status'] == '8' && $depositOrder['status'] == 8) {
            $this->logdump("订单异常：被回调的应该是未被处理的：{$order['order_number']} 状态：{$order['status']}");
            echo $success_code;
            die();
        }
        $random_benefit = config::getConfig('random_benefit');
        if (empty($orderAmount) || $order['amount'] - $orderAmount > $random_benefit) {
            $this->logdump("订单异常：{$order['amount']}与{$orderAmount}金额不相等");
            die;
        }
        $now = date('Y-m-d H:i:s');
        $update_data = array(
            'status' => 8,
            'pay_time' => $now,
            'trade_number' => $tradeNo,
        );
        pay::updateItem($orderNo, $update_data);

        //用CURL  向游戏提交数据
        $data = "verify=formal&user_id=" . $order['user_id'] . "&username=" . $order['username'] . "&amount=" . $order['amount'] . "&order_num=" . $tradeNo . "&shop_order_num=" . $orderNo . "&card_id=" . $order['card_id'] . "&bank_id="
            . $order['bank_id'] . "&pay_time=" . $now . "&source_fee=" . $order['source_fee'] . "&target_fee=" . $order['target_fee'];

        // $this->logdump(var_export($data, TRUE));
        $info = array();
        $call_back_result = $this->curlPostData($this->authcode($order['requestURI'], 'DECODE', $authcode_key), $data, $info);

        if (!is_numeric($call_back_result)) {
            $times = 0;
            while ($times < 3) {
                sleep(60);
                $call_back_result = $this->curlPostData($this->authcode($order['requestURI'], 'DECODE', $authcode_key), $data, $info);
                $this->logdump("第一次执行失败后 重发第" . ($times + 1) . "次 用户名{$order['username']} 订单{$order['trade_number']} 结果call_back_result={$call_back_result}");
                if (is_numeric($call_back_result)) {
                    break;
                }
                $times++;
            }
        }

        if ($call_back_result != "" && is_numeric($call_back_result)) {
            $update_data = array(
                'call_back_result' => $call_back_result,
            );

            if (!pay::updateItem($orderNo, $update_data)) {
                //如果商城的数据库修改失败需要记录，然后手动更新
                $data = array(
                    'user_id' => $order['user_id'],
                    'order_number' => $orderNo,
                    'trade_number' => $tradeNo,
                );

                pay::addErrorItem($data);
            }
        }

        //但是商城还是要返回成功给第三方的
        $this->logdump("success!用户名{$order['username']} 交易订单{$tradeNo} 金额{$order['amount']} 回调结果 {$call_back_result}");

        if ($call_back_result == '8' || $call_back_result == '9') {
            echo $success_code;
        }

        die;
    }
    public function isYiaiSign($sign_parse,$sign,$prikey) {
        $signPars = "";
        $signPars .= "orderid=".$sign_parse['orderid'].'&';
        $signPars .= "opstate=".$sign_parse['opstate'].'&';
        $signPars .= "ovalue=".$sign_parse['ovalue'].$prikey;
        return $sign == md5($signPars);
    }
    public function yiaiPay(){
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $codes = $this->request->getPost('codes', 'trim');
        $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
        $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');
        $requestURI = $this->request->getPost('requestURI', 'trim');
        if ($card_id == '') die('系统出错！(错误码：6003)');
        if (empty($username) || empty($user_id) || empty($card_id) || empty($bank_id) || empty($codes) || empty($shop_order_num) || empty($deposit_amount) || empty($requestURI)) die('参数错误');
        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;
        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));
        if ($hash != $timePart1 . $new_hash . $timePart2) die('系统出错！(错误码：6002)');
        $cards = cards::getItemsById(array($card_id));
        if (count($cards) == 0) die('系统出错！(错误码：6004)');
        if (time() > intval($time)) die('交易超时，请刷新充值页面重新充值');
        if ($username =='' && $user_id == '') die('用户不存在');
        if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) die('系统出错！(错误码：6000)');
        if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) die('系统出错！(错误码：6001)');
        $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
        $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
        $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
        $shop_url = $cards[$card_id]['shop_url'];
        $callbackurl = $cards[$card_id]['call_back_url'];
        $returnurl = $cards[$card_id]['return_url'];
        if ($shop_url == "") {
            $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
            $returnurl = $domain . 'pay/hrefback.php';
        } else if (strpos($shop_url, '?c=pay') === 0) {

        } else if (strpos($shop_url, '?c=pay') > 0) {

        } else {
            $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
            $returnurl = $shop_url . '/hrefback.php';
        }
        $service_type = '';
        $apiUrl = $GLOBALS['cfg']['pay_url']['yiai_api'];

        if ($cards[$card_id]["netway"] == "WX") {
            $service_type = "1004";
        } else if ($cards[$card_id]["netway"] == "WX_WAP") {
            $service_type = "1006";
        } else if ($cards[$card_id]['netway'] == "ZFB") {
            $service_type = "992";
        } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
            $service_type = "1010";
        } else if ($cards[$card_id]['netway'] == "QQ") {
            $service_type = "993";
        } else if ($cards[$card_id]['netway'] === 'WY') {
            $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
            switch ($third_party_bank_id) {
                // 工商银行
                case '1':
                    $service_type = '967';
                    break;
                // 农业银行
                case '2':
                    $service_type = '964';
                    break;
                // 建设银行
                case '3':
                    $service_type = '965';
                    break;
                // 招商银行
                case '4':
                    $service_type = '970';
                    break;
                // 交通银行
                case '5':
                    $service_type = '981';
                    break;
                // 中信银行
                case '6':
                    $service_type = '962';
                    break;
                // 邮政储蓄
                case '7':
                    $service_type = '971';
                    break;
                // 中国光大银行
                case '8':
                    $service_type = '986';
                    break;
                // 民生银行
                case '9':
                    $service_type = '980';
                    break;
                // 上海浦东发展银行
                case '10':
                    $service_type = '977';
                    break;
                // 兴业银行
                case '11':
                    $service_type = '972';
                    break;
                // 广发银行
                case '12':
                    $service_type = '985';
                    break;
                // 平安银行
                case '13':
                    $service_type = '978';
                    break;
                // 华夏银行
                case '15':
                    $service_type = '982';
                    break;
                // 东莞银行
                /*case '16':
                    break;*/
                // 渤海银行
                case '17':
                    $service_type = '988';
                    break;
                // 浙商银行
                case '19':
                    $service_type = '968';
                    break;
                // 北京银行
                case '20':
                    $service_type = '989';
                    break;
                // 中国银行
                case '22':
                    $service_type = '963';
                    break;
                default:
                    die('当前银行该支付方式暂不支持!');
                    break;
            }
        }
        $postData = array();
        $postData['parter'] = $cards[$card_id]['mer_no'];
        $postData['type'] = $service_type;
        $postData['value'] = $deposit_amount;
        $postData['orderid'] = substr($shop_order_num, 0, 30);
        $postData['callbackurl'] = $callbackurl;
        $postData['hrefbackurl'] = $returnurl;//WY
        $postData['attach'] = '充值';
        $signStr = "";
        $signStr .= "parter=" . $postData['parter'] . "&";
        $signStr .= "type=" . $postData['type'] . "&";
        $signStr .= "value=" . $postData['value'] . "&";
        $signStr .= "orderid=" . $postData['orderid'] . "&";
        $signStr .= "callbackurl=" . $postData['callbackurl'].$cards[$card_id]['mer_key'];
        $sign = md5($signStr.'');
        $postData['sign'] = $sign;
        $postData['agent'] = '';
        $postFields = array(
            'url' => $apiUrl,
            'parter' => $postData['parter'],
            'type' => $postData['type'],
            'value' => $postData['value'],
            'orderid' => $postData['orderid'],
            'callbackurl' => $postData['callbackurl'],
            'hrefbackurl' => $postData['hrefbackurl'],
            'attach' => $postData['attach'],
            'sign' => $postData['sign'],
            'agent' => $postData['agent'],
        );
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $data = array(
            'order_number' => $postData['orderid'],
            'user_id' => $user_id,
            'username' => $username,
            'amount' => $deposit_amount,
            'pay_time' => date('Y-m-d H:i:s'),
            'source' => $_SERVER['HTTP_HOST'],
            'requestURI' => $requestURI,
            'card_id' => $card_id,
            'bank_id' => $bank_id,
        );
        if (pay::addItem($data)) {
            self::$view->setVar('postFields', $postFields);
            self::$view->render('pay_yiai');
        } else {
            log2file('yiaiPay.log', $postFields);
            die('生成订单失败');
        }
    }
    public function qianbaobaoBack(){
        die();
        $response = file_get_contents('php://input');



        if ($response ===  '') {
            die('参数错误0');
        }


        parse_str($response, $response);
        //$response = $this->parseXML($response);
        if (!isset($response["sign"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $sign = $response["sign"];
        if (!isset($response["outOrderId"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $outOrderId = $response["outOrderId"];
        if (!isset($response["transAmt"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $transAmt = $response["transAmt"];

        if (!isset($response["merchantId"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $merchantId = $response["merchantId"];
        if (!isset($response["localOrderId"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $localOrderId = $response["localOrderId"];

        if (!isset($response["transTime"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $transTime = $response['transTime'];



        if (!isset($response["respType"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }

        $respType = $response['respType'];

        if (!isset($response["respCode"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }

        $respCode = trim($response['respCode']);


        if (!isset($response["respMsg"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }

        $respMsg = $response['respMsg'];




        $card_id = explode("_", $outOrderId)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        //dd($this->isTenpaySign($response,$sign,$card['mer_key']));

        //$localSign = strtoupper(md5($trade_type.$pay_result.$transaction_id.$out_trade_no.$total_fee.$bank_type.$time_end) . $card['mer_key']);


        if ($merchantId == $card['mer_no']) {


            $order = pay::getItemByOrderNumber($outOrderId);




            if ($response['respType'] == 'S' && $respCode == '00' ) {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                //dd('successcallback');
                $this->bak('gs4fj@5f!sda*dfuf', 'success', $transAmt, $outOrderId, $outOrderId,$order);


            } else {
                $this->logdump("failed!交易失败码:{$response['respCode']},用户名{$order['username']} 交易订单{$outOrderId} 金额{$order['amount']} ");
                echo '-1';
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }
    public function qianbaobaoPay(){
        die();
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;


//        if (time() > intval($time)) {
//            die('交易超时，请刷新充值页面重新充值');
//        }

        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));


        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');


            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');//订单号
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');//支付金额


            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];


            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }


            $service_type = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['qianbaobao_api'];
            if ($cards[$card_id]["netway"] == "WX") {
                $service_type = "1004";//扫码微信
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $service_type = "992";//扫码支付宝
            } else if ($cards[$card_id]['netway'] === 'WY') {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $service_type = "967";
                        break;
                    // 农业银行
                    case '2':
                        $service_type = "964";
                        break;
                    // 建设银行
                    case '3':
                        $service_type = "965";
                        break;
                    // 招商银行
                    case '4':
                        $service_type = "970";
                        break;
                    // 交通银行
                    case '5':
                        $service_type = "981";
                        break;
                    // 中信银行
                    case '6':
                        $service_type = "962";
                        break;
                    // 邮政储蓄
                    case '7':
                        $service_type = "971";
                        break;
                    // 中国光大银行
                    case '8':
                        $service_type = "986";
                        break;
                    // 民生银行
                    case '9':
                        $service_type = "980";
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $service_type = "977";
                        break;
                    // 兴业银行
                    case '11':
                        $service_type = "972";
                        break;
                    // 广发银行
                    case '12':
                        $service_type = "985";
                        break;
                    // 平安银行
                    case '13':
                        $service_type = "978";
                        break;
                    // 华夏银行
                    case '15':
                        $service_type = "982";
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        $service_type = "988";
                        break;
                    // 浙商银行
                    case '19':
                        $service_type = "968";
                        break;
                    // 北京银行
                    case '20':
                        $service_type = "989";
                        break;
                    // 广州银行
                    case '21':
                        break;
                    // 中国银行
                    case '22':
                        $service_type = "963";
                        break;

                }
            }
            $postData = array();
            $postData['parter'] = $cards[$card_id]['mer_no'];
            $postData['type'] = $service_type;
            $postData['value'] = $deposit_amount;
            $postData['orderid'] = substr($shop_order_num, 0, 30);
            $postData['callbackurl'] = $callbackurl;
            $postData['hrefbackurl'] = $returnurl;//WY
            $postData['attach'] = '充值';

            $signStr = "";
            $signStr .= "parter=" . $postData['parter'] . "&";
            $signStr .= "type=" . $postData['type'] . "&";
            $signStr .= "value=" . $postData['value'] . "&";
            $signStr .= "orderid=" . $postData['orderid'] . "&";
            $signStr .= "callbackurl=" . $postData['callbackurl'].$cards[$card_id]['mer_key'];
            $sign = md5($signStr.'');
            $postData['sign'] = $sign;
            $postFields = array(
                'url' => $apiUrl,
                'parter' => $postData['parter'],
                'type' => $postData['type'],
                'value' => $postData['value'],
                'orderid' => $postData['orderid'],
                'callbackurl' => $postData['callbackurl'],
                'hrefbackurl' => $postData['hrefbackurl'],
                'attach' => $postData['attach'],
                'sign' => $postData['sign'],
            );
            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
            $data = array(
                'order_number' => $postData['orderid'],
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );
//           header("Location: http://y.guavps.com/bank/?".http_build_query($postData));
//            exit;
            if (pay::addItem($data)) {
                self::$view->setVar('postFields', $postFields);
                self::$view->render('pay_qianbaobao');
            } else {
                log2file('qianbaobaoPay.log', $postFields);
                die('生成订单失败');
            }
        }
        die();
    }
    public function shunfuPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            if ($card_id == '') {
                die('系统出错！(错误码：6003)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $banktype = $cards[$card_id]["netway"];

            if ($cards[$card_id]["netway"] == "JD") {
                $banktype = "JDQB";
            } else if ($cards[$card_id]['netway'] == "JD_WAP") {
                $banktype = "JDQB_WAP";
            }

            $postFields = array(
                'merNo' => $cards[$card_id]['mer_no'],
                'payNetway' => $banktype,
                'random' => (string)rand(1000, 9999),
                'orderNo' => $shop_order_num,
                'amount' => (string)($deposit_amount * 100),
                'goodsInfo' => '充值',
                'callBackUrl' => $callbackurl,
                'callBackViewUrl' => $returnurl,
                'clientIP' => $this->getClientIp(),
            );

            $apiUrl = $GLOBALS['cfg']['pay_url']['shunfu_api'];
            ksort($postFields);
            $postFields['sign'] = $this->getShunFuSign($postFields, $cards[$card_id]['mer_key']);
            $postJson = $this->shunfuJsonEncode($postFields);
            $postArray = array('data' => $postJson);
            $response = $this->shunfuPost($apiUrl, $postArray);
            $response = json_decode($response, true);
            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            if ($response !== null && isset($response['resultCode']) & $response['resultCode'] === '00') {
                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        self::$view->setVar('qrcode_url', $response['qrcodeInfo']);
                        self::$view->render('pay_shunfu');
                        die();
                    } else {
                        header("location:" . '../pay/qrcode.php?code=' . $response['qrcodeInfo'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                        die();
                    }
                }
            } else {
                if (isset($response['resultMsg'])) {
                    echo $response['resultMsg'];
                } else {
                    echo '生成订单失败';
                }

                log2file('shunfuPay.log', $postFields);
                log2file('shunfuPay.log', $response);
            }
        } else {
            die();
        }
    }

    public function xiongmaoPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            if ($card_id == '') {
                die('系统出错！(错误码：6003)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $accountType = "0";
            $orderAmount = strval($deposit_amount * 100);
            $orderTitle = "充值";
            $requestId = $shop_order_num;
            $tranCode = $this->request->getPost('tranCode', 'trim');
            $type = "SaoMa";
            $userId = $cards[$card_id]["mer_no"];
            $version = "1.0.0";
            $key = $cards[$card_id]["mer_key"];

            $strA = "accountType=$accountType&callBackUrl=$callbackurl&orderAmount=$orderAmount&orderTitle=$orderTitle&requestId=$requestId&tranCode=$tranCode&type=$type&userId=$userId&version=$version&key=$key";
            $signData = strtoupper(md5($strA));

            $postFields = array(
                'accountType' => $accountType,
                'callBackUrl' => $callbackurl,
                'orderAmount' => $orderAmount,
                'orderTitle' => $orderTitle,
                'requestId' => $requestId,
                'signData' => $signData,
                'tranCode' => $tranCode,
                'type' => $type,
                'userId' => $userId,
                'version' => $version,
            );

            $apiUrl = $GLOBALS['cfg']['pay_url']['xiongmao_api'];
            $response = $this->xiongmaoCurlPostData($apiUrl, json_encode($postFields));
            $jsonResponse = json_decode($response);

            if ($jsonResponse && $jsonResponse->qrCodeUrl) {
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                $netway = '';

                if ($tranCode == 'WXSM') {
                    $netway = 'WX';
                } else if ($tranCode == 'ZFBSM') {
                    $netway = 'ZFB';
                }

                if (pay::addItem($data)) {
                    header("location:" . '../pay/qrcode.php?code=' . $jsonResponse->qrCodeUrl . '&netway=' . $netway . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                }
            } else {
                log2file('xiongmaoPay.log', $postFields);
                log2file('xiongmaoPay.log', $jsonResponse);
                echo '生成订单失败';
            }
        } else {
            die();
        }
    }

    public function renxinPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            if ($card_id == '') {
                die('系统出错！(错误码：6003)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $version = '3.0';
            $method = 'Rx.online.pay';
            $partner = $cards[$card_id]["mer_no"];
            $banktype = '';
            $paymoney = $deposit_amount;
            $ordernumber = $shop_order_num;
            $key = $cards[$card_id]["mer_key"];

            if ($cards[$card_id]["netway"] == "WX") {
                $banktype = "WEIXIN";
            } else if ($cards[$card_id]['netway'] == "WX_WAP") {
                $banktype = "WEIXINWAP";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $banktype = "ALIPAY";
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $banktype = "ALIPAYWAP";
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $banktype = "QQ";
            } else if ($cards[$card_id]['netway'] == "QQ_WAP") {
                $banktype = "QQWAP";
            } else if ($cards[$card_id]['netway'] == "JD") {
                $banktype = "JD";
            } else if ($cards[$card_id]['netway'] == "JD_WAP") {
                $banktype = "JDWAP";
            } else if ($cards[$card_id]['netway'] == "CFT") {
                $banktype = "TENPAY";
            } else if ($cards[$card_id]['netway'] == "CFT_WAP") {
                $banktype = "TENPAYWAP";
            } else if ($cards[$card_id]['netway'] == "WY") {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                $banktype = '';

                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $banktype = 'ICBC';
                        break;
                    // 农业银行
                    case '2':
                        $banktype = 'ABC';
                        break;
                    // 建设银行
                    case '3':
                        $banktype = 'CCB';
                        break;
                    // 招商银行
                    case '4':
                        $banktype = 'CMB';
                        break;
                    // 交通银行
                    case '5':
                        $banktype = 'BOCO';
                        break;
                    // 中信银行
                    case '6':
                        $banktype = 'CTTIC';
                        break;
                    // 邮政储蓄
                    case '7':
                        $banktype = 'PSBS';
                        break;
                    // 中国光大银行
                    case '8':
                        $banktype = 'CEB';
                        break;
                    // 民生银行
                    case '9':
                        $banktype = 'CMBC';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $banktype = 'SPDB';
                        break;
                    // 兴业银行
                    case '11':
                        $banktype = 'CIB';
                        break;
                    // 广发银行
                    case '12':
                        $banktype = 'GDB';
                        break;
                    // 平安银行
                    case '13':
                        $banktype = 'PINGANBANK';
                        break;
                    // 华夏银行
                    case '15':
                        $banktype = 'HXB';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        $banktype = 'CBHB';
                        break;
                    // 浙商银行
                    case '19':
                        $banktype = 'CZB';
                        break;
                    // 北京银行
                    case '20':
                        $banktype = 'BCCB';
                        break;
                    // 广州银行
                    case '21':
                        break;
                    // 中国银行
                    case '22':
                        $banktype = 'BOC';
                        break;
                }
            }

            $signSource = sprintf("version=%s&method=%s&partner=%s&banktype=%s&paymoney=%s&ordernumber=%s&callbackurl=%s%s", $version, $method, $partner, $banktype, $paymoney, $ordernumber, $callbackurl, $key);
            $sign = md5($signSource);
            $apiUrl = $GLOBALS['cfg']['pay_url']['renxin_api'];
            $postUrl = $apiUrl . "?version=" . $version;
            $postUrl .= "&method=" . $method;
            $postUrl .= "&partner=" . $partner;
            $postUrl .= "&banktype=" . $banktype;
            $postUrl .= "&paymoney=" . $paymoney;
            $postUrl .= "&ordernumber=" . $ordernumber;
            $postUrl .= "&callbackurl=" . $callbackurl;
            $postUrl .= "&hrefbackurl=" . $returnurl;
            $postUrl .= "&goodsname=";
            $postUrl .= "&attach=";
            $postUrl .= "&isshow=1";
            $postUrl .= "&sign=" . $sign;
            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            $data = array(
                'order_number' => $shop_order_num,
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (pay::addItem($data)) {
                header("location:$postUrl");
            } else {
                $this->log2file('renxinPay.log', $postUrl);
                echo '生成订单失败';
            }
        } else {
            die();
        }
    }

    public function gaotongPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            if ($card_id == '') {
                die('系统出错！(错误码：6003)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
            }

            $banktype = '';
            $key = $cards[$card_id]["mer_key"];

            if ($cards[$card_id]["netway"] == "WX") {
                $banktype = "WEIXIN";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $banktype = "ALIPAY";
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $banktype = "QQPAY";
            } else if ($cards[$card_id]['netway'] == "WX_WAP") {
                $banktype = "WEIXINWAP";
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $banktype = "ALIPAYWAP";
            } else if ($cards[$card_id]['netway'] == "QQ_WAP") {
                $banktype = "QQPAYWAP";
            } else if ($cards[$card_id]['netway'] == "JD") {
                $banktype = "JDPAY";
            } else if ($cards[$card_id]['netway'] == "JD_WAP") {
                $banktype = "JDPAYWAP";
            } else if ($cards[$card_id]['netway'] == "YL") {
                $banktype = "JDPAYWAP";
            } else if ($cards[$card_id]['netway'] == "WY") {
                switch ($third_party_bank_id){
                    // 工商银行
                    case '1':
                        $banktype = 'ICBC';
                        break;
                    // 农业银行
                    case '2':
                        $banktype = 'ABC';
                        break;
                    // 建设银行
                    case '3':
                        $banktype = 'CCB';
                        break;
                    // 招商银行
                    case '4':
                        $banktype = 'CMB';
                        break;
                    // 交通银行
                    case '5':
                        $banktype = 'BOCO';
                        break;
                    // 中信银行
                    case '6':
                        $banktype = 'CTTIC';
                        break;
                    // 邮政储蓄
                    case '7':
                        $banktype = 'PSBS';
                        break;
                    // 中国光大银行
                    case '8':
                        $banktype = 'CEB';
                        break;
                    // 民生银行
                    case '9':
                        $banktype = 'CMBC';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $banktype = 'SPDB';
                        break;
                    // 兴业银行
                    case '11':
                        $banktype = 'CIB';
                        break;
                    // 广发银行
                    case '12':
                        $banktype = 'GDB';
                        break;
                    // 平安银行
                    case '13':
                        $banktype = 'PINGANBANK';
                        break;
                    // 华夏银行
                    case '15':
                        $banktype = 'HXB';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        $banktype = 'CBHB';
                        break;
                    // 浙商银行
                    case '19':
                        $banktype = 'SZB';
                        break;
                    // 北京银行
                    case '20':
                        $banktype = 'BCCB';
                        break;
                    // 广州银行
                    case '21':
                        $banktype = '';
                        break;
                    // 中国银行
                    case '22':
                        $banktype = 'BOC';
                        break;
                }
            }

            $postData = array();
            $postData['partner'] = $cards[$card_id]["mer_no"];
            $postData['banktype'] = $banktype;
            $postData['paymoney'] = $deposit_amount;
            $postData['ordernumber'] = $shop_order_num;
            $postData['callbackurl'] = $callbackurl;
            $postData['attach'] = '';
            $postData['sign'] = $this->gaotongSign($postData, $key);
            $apiUrl = $GLOBALS['cfg']['pay_url']['gaotong_api'];
            $postUrl = $apiUrl . '?' . http_build_query($postData);
            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            $data = array(
                'order_number' => $shop_order_num,
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (pay::addItem($data)) {
                header("location:" . $postUrl);
            } else {
                log2file('gaotong.log', $postUrl);
                echo '生成订单失败';
            }
        } else {
            die();
        }
    }

    public function qicaiPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            if ($card_id == '') {
                die('系统出错！(错误码：6003)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $banktype = '';
            $key = $cards[$card_id]["mer_key"];

            if ($cards[$card_id]["netway"] == "WX") {
                $banktype = "6";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $banktype = "7";
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $banktype = "8";
            } else if ($cards[$card_id]['netway'] == "WY") {
                switch ($third_party_bank_id){
                    // 工商银行
                    case '1':
                        $banktype = '01020000';
                        break;
                    // 农业银行
                    case '2':
                        $banktype = '01030000';
                        break;
                    // 建设银行
                    case '3':
                        $banktype = '01050000';
                        break;
                    // 招商银行
                    case '4':
                        $banktype = '03080000';
                        break;
                    // 交通银行
                    case '5':
                        $banktype = '03010000';
                        break;
                    // 中信银行
                    case '6':
                        $banktype = '03020000';
                        break;
                    // 邮政储蓄
                    case '7':
                        break;
                    // 中国光大银行
                    case '8':
                        $banktype = '03030000';
                        break;
                    // 民生银行
                    case '9':
                        $banktype = '03050000';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $banktype = '03100000';
                        break;
                    // 兴业银行
                    case '11':
                        $banktype = '03090000';
                        break;
                    // 广发银行
                    case '12':
                        $banktype = '03060000';
                        break;
                    // 平安银行
                    case '13':
                        $banktype = '03070000';
                        break;
                    // 华夏银行
                    case '15':
                        $banktype = '03040000';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        break;
                    // 浙商银行
                    case '19':
                        break;
                    // 北京银行
                    case '20':
                        break;
                    // 广州银行
                    case '21':
                        $banktype = '';
                        break;
                    // 中国银行
                    case '22':
                        $banktype = '01040000';
                        break;
                }

                $postData = array();
                $postData['company_oid'] = $cards[$card_id]["mer_no"];
                $postData['order_id'] = $shop_order_num;
                $postData['item_name'] = '充值';
                $postData['item_info'] = '充值';
                $amount = number_format(floatval($deposit_amount), 2, '.', '');
                $postData['money_num'] = $amount;
                $postData['notify_url'] = $callbackurl;
                $postData['return_url'] = $returnurl;
                $postData['bank_id'] = $banktype;
                $postData['pay_type'] = '1';

                $signStr = 'bank_id='.$postData['bank_id'].'&company_oid='.$postData['company_oid'].'&item_info='.$postData['item_info'].'&item_name='.$postData['item_name'].'&money_num='.$postData['money_num'].'&notify_url='.$postData['notify_url'].'&order_id='.$postData['order_id'].'&pay_type='.$postData['pay_type'].'&return_url='.$postData['return_url'];
                $sign = '';
                $merchant_private_key= openssl_get_privatekey($this->formatRSAKey($cards[$card_id]['mer_key'], "private"));
                openssl_sign($signStr,$sign,$merchant_private_key,"RSA-SHA1");
                $sign = base64_encode($sign);
                $postData['sign'] = $sign;
                $postData['url'] = $apiUrl = $GLOBALS['cfg']['pay_url']['qicai_wy_api'];
                self::$view->setVar('postFields', $postData);
                self::$view->render('pay_qicai');
                die();
            }

            $postData = array();
            $postData['company_oid'] = $cards[$card_id]["mer_no"];
            $postData['order_id'] = $shop_order_num;
            $postData['item_name'] = '充值';
            $postData['item_info'] = '充值';
            $amount = number_format(floatval($deposit_amount), 2, '.', '');
            $postData['money_num'] = $amount;
            $postData['notify_url'] = $callbackurl;
            $postData['pay_type'] = $banktype;

            $signStr = 'company_oid='.$postData['company_oid'].'&item_info='.$postData['item_info'].'&item_name='.$postData['item_name'].'&money_num='.$postData['money_num'].'&notify_url='.$postData['notify_url'].'&order_id='.$postData['order_id'].'&pay_type='.$postData['pay_type'];
            $sign = '';
            $merchant_private_key= openssl_get_privatekey($this->formatRSAKey($cards[$card_id]['mer_key'], "private"));
            openssl_sign($signStr,$sign,$merchant_private_key,"RSA-SHA1");
            $sign = base64_encode($sign);
            $postData['sign'] = $sign;
            $apiUrl = $GLOBALS['cfg']['pay_url']['qicai_api'];
            $info = array();
            $response = $this->curlPostData($apiUrl, $postData, $info);
            $response = json_decode($response);

            if ($response != null && $response->status == 'ok' && $response->result == 'ok') {
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        header("location:" . $response->url);
                        die();
                    } else {
                        header("location:" . '../pay/qrcode.php?code=' . $response->url . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                        die();
                    }
                } else {
                    log2file('qicai.log', $postData);
                    log2file('qicai.log', $response);
                    echo '生成订单失败';
                }
            } else {
                if ($response != null && $response->message != null) {
                    echo $response->message;
                }

                log2file('qicai.log', $postData);
                log2file('qicai.log', $response);
            }
        } else {
            die();
        }
    }

    public function shunbaoPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes =  $this->request->getPost('codes', 'trim');;

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $amount = number_format(floatval($deposit_amount), 2, '.', '');
            $bank = '';
            $orderNo = $shop_order_num;

            if ($cards[$card_id]["netway"] == "WX") {
                $bank = "wxpay";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $bank = "alipay";
            } else if ($cards[$card_id]['netway'] == "WY") {
                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bank = 'ICBC';
                        break;
                    // 农业银行
                    case '2':
                        $bank = 'ABC';
                        break;
                    // 建设银行
                    case '3':
                        $bank = 'CBC';
                        break;
                    // 招商银行
                    case '4':
                        $bank = 'CMBC';
                        break;
                    // 交通银行
                    case '5':
                        $bank = 'BOC';
                        break;
                    // 中信银行
                    case '6':
                        $bank = 'CTTIC';
                        break;
                    // 邮政储蓄
                    case '7':
                        $bank = 'PSBC';
                        break;
                    // 中国光大银行
                    case '8':
                        $bank = 'CEB';
                        break;
                    // 民生银行
                    case '9':
                        $bank = 'CMSB';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bank = 'SPDB';
                        break;
                    // 兴业银行
                    case '11':
                        $bank = 'CIB';
                        break;
                    // 广发银行
                    case '12':
                        $bank = 'ICGB';
                        break;
                    // 平安银行
                    case '13':
                        $bank = 'PAB';
                        break;
                    // 华夏银行
                    case '15':
                        $bank = 'HXB';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        $bank = 'CBB';
                        break;
                    // 浙商银行
                    case '19':
                        break;
                    // 北京银行
                    case '20':
                        $bank = 'BBJ';
                        break;
                    // 广州银行
                    case '21':
                        $bank = '';
                        break;
                    // 中国银行
                    case '22':
                        $bank = 'BC';
                        break;
                }
            }

            $postFields = array(
                'amount' => $amount,
                'bank' => $bank,
                'orderNo' => $orderNo,
            );

            $postFields['gsNum'] = '';
            $postFields['gsName'] = '';
            $postFields['gsDesc'] = '';
            $postFields['sign'] = $this->shunbaoSign($postFields, $cards[$card_id]["mer_key"]);
            $postFields['extend1'] = '';
            $postFields['extend1'] = '';
            $postFields['extend2'] = '';
            $postFields['extend3'] = '';
            $postFields['extend4'] = '';
            $postFields['extend5'] = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['shunbao_api'];
            $postFields['url'] = $apiUrl;
            $postFields['merchantId'] = $cards[$card_id]["mer_no"];
            $_SESSION['OrderMoney'] = $amount;
            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            $data = array(
                'order_number' => $shop_order_num,
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (pay::addItem($data)) {
                self::$view->setVar('postFields', $postFields);
                self::$view->render('pay_default');
            } else {
                log2file('shunbaoPay.log', $postFields);
                die('生成订单失败');
            }
        } else {
            die();
        }
    }

    public function kaolaPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            if ($card_id == '') {
                die('系统出错！(错误码：6003)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $random_benefit	= config::getConfig('random_benefit');

            if ($random_benefit != "0") {
                $deposit_amount -= $this->randomFloat(0.01, $random_benefit);
            }

            $trade_type = '';
            $banktype = '';

            if ($cards[$card_id]["netway"] == "WX") {
                $trade_type = "WEIXIN_QR";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $trade_type = "ALIPAY_QR";
            } else if ($cards[$card_id]['netway'] == "WY") {
                $trade_type = "UNIONPAY";

                switch ($third_party_bank_id){
                    // 工商银行
                    case '1':
                        $banktype = 'ICBC';
                        break;
                    // 农业银行
                    case '2':
                        $banktype = 'ABC';
                        break;
                    // 建设银行
                    case '3':
                        $banktype = 'CCB';
                        break;
                    // 招商银行
                    case '4':
                        $banktype = 'CMB';
                        break;
                    // 交通银行
                    case '5':
                        $banktype = 'BOCO';
                        break;
                    // 中信银行
                    case '6':
                        $banktype = 'CTTIC';
                        break;
                    // 邮政储蓄
                    case '7':
                        break;
                    // 中国光大银行
                    case '8':
                        $banktype = 'CEB';
                        break;
                    // 民生银行
                    case '9':
                        $banktype = 'CMBC';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $banktype = 'SPDB';
                        break;
                    // 兴业银行
                    case '11':
                        $banktype = 'CIB';
                        break;
                    // 广发银行
                    case '12':
                        $banktype = 'GDB';
                        break;
                    // 平安银行
                    case '13':
                        $banktype = 'PINGANBANK';
                        break;
                    // 华夏银行
                    case '15':
                        $banktype = 'HXB';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        break;
                    // 浙商银行
                    case '19':
                        break;
                    // 北京银行
                    case '20':
                        break;
                    // 广州银行
                    case '21':
                        $banktype = '';
                        break;
                    // 中国银行
                    case '22':
                        $banktype = 'BOC';
                        break;
                }

                $postData = array();
                $postData['merno'] = $cards[$card_id]["mer_no"];
                $postData['version'] = '1';
                $postData['order_date'] = date('Ymd');
                $postData['out_trade_no'] = $shop_order_num;
                $postData['total_fee'] = $deposit_amount * 100;
                $postData['notify_url'] = $callbackurl;
                $postData['return_url'] = $returnurl;
                $postData['trade_type'] = $trade_type;
                $postData['bankkey'] = $banktype;
                $postData['sign'] = $this->getKaoLaSign($postData, $cards[$card_id]["mer_key"]);
                $postData['url'] = $apiUrl = $GLOBALS['cfg']['pay_url']['kaola_api'];

                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    self::$view->setVar('postFields', $postData);
                    self::$view->render('pay_kaola');
                } else {
                    log2file('kaolaPay.log', $postData);
                    echo '生成订单失败';
                }

                die();
            }

            $postData = array();
            $postData['merno'] = $cards[$card_id]["mer_no"];
            $postData['version'] = '1';
            $postData['order_date'] = date('Ymd');
            $postData['out_trade_no'] = $shop_order_num;
            $postData['total_fee'] = $deposit_amount * 100;
            $postData['notify_url'] = $callbackurl;
            $postData['return_url'] = $returnurl;
            $postData['trade_type'] = $trade_type;
            $postData['sign'] = $this->getKaoLaSign($postData, $cards[$card_id]["mer_key"]);

            $apiUrl = $GLOBALS['cfg']['pay_url']['kaola_api'];
            $info = array();
            $response = $this->curlPostDataNew($apiUrl, http_build_query($postData), $info);
            $response = json_decode($response);

            if ($response != null && $response->code == '0') {
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        header("location:" . $response->url);
                        die();
                    } else {
                        header("location:" . '../pay/qrcode.php?code=' . $response->url . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                        die();
                    }
                } else {
                    log2file('kaolaPay.log', $postData);
                    log2file('kaolaPay.log', $response);
                    echo '生成订单失败';
                }
            } else {
                if ($response != null && $response->msg != null) {
                    echo $response->msg;
                }

                log2file('kaolaPay.log', $postData);
                log2file('kaolaPay.log', $response);
            }
        } else {
            die();
        }
    }

    public function luoboPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $lb_bank_id = $this->request->getPost('lb_bank_id', 'trim');
            $amount = number_format(floatval($deposit_amount), 2, '.', '');
            $bank = '';

            if ($cards[$card_id]["netway"] == "WX") {
                $bank = '993';
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $bank = '992';
            } else if ($cards[$card_id]['netway'] == "WY") {
                $bank = $lb_bank_id;
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $bank = '995';
            } else if ($cards[$card_id]['netway'] == "QQ_WAP") {
                $bank = '9921';
            } else if ($cards[$card_id]['netway'] == "WX_WAP") {
                $bank = '9932';
            } else if ($cards[$card_id]['netway'] == "KJ") {
                $bank = '9933';
            } else if ($cards[$card_id]['netway'] == "YL") {
                $bank = '9931';
            } else if ($cards[$card_id]['netway'] == "JD") {
                $bank = '996';
            }

            $postFields = array(
                'parter' => $cards[$card_id]["mer_no"],
                'type' => $bank,
                'value' => $amount,
                'orderid' => $shop_order_num,
                'callbackurl' => $callbackurl,
                'hrefbackurl' => $returnurl,
                'payerIp' => $this->getClientIp(),
                'attach' => '',
                'sign' => '',
            );
            $postFields['sign'] =  $this->getLuoBoSign($postFields, $cards[$card_id]["mer_key"]);
            $apiUrl = $GLOBALS['cfg']['pay_url']['luobo_api'];
            $postFields['url'] = $apiUrl;
            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            $data = array(
                'order_number' => $shop_order_num,
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (pay::addItem($data)) {
                self::$view->setVar('postFields', $postFields);
                self::$view->render('pay_luobo');
            } else {
                log2file('luoboPay.log', $postFields);
                die('生成订单失败');
            }
        } else {
            die();
        }
    }

    public function jinfukaPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $amount = number_format(floatval($deposit_amount), 2, '.', '');
            $bank = '';
            $appSence = '';

            if ($cards[$card_id]["netway"] == "WX") {
                $bank = '1005';
                $appSence = '1001';
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $bank = '1006';
                $appSence = '1001';
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $bank = '1008';
                $appSence = '1002';
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $bank = '1013';
                $appSence = '1001';
            } else if ($cards[$card_id]['netway'] == "QQ_WAP") {
                $bank = '1014';
                $appSence = '1002';
            } else if ($cards[$card_id]['netway'] == "WY") {
                $bank = '1003';
                $appSence = '1001';
            }

            $merInfos = explode('|', $cards[$card_id]["mer_no"]);

            $_encParam = array(
                'terId' => $merInfos[1],
                'businessOrdid' => $shop_order_num,
                'orderName' => '充值',
                'merId' => $merInfos[0],
                'tradeMoney'=> $amount * 100,
                'payType' => $bank,
                'syncURL' => $returnurl,
                'asynURL' => $callbackurl,
                'appSence' => $appSence,
                'selfParam' => '',
            );

            $priKey= openssl_get_privatekey($this->formatKey($cards[$card_id]['mer_key'], "private"));
            $pubkey= openssl_pkey_get_public($this->formatKey($cards[$card_id]['card_pass']));
            $enc_json = json_encode($_encParam,JSON_UNESCAPED_UNICODE);
            $Split = str_split($enc_json, 64);
            $encParam_encrypted = '';

            ForEach($Split as $Part)
            {
                openssl_public_encrypt($Part,$PartialData, $pubkey); // 服务器公钥加密
                $encParam_encrypted .= $PartialData;
            }

            $encParam = base64_encode(($encParam_encrypted)); // 加密的业务参数
            openssl_sign($encParam_encrypted, $sign_info, $priKey);
            $sign = base64_encode($sign_info); // 加密业务参数的签名

            $postFields = array(
                'sign' => $sign,
                'merId' => $_encParam['merId'],
                'version' => '1.0.9',
                'encParam' => $encParam,
                'url' => config::getConfig('jinfuka_api'),
            );

            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            $data = array(
                'order_number' => $shop_order_num,
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (pay::addItem($data)) {
                self::$view->setVar('postFields', $postFields);
                self::$view->render('pay_jinfuka');
            } else {
                log2file('jinfukaPay.log', $postFields);
                die('生成订单失败');
            }
        } else {
            die();
        }
    }

    public function zhifuPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash,0,5);
        $timePart2 = substr($hash,5 + 32,5);
        $time = $timePart1 . $timePart2;

        if(time() > intval($time)){
            die('交易超时，请刷新充值页面重新充值');
        }

        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_'. $username . '_' . date('Ymd'));

        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $amount = number_format(floatval($deposit_amount), 2, '.', '');
            $bank = '';

            if ($cards[$card_id]["netway"] == "WX") {
                $bank = 'weixin_scan';
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $bank = 'alipay_scan';
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $bank = 'qq_scan';
            } else if ($cards[$card_id]['netway'] == "WY") {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                $banktype = '';

                switch ($third_party_bank_id){
                    // 工商银行
                    case '1':
                        $banktype = 'ICBC';
                        break;
                    // 农业银行
                    case '2':
                        $banktype = 'ABC';
                        break;
                    // 建设银行
                    case '3':
                        $banktype = 'CCB';
                        break;
                    // 招商银行
                    case '4':
                        $banktype = 'CMB';
                        break;
                    // 交通银行
                    case '5':
                        $banktype = 'BCOM';
                        break;
                    // 中信银行
                    case '6':
                        $banktype = 'ECITIC';
                        break;
                    // 邮政储蓄
                    case '7':
                        $banktype = 'PSBC';
                        break;
                    // 中国光大银行
                    case '8':
                        $banktype = 'CEBB';
                        break;
                    // 民生银行
                    case '9':
                        $banktype = 'CMBC';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $banktype = 'SPDB';
                        break;
                    // 兴业银行
                    case '11':
                        $banktype = 'CIB';
                        break;
                    // 广发银行
                    case '12':
                        $banktype = 'GDB';
                        break;
                    // 平安银行
                    case '13':
                        $banktype = 'SPABANK';
                        break;
                    // 华夏银行
                    case '15':
                        $banktype = 'HXB';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        break;
                    // 浙商银行
                    case '19':
                        break;
                    // 北京银行
                    case '20':
                        $banktype = 'BOB';
                        break;
                    // 广州银行
                    case '21':
                        break;
                    // 中国银行
                    case '22':
                        $banktype = 'BOC';
                        break;
                }

                $merInfos = explode('|', $cards[$card_id]["mer_no"]);
                $merchant_code = $merInfos[0];
                $service_type = "direct_pay";
                $notify_url = $callbackurl;
                $interface_version = "V3.0";
                $input_charset = "UTF-8";
                $sign_type = "RSA-S";
                $return_url = $returnurl;
                $pay_type = "b2c";
                $order_no = $shop_order_num;
                $order_time = date('Y-m-d H:i:s');
                $order_amount = $amount;
                $product_name = "充值";

                $signStr= "";
                $bank_code = $banktype;

                if($bank_code != ""){
                    $signStr = $signStr."bank_code=".$bank_code."&";
                }

                $signStr = $signStr."input_charset=".$input_charset."&";
                $signStr = $signStr."interface_version=".$interface_version."&";
                $signStr = $signStr."merchant_code=".$merchant_code."&";
                $signStr = $signStr."notify_url=".$notify_url."&";
                $signStr = $signStr."order_amount=".$order_amount."&";
                $signStr = $signStr."order_no=".$order_no."&";
                $signStr = $signStr."order_time=".$order_time."&";

                if($pay_type != ""){
                    $signStr = $signStr."pay_type=".$pay_type."&";
                }

                $signStr = $signStr."product_name=".$product_name."&";

                if($return_url != ""){
                    $signStr = $signStr."return_url=".$return_url."&";
                }

                $signStr = $signStr."service_type=".$service_type;
                $merchant_private_key= openssl_get_privatekey($this->formatKey($cards[$card_id]['mer_key'], "private"));
                openssl_sign($signStr,$sign_info,$merchant_private_key,OPENSSL_ALGO_MD5);
                $sign = base64_encode($sign_info);

                $postFields = array(
                    'url' => config::getConfig('zhifu_wy_api'),
                    'sign' => $sign,
                    'merchant_code' => $merchant_code,
                    'bank_code' => $bank_code,
                    'order_no' => $order_no,
                    'order_amount' => $order_amount,
                    'service_type' => $service_type,
                    'input_charset' => $input_charset,
                    'notify_url' => $notify_url,
                    'interface_version' => $interface_version,
                    'sign_type' => $sign_type,
                    'order_time' => $order_time,
                    'product_name' => $product_name,
                    'pay_type' => $pay_type,
                    'return_url' => $return_url,
                );

                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    self::$view->setVar('postFields', $postFields);
                    self::$view->render('pay_zhifu');
                } else {
                    log2file('zhifuPay.log', $postFields);
                    die('生成订单失败');
                }

                die();
            }

            $merInfos = explode('|', $cards[$card_id]["mer_no"]);
            $merchant_code = $merInfos[0];
            $service_type = $bank; //微信：weixin_scan 支付宝：alipay_scan 智汇宝：zhb_scan
            $notify_url = $callbackurl;
            $interface_version = 'V3.1';
            $client_ip = $this->getClientIp();
            $sign_type = 'RSA-S';
            $order_no = $shop_order_num;
            $order_time = date('Y-m-d H:i:s');
            $order_amount = $amount;
            $product_name = '充值';

            $signStr = "";
            $signStr = $signStr."client_ip=".$client_ip."&";
            $signStr = $signStr."interface_version=".$interface_version."&";
            $signStr = $signStr."merchant_code=".$merchant_code."&";
            $signStr = $signStr."notify_url=".$notify_url."&";
            $signStr = $signStr."order_amount=".$order_amount."&";
            $signStr = $signStr."order_no=".$order_no."&";
            $signStr = $signStr."order_time=".$order_time."&";
            $signStr = $signStr."product_name=".$product_name."&";
            $signStr = $signStr."service_type=".$service_type;
            $merchant_private_key= openssl_get_privatekey($this->formatKey($cards[$card_id]['mer_key'], "private"));
            openssl_sign($signStr,$sign_info,$merchant_private_key,OPENSSL_ALGO_MD5);
            $sign = base64_encode($sign_info);

            $postdata=array(
                'merchant_code'=>$merchant_code,
                'service_type'=>$service_type,
                'notify_url'=>$notify_url,
                'interface_version'=>$interface_version,
                'sign_type'=>$sign_type,
                'order_no'=>$order_no,
                'client_ip'=>$client_ip,
                'sign'=>$sign,
                'order_time'=>$order_time,
                'order_amount'=>$order_amount,
                'product_name'=>$product_name
            );

            $apiUrl = $GLOBALS['cfg']['pay_url']['zhifu_api'];
            $info = array();
            $response = $this->zhifuCurlPostData($apiUrl, $postdata, $info);
            $response = $this->xmlToArray($response);

            if (isset($response['response']) && isset($response['response']['result_code']) && $response['response']['result_code'] == 0) {
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (strstr($cards[$card_id]['netway'], "QQ") > -1) {
                    $response['response']['qrcode'] = urldecode($response['response']['qrcode']);
                }

                if (pay::addItem($data)) {
                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        header("location:" . $response['response']['qrcode']);
                        die();
                    } else {
                        header("location:" . '../pay/qrcode.php?code=' . $response['response']['qrcode'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                        die();
                    }
                } else {
                    log2file('zhifuPay.log', $data);
                    die('生成订单失败');
                }
            } else {
                if (isset($response['response']) && isset($response['response']['resp_desc'])) {
                    echo $response['response']['resp_desc'];
                }

                log2file('zhifuPay.log', $response);
            }
        } else {
            die();
        }
    }

    public function duodebaoPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash,0,5);
        $timePart2 = substr($hash,5 + 32,5);
        $time = $timePart1 . $timePart2;

        if(time() > intval($time)){
            die('交易超时，请刷新充值页面重新充值');
        }

        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_'. $username . '_' . date('Ymd'));

        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $amount = number_format(floatval($deposit_amount), 2, '.', '');
            $bank = '';

            if ($cards[$card_id]["netway"] == "WX") {
                $bank = 'weixin_scan';
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $bank = 'alipay_scan';
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $bank = 'qq_scan';
            } else if ($cards[$card_id]['netway'] == "WY") {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                $banktype = '';

                switch ($third_party_bank_id){
                    // 工商银行
                    case '1':
                        $banktype = 'ICBC';
                        break;
                    // 农业银行
                    case '2':
                        $banktype = 'ABC';
                        break;
                    // 建设银行
                    case '3':
                        $banktype = 'CCB';
                        break;
                    // 招商银行
                    case '4':
                        $banktype = 'CMB';
                        break;
                    // 交通银行
                    case '5':
                        $banktype = 'BCOM';
                        break;
                    // 中信银行
                    case '6':
                        $banktype = 'ECITIC';
                        break;
                    // 邮政储蓄
                    case '7':
                        $banktype = 'PSBC';
                        break;
                    // 中国光大银行
                    case '8':
                        $banktype = 'CEBB';
                        break;
                    // 民生银行
                    case '9':
                        $banktype = 'CMBC';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $banktype = 'SPDB';
                        break;
                    // 兴业银行
                    case '11':
                        $banktype = 'CIB';
                        break;
                    // 广发银行
                    case '12':
                        $banktype = 'GDB';
                        break;
                    // 平安银行
                    case '13':
                        $banktype = 'SPABANK';
                        break;
                    // 华夏银行
                    case '15':
                        $banktype = 'HXB';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        break;
                    // 浙商银行
                    case '19':
                        break;
                    // 北京银行
                    case '20':
                        $banktype = 'BOB';
                        break;
                    // 广州银行
                    case '21':
                        break;
                    // 中国银行
                    case '22':
                        $banktype = 'BOC';
                        break;
                }

                $merInfos = explode('|', $cards[$card_id]["mer_no"]);
                $merchant_code = $merInfos[0];
                $service_type = "direct_pay";
                $notify_url = $callbackurl;
                $interface_version = "V3.0";
                $input_charset = "UTF-8";
                $sign_type = "RSA-S";
                $return_url = $returnurl;
                $pay_type = "b2c";
                $order_no = $shop_order_num;
                $order_time = date('Y-m-d H:i:s');
                $order_amount = $amount;
                $product_name = "充值";

                $signStr= "";
                $bank_code = $banktype;

                if($bank_code != ""){
                    $signStr = $signStr."bank_code=".$bank_code."&";
                }

                $signStr = $signStr."input_charset=".$input_charset."&";
                $signStr = $signStr."interface_version=".$interface_version."&";
                $signStr = $signStr."merchant_code=".$merchant_code."&";
                $signStr = $signStr."notify_url=".$notify_url."&";
                $signStr = $signStr."order_amount=".$order_amount."&";
                $signStr = $signStr."order_no=".$order_no."&";
                $signStr = $signStr."order_time=".$order_time."&";

                if($pay_type != ""){
                    $signStr = $signStr."pay_type=".$pay_type."&";
                }

                $signStr = $signStr."product_name=".$product_name."&";

                if($return_url != ""){
                    $signStr = $signStr."return_url=".$return_url."&";
                }

                $signStr = $signStr."service_type=".$service_type;

                $merchant_private_key= openssl_get_privatekey($this->formatKey($cards[$card_id]['mer_key'], "private"));
                openssl_sign($signStr,$sign_info,$merchant_private_key,OPENSSL_ALGO_MD5);
                $sign = base64_encode($sign_info);

                $postFields = array(
                    'url' => config::getConfig('duodebao_wy_api'),
                    'sign' => $sign,
                    'merchant_code' => $merchant_code,
                    'bank_code' => $bank_code,
                    'order_no' => $order_no,
                    'order_amount' => $order_amount,
                    'service_type' => $service_type,
                    'input_charset' => $input_charset,
                    'notify_url' => $notify_url,
                    'interface_version' => $interface_version,
                    'sign_type' => $sign_type,
                    'order_time' => $order_time,
                    'product_name' => $product_name,
                    'pay_type' => $pay_type,
                    'return_url' => $return_url,
                );

                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    self::$view->setVar('postFields', $postFields);
                    self::$view->render('pay_zhifu');
                } else {
                    log2file('duodebaoPay.log', $postFields);
                    die('生成订单失败');
                }

                die();
            }

            $merInfos = explode('|', $cards[$card_id]["mer_no"]);
            $merchant_code = $merInfos[0];
            $service_type = $bank; //微信：weixin_scan 支付宝：alipay_scan 智汇宝：zhb_scan
            $notify_url = $callbackurl;
            $interface_version = 'V3.3';
            $client_ip = $this->getClientIp();
            $sign_type = 'RSA-S';
            $order_no = $shop_order_num;
            $order_time = date('Y-m-d H:i:s');
            $order_amount = $amount;
            $product_name = '充值';

            $signStr = '';
            $signStr = $signStr."client_ip=".$client_ip."&";
            $signStr = $signStr."interface_version=".$interface_version."&";
            $signStr = $signStr."merchant_code=".$merchant_code."&";
            $signStr = $signStr."notify_url=".$notify_url."&";
            $signStr = $signStr."order_amount=".$order_amount."&";
            $signStr = $signStr."order_no=".$order_no."&";
            $signStr = $signStr."order_time=".$order_time."&";
            $signStr = $signStr."product_name=".$product_name."&";
            $signStr = $signStr."service_type=".$service_type;
            $key = $this->formatKey($cards[$card_id]['mer_key'], "private");
            $merchant_private_key= openssl_get_privatekey($key);
            openssl_sign($signStr,$sign_info,$merchant_private_key,OPENSSL_ALGO_MD5);
            $sign = base64_encode($sign_info);

            $postdata=array(
                'merchant_code'=>$merchant_code,
                'service_type'=>$service_type,
                'notify_url'=>$notify_url,
                'interface_version'=>$interface_version,
                'sign_type'=>$sign_type,
                'order_no'=>$order_no,
                'client_ip'=>$client_ip,
                'sign'=>$sign,
                'order_time'=>$order_time,
                'order_amount'=>$order_amount,
                'product_name'=>$product_name
            );

            $apiUrl = $GLOBALS['cfg']['pay_url']['duodebao_api'];
            $info = array();
            $response = $this->zhifuCurlPostData($apiUrl, $postdata, $info);
            $response = $this->xmlToArray($response);

            if (isset($response['response']) && isset($response['response']['resp_desc']) && $response['response']['result_code'] === '0') {
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (strstr($cards[$card_id]['netway'], "QQ") > -1) {
                    $response['response']['qrcode'] = urldecode($response['response']['qrcode']);
                }

                if (pay::addItem($data)) {
                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        header("location:" . $response['response']['qrcode']);
                        die();
                    } else {
                        header("location:" . '../pay/qrcode.php?code=' . $response['response']['qrcode'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                        die();
                    }
                } else {
                    log2file('duodebaoPay.log', $data);
                    die('生成订单失败');
                }
            } else {
                if (isset($response['response']) && isset($response['response']['resp_desc'])) {
                    echo $response['response']['resp_desc'];
                }

                log2file('duodebaoPay.log', $postdata);
                log2file('duodebaoPay.log', $response);
            }
        } else {
            die();
        }
    }

    public function yifuPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            if ($card_id == '') {
                die('系统出错！(错误码：6003)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');


            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            if ($cards[$card_id]["netway"] == "WX") {
                $service = "1001102";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $service = "1001101";
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $service = "1001101";
            }else if ($cards[$card_id]['netway'] == "QQ") {
                $service = "1001103";}

            $postFields = array(
                'version' => 'V1.2',
                'charset' => 'utf-8',
                'signType' => 'MD5',
                'service' => $service,
                'merchantNo' => $cards[$card_id]["mer_no"],
                'tradeNumber' => $shop_order_num,
                'body' => '充值',
                'timeStart' => date('YmdHis'),
                'notifyUrl' => $callbackurl,
                'totalFee' => $deposit_amount,
                'attach' => '充值',
            );

            $postFields['sign'] = $this->getYiFuSign($postFields, $cards[$card_id]["mer_key"]);
            $apiUrl = $GLOBALS['cfg']['pay_url']['yifu_api'];
            $info = array();
            $response = $this->curlPostData($apiUrl, $postFields, $info);
            //dd($response);
            $response = json_decode($response, true);



            if ($response != null && isset($response['content'])) {
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        header("location:" . $response['content']['qrcode']);
                        die();
                    } else {
                        header("location:" . '../pay/qrcode.php?code=' . $response['content']['qrcode'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                        die();
                    }
                } else {
                    log2file('yifuPay.log', $postFields);
                    log2file('yifuPay.log', $response);
                    echo '生成订单失败';
                }
            } else {
                if ($response != null && isset($response['message'])) {
                    echo $response['message'];
                }

                log2file('yifuPay.log', $postFields);
                log2file('yifuPay.log', $response);
            }
        } else {
            die();
        }
    }

    public function yifutongdaoPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            if ($card_id == '') {
                die('系统出错！(错误码：6003)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $productId = '';

            if ($cards[$card_id]["netway"] == "WX") {
                $productId = "0101";
            } else if ($cards[$card_id]["netway"] == "WX_WAP") {
                $productId = "0301";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $productId = "0102";
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $productId = "0302";
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $productId = "0103";
            } else if ($cards[$card_id]['netway'] == "BD") {
                $productId = "0106";
            } else if ($cards[$card_id]['netway'] == "WY") {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                $bankCode = '';

                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bankCode = 'ICBC';
                        break;
                    // 农业银行
                    case '2':
                        $bankCode = 'ABC';
                        break;
                    // 建设银行
                    case '3':
                        $bankCode = 'CCB';
                        break;
                    // 招商银行
                    case '4':
                        $bankCode = 'CMB';
                        break;
                    // 交通银行
                    case '5':
                        $bankCode = 'BCOM';
                        break;
                    // 中信银行
                    case '6':
                        $bankCode = 'ECITIC';
                        break;
                    // 邮政储蓄
                    case '7':
                        $bankCode = 'PSBC';
                        break;
                    // 中国光大银行
                    case '8':
                        $bankCode = 'CEBB';
                        break;
                    // 民生银行
                    case '9':
                        $bankCode = 'CMBC';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bankCode = 'SPDB';
                        break;
                    // 兴业银行
                    case '11':
                        $bankCode = 'CIB';
                        break;
                    // 广发银行
                    case '12':
                        $bankCode = 'GDB';
                        break;
                    // 平安银行
                    case '13':
                        $bankCode = 'SPABANK';
                        break;
                    // 华夏银行
                    case '15':
                        $bankCode = 'HXB';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        break;
                    // 浙商银行
                    case '19':
                        break;
                    // 北京银行
                    case '20':
                        $bankCode = 'BOB';
                        break;
                    // 广州银行
                    case '21':
                        break;
                    // 中国银行
                    case '22':
                        $bankCode = 'BOC';
                        break;
                }

                $apiUrl = $GLOBALS['cfg']['pay_url']['yifutongdao_wy_api'];

                $postFields = array(
                    'requestNo' => date('YmdHis') . rand(10000, 99999),
                    'version' => 'V1.0',
                    'productId' => '0117',
                    'transId' => '01',
                    'merNo' => $cards[$card_id]["mer_no"],
                    'orderDate' => intval(date('Ymd')),
                    'orderNo' => $shop_order_num,
                    'notifyUrl' => $callbackurl,
                    'bankCode' => $bankCode,
                    'transAmt' => intval($deposit_amount * 100),
                    'commodityName' => '充值',
                );

                $signatureStr = $postFields['requestNo'] . $postFields['productId'] . $postFields['transId'] . $postFields['merNo'] . $postFields['orderNo'] . $postFields['transAmt'] . $postFields['bankCode'] . $cards[$card_id]["mer_key"];
                $postFields['signature'] = md5($signatureStr);
                $postFields['url'] = $apiUrl;
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $postUrl = $apiUrl . "?requestNo=" . $postFields['requestNo'];
                $postUrl .= "&version=" . $postFields['version'];
                $postUrl .= "&productId=" . $postFields['productId'];
                $postUrl .= "&transId=" . $postFields['transId'];
                $postUrl .= "&merNo=" . $postFields['merNo'];
                $postUrl .= "&orderDate=" . $postFields['orderDate'];
                $postUrl .= "&orderNo=" . $postFields['orderNo'];
                $postUrl .= "&notifyUrl=" . $postFields['notifyUrl'];
                $postUrl .= "&transAmt=" . $postFields['transAmt'];
                $postUrl .= "&bankCode=" . $postFields['bankCode'];
                $postUrl .= "&commodityName=" . $postFields['commodityName'];
                $postUrl .= "&signature=" . $postFields['signature'];

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    header("location:$postUrl");
                } else {
                    log2file('yifutongdaoPay.log', $postUrl);
                    echo '生成订单失败';
                }

                die();
            }

            $apiUrl = '';

            if (strpos($cards[$card_id]['netway'], 'WAP') === false) {
                $apiUrl = $GLOBALS['cfg']['pay_url']['yifutongdao_api'];

                $postFields = array(
                    'requestNo' => date('YmdHis') . rand(10000, 99999),
                    'version' => 'V1.0',
                    'productId' => $productId,
                    'transId' => '01',
                    'merNo' => $cards[$card_id]["mer_no"],
                    'orderDate' => intval(date('Ymd')),
                    'orderNo' => $shop_order_num,
                    'notifyUrl' => $callbackurl,
                    'transAmt' => intval($deposit_amount * 100),
                    'commodityName' => '充值',
                );

                $postFields['signature'] = $this->getYiFuTongDaoSign($postFields, $cards[$card_id]["mer_key"]);
                $info = array();
                $response = $this->curlPostData($apiUrl, http_build_query($postFields), $info);
                $response = json_decode($response, true);

                if ($response != null && isset($response['respCode'])&& $response['respCode'] == 'Z000') {
                    $requestURI = $this->request->getPost('requestURI', 'trim');
                    $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                    $data = array(
                        'order_number' => $shop_order_num,
                        'user_id' => $user_id,
                        'username' => $username,
                        'amount' => $deposit_amount,
                        'pay_time' => date('Y-m-d H:i:s'),
                        'source' => $_SERVER['HTTP_HOST'],
                        'requestURI' => $requestURI,
                        'card_id' => $card_id,
                        'bank_id' => $bank_id,
                    );

                    if (pay::addItem($data)) {
                        if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                            header("location:" . $response['content']['qrcode']);
                            die();
                        } else {
                            header("location:" . '../pay/qrcode.php?code=' . $response['codeUrl'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                            die();
                        }
                    } else {
                        log2file('yifutongdaoPay.log', $postFields);
                        log2file('yifutongdaoPay.log', $response);
                        echo '生成订单失败';
                    }
                } else {
                    if ($response != null && isset($response['respDesc'])) {
                        echo $response['respDesc'];
                    }

                    log2file('yifutongdaoPay.log', $postFields);
                    log2file('yifutongdaoPay.log', $response);
                }
            } else {
                $apiUrl = $GLOBALS['cfg']['pay_url']['yifutongdao_wap_api'];

                $postFields = array(
                    'requestNo' => date('YmdHis') . mt_rand(10000, 99999),
                    'version' => 'V1.0',
                    'productId' => $productId,
                    'transId' => '01',
                    'merNo' => $cards[$card_id]["mer_no"],
                    'orderDate' => (int)(date('Ymd')),
                    'orderNo' => $shop_order_num,
                    'frontUrl' => $returnurl,
                    'notifyUrl' => $callbackurl,
                    'transAmt' => (int)($deposit_amount * 100),
                    'commodityName' => '充值',
                );

                $postFields['signature'] = md5($postFields['requestNo'] . $postFields['productId'] . $postFields['transId'] . $postFields['merNo'] . $postFields['orderNo'] . $postFields['transAmt'] . $cards[$card_id]["mer_key"]);
                $postFields['url'] = $apiUrl;
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $postUrl = $apiUrl . "?requestNo=" . $postFields['requestNo'];
                $postUrl .= "&version=" . $postFields['version'];
                $postUrl .= "&productId=" . $postFields['productId'];
                $postUrl .= "&transId=" . $postFields['transId'];
                $postUrl .= "&merNo=" . $postFields['merNo'];
                $postUrl .= "&orderDate=" . $postFields['orderDate'];
                $postUrl .= "&orderNo=" . $postFields['orderNo'];
                $postUrl .= "&notifyUrl=" . $postFields['notifyUrl'];
                $postUrl .= "&frontUrl=" . $postFields['frontUrl'];
                $postUrl .= "&transAmt=" . $postFields['transAmt'];
                $postUrl .= "&commodityName=" . $postFields['commodityName'];
                $postUrl .= "&signature=" . $postFields['signature'];

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    self::$view->setVar('postFields', $postFields);
                    self::$view->render('pay_yifutongdao');
                } else {
                    log2file('yifutongdaoPay.log', $postUrl);
                    echo '生成订单失败';
                }

                die();
            }
        } else {
            die();
        }
    }

    public function wangfutongPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            if ($card_id == '') {
                die('系统出错！(错误码：6003)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $BankCode = '';

            if ($cards[$card_id]["netway"] == "WX") {
                $BankCode = "WECHATQR";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $BankCode = "ALIPAYQR";
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $BankCode = "QQWALLET";
            } else if ($cards[$card_id]['netway'] == "WY") {
                switch ($third_party_bank_id){
                    // 工商银行
                    case '1':
                        $BankCode = 'ICBC';
                        break;
                    // 农业银行
                    case '2':
                        $BankCode = 'ABC';
                        break;
                    // 建设银行
                    case '3':
                        $BankCode = 'CCB';
                        break;
                    // 招商银行
                    case '4':
                        $BankCode = 'CMB';
                        break;
                    // 交通银行
                    case '5':
                        $BankCode = 'BCOM';
                        break;
                    // 中信银行
                    case '6':
                        $BankCode = 'ECITIC';
                        break;
                    // 邮政储蓄
                    case '7':
                        $BankCode = 'PSBC';
                        break;
                    // 中国光大银行
                    case '8':
                        $BankCode = 'CEBB';
                        break;
                    // 民生银行
                    case '9':
                        $BankCode = 'CMBC';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $BankCode = 'SPDB';
                        break;
                    // 兴业银行
                    case '11':
                        $BankCode = 'CIB';
                        break;
                    // 广发银行
                    case '12':
                        $BankCode = 'GDB';
                        break;
                    // 平安银行
                    case '13':
                        $BankCode = 'SPABANK';
                        break;
                    // 华夏银行
                    case '15':
                        $BankCode = 'HXB';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        break;
                    // 浙商银行
                    case '19':
                        break;
                    // 北京银行
                    case '20':
                        break;
                    // 广州银行
                    case '21':
                        $BankCode = '';
                        break;
                    // 中国银行
                    case '22':
                        $BankCode = 'BOC';
                        break;
                }
            }

            $postData = array();
            $postData['MerId'] = $cards[$card_id]["mer_no"];
            $postData['OrdId'] = $shop_order_num;
            $postData['OrdAmt'] = strval(number_format(floatval($deposit_amount), 2, '.', ''));
            $postData['PayType'] = 'DT';
            $postData['CurCode'] = 'CNY';
            $postData['BankCode'] = $BankCode;
            $postData['ProductInfo'] = 'ChongZhi';
            $postData['Remark'] = 'ChongZhi';
            $postData['ReturnURL'] = $returnurl;
            $postData['NotifyURL'] = $callbackurl;
            $postData['SignType'] = 'MD5';
            $signInfo =  $this->getWangFuTongSign($postData,$cards[$card_id]["mer_key"]);
            $postData['SignInfo'] =$signInfo;
            $postData['url'] = $apiUrl = $GLOBALS['cfg']['pay_url']['wangfutong_api'];
            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            $data = array(
                'order_number' => $shop_order_num,
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (pay::addItem($data)) {
                self::$view->setVar('postFields', $postData);
                self::$view->render('pay_wangfutong');
            } else {
                log2file('wangfutongPay.log', $postData);
                echo '生成订单失败';
            }

            die();
        } else {
            die();
        }
    }

    public function wanzhongyunPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            if ($card_id == '') {
                die('系统出错！(错误码：6003)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $postFields = array(
                'service' => 'pay.weixin.native',
                'version' => '2.0',
                'charset' => 'UTF-8',
                'mch_id' => $cards[$card_id]['mer_no'],
                'out_trade_no' => $shop_order_num,
                'body' => '充值',
                'total_fee' => strval($deposit_amount * 100),
                'mch_create_ip' => $this->getClientIp(),
                'notify_url' => $callbackurl,
                'nonce_str' => strval(rand(1000, 9999)),
            );

            $apiUrl = $GLOBALS['cfg']['pay_url']['wanzhongyun_api'];
            $postFields['sign'] = $this->getYiFuSign($postFields, $cards[$card_id]['mer_key']);
            $info = array();
            $xmlResponse = $this->curlPostData($apiUrl, $this->toXml($postFields), $info);
            $response = $this->parseXML($xmlResponse);

            if ($response != null && $response['status'] == '0' && $response['result_code'] == '0') {
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        header("location:" . $response['code_url']);
                        die();
                    } else {
                        header("location:" . '../pay/qrcode.php?code=' . $response['code_url'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                        die();
                    }
                }
            } else {
                if ($response == null) {
                    echo '生成订单失败';
                } else {
                    log2file('wanzhongyunPay.log', $postFields);
                    log2file('wanzhongyunPay.log', $response);

                    if(isset($response['message'])) {
                        echo $response['message'];
                    }
                }
            }
        } else {
            die();
        }
    }

    public function yftPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            if ($card_id == '') {
                die('系统出错！(错误码：6003)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $apiUrl = $GLOBALS['cfg']['pay_url']['yft_api'];

            if ($cards[$card_id]["netway"] == "WX") {

            } else if ($cards[$card_id]['netway'] == "ZFB") {

            } else if ($cards[$card_id]['netway'] == "WX_WAP") {
                $apiUrl = $GLOBALS['cfg']['pay_url']['yftwap_api'];
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $apiUrl = $GLOBALS['cfg']['pay_url']['yftwap_api'];
            }

            $postFields = array(
                'merchantOutOrderNo' => $shop_order_num,
                'merid' => $cards[$card_id]['mer_no'],
                'noncestr' => rand(1000, 9999),
                'notifyUrl' => $callbackurl,
                'orderMoney' => number_format(floatval($deposit_amount), 2, '.', ''),
                'orderTime' => date("YmdHis"),
            );

            $postFields['sign'] = $this->getSign($postFields, $cards[$card_id]['mer_key']);

            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            $data = array(
                'order_number' => $shop_order_num,
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                if (pay::addItem($data)) {
                    $postFields['url'] = $apiUrl;
                    self::$view->setVar('postFields', $postFields);
                    self::$view->render('pay_yft');
                } else {
                    log2file('yftPay.log', $postFields);
                    echo '生成订单失败';
                }
            } else {
                $info = array();
                $jsonResponse = $this->curlPostData($apiUrl, $postFields, $info);
                $response = json_decode($jsonResponse, true);

                if ($response != null && isset($response['url']) && $response['url'] != '') {
                    if (pay::addItem($data)) {
                        header("location:" . '../pay/qrcode.php?code=' . $response['url'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                        die();
                    }
                } else {
                    if ($response == null) {
                        log2file('yftPay.log', $postFields);
                        echo '生成订单失败';
                    } else {
                        if (isset($response['msg'])) {
                            echo $response['msg'];
                        }

                        log2file('yftPay.log', $postFields);
                        log2file('yftPay.log', $response);
                    }
                }
            }
        } else {
            die();
        }
    }

    public function huibaotongPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            if ($card_id == '') {
                die('系统出错！(错误码：6003)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $payType = '';

            if ($cards[$card_id]["netway"] == "WX_WAP") {
                $payType = "WXWAP";
            }

            $postData = array();
            $postData['merchantNo'] = $cards[$card_id]["mer_no"];
            $postData['merchantOrderno'] = $shop_order_num;
            $postData['requestAmount'] = $deposit_amount;
            $postData['noticeSysaddress'] = $callbackurl;
            $postData['memberNo'] = rand(1000, 9999);
            $postData['memberGoods'] = $shop_order_num;
            $postData['memberGoods'] = $shop_order_num;
            $postData['payType'] = $payType;
            $postData['hmac'] = $this->getReqHmacString($postData['merchantNo'], $postData['merchantOrderno'], $postData['requestAmount'], $postData['noticeSysaddress'], $postData['memberNo'], $postData['memberGoods'], $postData['payType'], $cards[$card_id]["mer_key"]);
            $apiUrl = $GLOBALS['cfg']['pay_url']['huibaotong_api'];
            $info = array();
            $response = $this->curlPostData($apiUrl, http_build_query($postData), $info);
            $response = json_decode($response, true);

            if ($response != null && isset($response['code']) && $response['code'] == '000') {
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        header("location:" . $response['payUrl']);
                        die();
                    } else {
                        header("location:" . '../pay/qrcode.php?code=' . $response['payUrl'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                        die();
                    }
                } else {
                    log2file('huibaotongPay.log', $postData);
                    log2file('huibaotongPay.log', $response);
                    echo '生成订单失败';
                }

                die();
            }  else {
                log2file('huibaotongPay.log', $postData);

                if ($response != null) {
                    log2file('huibaotongPay.log', $response);

                    if (isset($response['message'])) {
                        echo $response['message'];
                    }
                } else {
                    echo '生成订单失败';
                }
            }
        } else {
            die();
        }
    }

    public function xiangjiaoPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            if ($card_id == '') {
                die('系统出错！(错误码：6003)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $platfrom = '';

            if ($cards[$card_id]["netway"] == "WX") {
                $platfrom = "CR";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $platfrom = "CR_ALI";
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $platfrom = "CR_ALI";
            }

            $postData = array();
            $postData['cid'] = intval($cards[$card_id]["mer_no"]);
            $postData['total_fee'] = $deposit_amount * 100;
            $postData['title'] = '充值';
            $postData['attach'] = '充值';
            $postData['platform'] = $platfrom;
            $postData['orderno'] = $shop_order_num;
            $postData['sign'] = $this->getXiangJiaoSign($postData,  $cards[$card_id]["mer_key"]);
            $apiUrl = $GLOBALS['cfg']['pay_url']['xiangjiao_api'];
            $info = array();
            $jsonResponse = $this->curlPostData($apiUrl, json_encode($postData), $info);
            $response = json_decode($jsonResponse,true);

            if ($response != null && isset($response['err']) && $response['err'] == '0') {
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        header("location:" . $response['code_url']);
                        die();
                    } else {
                        header("location:" . '../pay/qrcode.php?code=' . $response['code_url'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                        die();
                    }
                } else {
                    log2file('xiangjiaoPay.log', $postData);
                    log2file('xiangjiaoPay.log', $jsonResponse);
                    echo '生成订单失败';
                }
            } else {
                if ($response != null && isset($response['msg'])) {
                    echo $response['msg'];
                } else {
                    echo '生成订单失败';
                }

                log2file('xiangjiaoPay.log', $jsonResponse);
                log2file('xiangjiaoPay.log', $response);
            }
        } else {
            die();
        }
    }

    public function yunanfuPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash,0,5);
        $timePart2 = substr($hash,5 + 32,5);
        $time = $timePart1 . $timePart2;

        if(time() > intval($time)){
            die('交易超时，请刷新充值页面重新充值');
        }

        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_'. $username . '_' . date('Ymd'));

        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            if ($card_id == '') {
                die('系统出错！(错误码：6003)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $banktype = '';

            if ($cards[$card_id]["netway"] == "WX") {
                $banktype = "WEIXINPAY";
            } else if ($cards[$card_id]['netway'] == "WX_WAP") {
                $banktype = "";
            } else if ($cards[$card_id]['netway'] == "WX_GZH") {
                $banktype = "WEIXINWAPPAY";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $banktype = "ALIPAY";
            } else if ($cards[$card_id]['netway'] == "YL") {
                $banktype = "UNIONPAY";
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $banktype = "ALIWAPPAY";
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $banktype = "TENPAY";
            } else if ($cards[$card_id]['netway'] == "QQ_WAP") {
                $banktype = "";
            } else if ($cards[$card_id]['netway'] == "JD") {
                $banktype = "JDPAY";
            } else if ($cards[$card_id]['netway'] == "JD_WAP") {
                $banktype = "";
            } else if ($cards[$card_id]['netway'] == "CFT") {
                $banktype = "";
            } else if ($cards[$card_id]['netway'] == "CFT_WAP") {
                $banktype = "";
            } else if ($cards[$card_id]['netway'] == "WY") {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                $banktype = '';

                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $banktype = 'ICBC';
                        break;
                    // 农业银行
                    case '2':
                        $banktype = 'ABC';
                        break;
                    // 建设银行
                    case '3':
                        $banktype = 'CCB';
                        break;
                    // 招商银行
                    case '4':
                        $banktype = 'CMB';
                        break;
                    // 交通银行
                    case '5':
                        $banktype = 'BOCO';
                        break;
                    // 中信银行
                    case '6':
                        $banktype = 'CTTIC';
                        break;
                    // 邮政储蓄
                    case '7':
                        $banktype = 'PSBS';
                        break;
                    // 中国光大银行
                    case '8':
                        $banktype = 'CEB';
                        break;
                    // 民生银行
                    case '9':
                        $banktype = 'CMBC';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $banktype = '';
                        break;
                    // 兴业银行
                    case '11':
                        $banktype = 'CIB';
                        break;
                    // 广发银行
                    case '12':
                        $banktype = 'GDB';
                        break;
                    // 平安银行
                    case '13':
                        $banktype = 'PINGANBANK';
                        break;
                    // 华夏银行
                    case '15':
                        $banktype = '';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        $banktype = '';
                        break;
                    // 浙商银行
                    case '19':
                        $banktype = '';
                        break;
                    // 北京银行
                    case '20':
                        $banktype = 'BCCB';
                        break;
                    // 广州银行
                    case '21':
                        break;
                    // 中国银行
                    case '22':
                        $banktype = 'BOC';
                        break;
                }
            }

            $partner = $cards[$card_id]["mer_no"];
            $paymoney = $deposit_amount;
            $ordernumber = $shop_order_num;
            $key = $cards[$card_id]["mer_key"];
            $signSource = sprintf("partner=%s&banktype=%s&paymoney=%s&ordernumber=%s&callbackurl=%s%s", $partner, $banktype, $paymoney, $ordernumber, $callbackurl, $key);
            $sign = md5($signSource);
            $apiUrl = $GLOBALS['cfg']['pay_url']['yunanfu_api'];
            $postUrl = $apiUrl . "?banktype=" . $banktype;
            $postUrl .= "&partner=" . $partner;
            $postUrl .= "&paymoney=" . $paymoney;
            $postUrl .= "&ordernumber=" . $ordernumber;
            $postUrl .= "&callbackurl=" . $callbackurl;
            $postUrl .= "&hrefbackurl=" . $returnurl;
            $postUrl .= "&attach=";
            $postUrl .= "&sign=" . $sign;
            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            $data = array(
                'order_number' => $shop_order_num,
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (pay::addItem($data)) {
                header("location:$postUrl");
            } else {
                $this->log2file('yunanfuPay.log', $postUrl);
                echo '生成订单失败';
            }
        } else {
            die();
        }
    }

    public function yibaozhifuPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            if ($card_id == '') {
                die('系统出错！(错误码：6003)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $banktype = '';

            if ($cards[$card_id]["netway"] == "WX") {

            } else if ($cards[$card_id]['netway'] == "ZFB") {

            } else if ($cards[$card_id]['netway'] == "WY") {
                switch ($third_party_bank_id){
                    // 工商银行
                    case '1':
                        $banktype = 'ICBC-NET-B2C';
                        break;
                    // 农业银行
                    case '2':
                        $banktype = 'ABC-NET-B2C';
                        break;
                    // 建设银行
                    case '3':
                        $banktype = 'CCB-NET-B2C';
                        break;
                    // 招商银行
                    case '4':
                        $banktype = 'CMBCHINA-NET-B2C';
                        break;
                    // 交通银行
                    case '5':
                        $banktype = 'BOCO-NET-B2C';
                        break;
                    // 中信银行
                    case '6':
                        $banktype = 'ECITIC-NET-B2C';
                        break;
                    // 邮政储蓄
                    case '7':
                        $banktype = 'POST-NET-B2C';
                        break;
                    // 中国光大银行
                    case '8':
                        $banktype = 'CEB-NET-B2C';
                        break;
                    // 民生银行
                    case '9':
                        $banktype = 'CMBC-NET-B2C';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $banktype = 'SPDB-NET-B2C';
                        break;
                    // 兴业银行
                    case '11':
                        $banktype = 'CIB-NET-B2C';
                        break;
                    // 广发银行
                    case '12':
                        $banktype = 'GDB-NET-B2C';
                        break;
                    // 平安银行
                    case '13':
                        $banktype = 'PINGANBANK-NET-B2C';
                        break;
                    // 华夏银行
                    case '15':
                        $banktype = 'HXB-NET-B2C';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        break;
                    // 浙商银行
                    case '19':
                        break;
                    // 北京银行
                    case '20':
                        $banktype = 'BCCB-NET-B2C';
                        break;
                    // 广州银行
                    case '21':
                        break;
                    // 中国银行
                    case '22':
                        $banktype = 'BOC-NET-B2C';
                        break;
                }
            }

            $postData = array();
            $postData['p0_Cmd'] = 'Buy';
            $postData['p1_MerId'] = $cards[$card_id]["mer_no"];
            $postData['p2_Order'] = $shop_order_num;
            $postData['p3_Amt'] = $deposit_amount;
            $postData['p4_Cur'] = 'CNY';
            $postData['p5_Pid'] = '';
            $postData['p6_Pcat'] = '';
            $postData['p7_Pdesc'] = '';
            $postData['p8_Url'] = $callbackurl;
            $postData['p9_SAF'] = '';
            $postData['pa_MP'] = '';
            $postData['pd_FrpId'] = $banktype;
            $postData['pr_NeedResponse'] = '1';
            $postData['hmac'] = $this->HmacMd5(implode($postData), $cards[$card_id]["mer_key"]);
            $postData['url'] = $apiUrl = $GLOBALS['cfg']['pay_url']['yibaozhifu_api'];

            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            $data = array(
                'order_number' => $shop_order_num,
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (pay::addItem($data)) {
                self::$view->setVar('postFields', $postData);
                self::$view->render('pay_yibaozhifu');
            } else {
                log2file('yibaozhifuPay.log', $postData);
                echo '生成订单失败';
            }
        } else {
            die();
        }
    }

    public function haiouPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            if ($card_id == '') {
                die('系统出错！(错误码：6003)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $payvia = '';

            if ($cards[$card_id]["netway"] == "WX") {
                $payvia = 'weixin';
            } else if ($cards[$card_id]['netway'] == "WX_WAP") {
                $payvia = 'wxwap';
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $payvia = 'alipay';
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $payvia = 'alipaywap';
            } else if ($cards[$card_id]['netway'] == "CFT") {
                $payvia = 'tenpay';
            } else if ($cards[$card_id]['netway'] == "CFT_WAP") {
                $payvia = 'tenpaywap';
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $payvia = 'qqpay';
            } else if ($cards[$card_id]['netway'] == "QQ_WAP") {
                $payvia = 'qqwap';
            } else if ($cards[$card_id]['netway'] == "WYKJ") {
                $payvia = 'bank';
            } else if ($cards[$card_id]['netway'] == "WYKJ_WAP") {
                $payvia = 'bankwap';
            } else if ($cards[$card_id]['netway'] == "WY") {
                switch ($third_party_bank_id){
                    // 工商银行
                    case '1':
                        $payvia = 'icbc-net';
                        break;
                    // 农业银行
                    case '2':
                        $payvia = 'abc-net';
                        break;
                    // 建设银行
                    case '3':
                        $payvia = 'ccb-net';
                        break;
                    // 招商银行
                    case '4':
                        $payvia = 'cmb-net';
                        break;
                    // 交通银行
                    case '5':
                        $payvia = 'boco-net';
                        break;
                    // 中信银行
                    case '6':
                        $payvia = 'ecitic-net';
                        break;
                    // 邮政储蓄
                    case '7':
                        $payvia = 'post-net';
                        break;
                    // 中国光大银行
                    case '8':
                        $payvia = 'ceb-net';
                        break;
                    // 民生银行
                    case '9':
                        $payvia = 'cmbc-net';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $payvia = 'spdb-net';
                        break;
                    // 兴业银行
                    case '11':
                        $payvia = 'cib-net';
                        break;
                    // 广发银行
                    case '12':
                        $payvia = 'gdb-net';
                        break;
                    // 平安银行
                    case '13':
                        break;
                    // 华夏银行
                    case '15':
                        $payvia = 'hxb-net';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        break;
                    // 浙商银行
                    case '19':
                        break;
                    // 北京银行
                    case '20':
                        $payvia = 'bccb-net';
                        break;
                    // 广州银行
                    case '21':
                        break;
                    // 中国银行
                    case '22':
                        $payvia = 'boc-net';
                        break;
                }
            } else if ($cards[$card_id]['netway'] == "WY_WAP") {
                switch ($third_party_bank_id){
                    // 工商银行
                    case '1':
                        $payvia = 'icbc-wap';
                        break;
                    // 农业银行
                    case '2':
                        $payvia = 'abc-wap';
                        break;
                    // 建设银行
                    case '3':
                        $payvia = 'ccb-wap';
                        break;
                    // 招商银行
                    case '4':
                        $payvia = 'cmb-wap';
                        break;
                    // 交通银行
                    case '5':
                        $payvia = 'boco-wap';
                        break;
                    // 中信银行
                    case '6':
                        $payvia = 'ecitic-wap';
                        break;
                    // 邮政储蓄
                    case '7':
                        $payvia = 'post-wap';
                        break;
                    // 中国光大银行
                    case '8':
                        $payvia = 'ceb-wap';
                        break;
                    // 民生银行
                    case '9':
                        $payvia = 'cmbc-wap';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $payvia = 'spdb-wap';
                        break;
                    // 兴业银行
                    case '11':
                        $payvia = 'cib-wap';
                        break;
                    // 广发银行
                    case '12':
                        $payvia = 'gdb-wap';
                        break;
                    // 平安银行
                    case '13':
                        break;
                    // 华夏银行
                    case '15':
                        $payvia = 'hxb-wap';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        break;
                    // 浙商银行
                    case '19':
                        break;
                    // 北京银行
                    case '20':
                        $payvia = 'bccb-wap';
                        break;
                    // 广州银行
                    case '21':
                        break;
                    // 中国银行
                    case '22':
                        $payvia = 'boc-wap';
                        break;
                }
            }

            $postData = array();
            $postData['userid'] = $cards[$card_id]["mer_no"];
            $postData['orderid'] = $shop_order_num;
            $postData['price'] = $deposit_amount;
            $postData['payvia'] = $payvia;
            $postData['notify'] = $callbackurl;
            $postData['callback'] = $returnurl;
            $postData['sign'] = $this->getHaiOuSign($postData, $cards[$card_id]["mer_key"]);
            $postData['timespan'] = date('YmdHis');
            $postData['custom'] = '';
            $postData['format'] = '';
            $postData['url'] = $apiUrl = $GLOBALS['cfg']['pay_url']['haiou_api'];

            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            $data = array(
                'order_number' => $shop_order_num,
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (pay::addItem($data)) {
                self::$view->setVar('postFields', $postData);
                self::$view->render('pay_haiou');
            } else {
                log2file('haiouPay.log', $postData);
                echo '生成订单失败';
            }
        } else {
            die();
        }
    }

    public function sankPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            if ($card_id == '') {
                die('系统出错！(错误码：6003)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
            $shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $payType = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['3k_api'];
            if ($cards[$card_id]["netway"] == "WX_WAP") {
                $payType = "1300";
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $payType = "2000";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $payType = "1800";
                $apiUrl = $GLOBALS['cfg']['pay_url']['sank_zfb_api'];
            }

            $postData = array();
            $postData['appId'] = explode('_', $cards[$card_id]["mer_no"])[1];
            $postData['partnerId'] = explode('_', $cards[$card_id]["mer_no"])[0];
            $postData['channelOrderId'] = $shop_order_num;
            $postData['body'] = 'vip';
            $postData['totalFee'] = $deposit_amount * 100;
            $postData['payType'] = $payType;
            $postData['timeStamp'] = time() * 1000;
            $postData['notifyUrl'] = $callbackurl;
            $postData['returnUrl'] = $returnurl;
            $postData['sign'] = $this->getSanKSign($postData, explode('_', $cards[$card_id]["mer_key"])[0]);
			ksort($postData);
            $info = array();
            $postUrl = $apiUrl.'?'.http_build_query($postData);
            $jsonResponse = $this->curlGetData($postUrl, $info);
            $response = json_decode($jsonResponse, true);

            if (!isset($response['return_code'])) {
                log2file('3KPay.log', '第三方返回数据异常');
                log2file('3KPay.log', $postData);
                log2file('3KPay.log', $jsonResponse);
                showMSG('第三方返回数据异常');
            }

            if ($response['return_code'] !== 0) {
                log2file('3KPay.log', $response['return_msg']);
                log2file('3KPay.log', $postData);
                log2file('3KPay.log', $jsonResponse);
                showMSG($response['return_msg']);
            }

            if ($response != null && isset($response['return_code']) && $response['return_code'] == '0') {
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
                $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );
                if (pay::addItem($data)) {
                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        self::$view->setVar('qrcode_url', $response['payParam']['pay_info']);
                        self::$view->render('pay_sank');
                        die();
                    } else {
                        // header("location:" . '../pay/qrcode.php?code=' . $response['payParam']['code_img_url'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                        $qq_number = config::getConfig('qq_number');
                        $wechat_number = config::getConfig('wechat_number');
                        header("location:pay/xingyunQrcode.php?username=" . $data['username'] . "&coin=" . $data['amount'] . "&netway=" . $response['payParam']['code_img_url'] . "&qq=" . $qq_number . "&wechat=" . $wechat_number . "&cdn=" . parent::$PublicImgCdn);
                        die();
                    }
                } else {
                    log2file('3kPay.log', $postData);
                    log2file('3kPay.log', $jsonResponse);
                    echo '生成订单失败';
                }
            } else {
                if ($response != null && isset($response['return_msg'])) {
                    log2file('3kPay.log', $response);
                    echo $response['return_msg'];
                } else {
                    echo '生成订单失败';
                }

                log2file('3kPay.log', $postData);
                log2file('3kPay.log', $jsonResponse);
            }
        } else {
            die();
        }
    }

    public function qingyifuPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            if ($card_id == '') {
                die('系统出错！(错误码：6003)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $netway = '';
            $apiUrl = config::getConfig('qingyifu_api', '') == '' ? $GLOBALS['cfg']['pay_url']['qingyifu_api'] : config::getConfig('qingyifu_api', '');

            if ($cards[$card_id]["netway"] == "WX") {
                $netway = "WX";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $netway = "ZFB";
                $apiUrl = str_replace('http://zfb','http://zfb', $apiUrl);
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $netway = "ZFB_WAP";
                $apiUrl = str_replace('http://zfbwap','http://zfb', $apiUrl);
            }else if ($cards[$card_id]['netway'] == "QQ") {
                $netway = "QQ";
                $apiUrl = $GLOBALS['cfg']['pay_url']['qingyifu_qq_api'];
            }

            $postData = array();
            $postData['version'] = 'V2.0.0.0';
            $postData['merNo'] = $cards[$card_id]["mer_no"];
            $postData['netway'] = $netway;
            $postData['random'] = strval(rand(1000, 9999));
            $postData['orderNum'] = $shop_order_num;
            $postData['amount'] = strval($deposit_amount * 100);
            $postData['goodsName'] = '充值';
            $postData['charset'] = 'utf-8';
            $postData['callBackUrl'] = $callbackurl;
            $postData['callBackViewUrl'] = $returnurl;
            ksort($postData);
            $postData['sign'] = strtoupper(md5($this->qingyifuJsonEncode($postData) . $cards[$card_id]["mer_key"]));
            $data = $this->qingyifuJsonEncode($postData);
            $post = array('data'=>$data);
            $info = array();
            $jsonResponse = $this->curlPostData($apiUrl, $post, $info);
            $response = json_decode($jsonResponse, true);


            if ($response != null && isset($response['stateCode']) && $response['stateCode'] == '00') {
                if ($this->checkQingYiFuSign($response, $cards[$card_id]["mer_key"])) {
                    $requestURI = $this->request->getPost('requestURI', 'trim');
                    $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                    $data = array(
                        'order_number' => $shop_order_num,
                        'user_id' => $user_id,
                        'username' => $username,
                        'amount' => $deposit_amount,
                        'pay_time' => date('Y-m-d H:i:s'),
                        'source' => $_SERVER['HTTP_HOST'],
                        'requestURI' => $requestURI,
                        'card_id' => $card_id,
                        'bank_id' => $bank_id,
                    );

                    if (pay::addItem($data)) {
                        if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                            header("location:" . $response['qrcodeUrl']);
                            die();
                        } else {
                            header("location:" . '../pay/qrcode.php?code=' . $response['qrcodeUrl'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                            die();
                        }
                    } else {
                        log2file('qingyiPay.log', $postData);
                        log2file('qingyiPay.log', $jsonResponse);
                        echo '生成订单失败';
                    }
                }
            } else {
                log2file('qingyiPay.log', $postData);
                log2file('qingyiPay.log', $jsonResponse);

                if ($response != null && isset($response['msg'])) {
                    log2file('qingyiPay.log', $response);
                    echo $response['msg'] . '</br>';
                } else {
                    echo '生成订单失败';
                }
            }
        } else {
            die();
        }
    }

    public function zhitongbaoPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash,0,5);
        $timePart2 = substr($hash,5 + 32,5);
        $time = $timePart1 . $timePart2;

        if(time() > intval($time)){
            die('交易超时，请刷新充值页面重新充值');
        }

        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_'. $username . '_' . date('Ymd'));

        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            if ($card_id == '') {
                die('系统出错！(错误码：6003)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $service_type = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['zhitongbao_api'];

            if ($cards[$card_id]["netway"] == "WX") {
                $service_type = "weixin_scan";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $service_type = "alipay_scan";
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $service_type = "tenpay_scan";
            } else if ($cards[$card_id]['netway'] === 'WY') {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                $apiUrl = $GLOBALS['cfg']['pay_url']['zhitongbao_wy_api'];

                switch ($third_party_bank_id){
                    // 工商银行
                    case '1':
                        $bankId = 'ICBC';
                        break;
                    // 农业银行
                    case '2':
                        $bankId = 'ABC';
                        break;
                    // 建设银行
                    case '3':
                        $bankId = 'CCB';
                        break;
                    // 招商银行
                    case '4':
                        $bankId = 'CMB';
                        break;
                    // 交通银行
                    case '5':
                        $bankId = 'BCOM';
                        break;
                    // 中信银行
                    case '6':
                        $bankId = 'ECITIC';
                        break;
                    // 邮政储蓄
                    case '7':
                        $bankId = 'PSBC';
                        break;
                    // 中国光大银行
                    case '8':
                        $bankId = 'CEBB';
                        break;
                    // 民生银行
                    case '9':
                        $bankId = 'CMBC';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bankId = 'SPDB';
                        break;
                    // 兴业银行
                    case '11':
                        $bankId = 'CIB';
                        break;
                    // 广发银行
                    case '12':
                        $bankId = 'GDB';
                        break;
                    // 平安银行
                    case '13':
                        $bankId = 'SPABANK';
                        break;
                    // 华夏银行
                    case '15':
                        $bankId = 'HXB';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        break;
                    // 浙商银行
                    case '19':
                        break;
                    // 北京银行
                    case '20':
                        $bankId = 'BOB';
                        break;
                    // 广州银行
                    case '21':
                        break;
                    // 中国银行
                    case '22':
                        $bankId = 'BOC';
                        break;
                }

                $postData = array();
                $postData['merchant_code'] = $cards[$card_id]['mer_no'];
                $postData['service_type'] = 'direct_pay';
                $postData['notify_url'] = $callbackurl;
                $postData['interface_version'] = 'V3.0';
                $postData['input_charset'] = 'UTF-8';
                $postData['sign_type'] = 'RSA-S';
                $postData['pay_type'] = 'b2c';
                $postData['client_ip'] = $this->getClientIp();
                $postData['order_no'] = $shop_order_num;
                $postData['order_time'] = date('Y-m-d H:i:s');
                $postData['order_amount'] = $deposit_amount;
                $postData['bank_code'] = $bankId;
                $postData['product_name'] = '充值';
                $signStr = "";
                $signStr = $signStr."bank_code=".$postData['bank_code']."&";
                $signStr = $signStr."client_ip=".$postData['client_ip']."&";
                $signStr = $signStr."input_charset=".$postData['input_charset']."&";
                $signStr = $signStr."interface_version=".$postData['interface_version']."&";
                $signStr = $signStr."merchant_code=".$postData['merchant_code']."&";
                $signStr = $signStr."notify_url=".$postData['notify_url']."&";
                $signStr = $signStr."order_amount=".$postData['order_amount']."&";
                $signStr = $signStr."order_no=".$postData['order_no']."&";
                $signStr = $signStr."order_time=".$postData['order_time']."&";
                $signStr = $signStr."pay_type=".$postData['pay_type']."&";
                $signStr = $signStr."product_name=".$postData['product_name']."&";
                $signStr = $signStr."service_type=".$postData['service_type'];
                $merchant_private_key= openssl_get_privatekey($this->formatRSAKey($cards[$card_id]["mer_key"], 'private'));
                openssl_sign($signStr,$sign_info,$merchant_private_key,OPENSSL_ALGO_MD5);
                $sign = base64_encode($sign_info);
                $postData['sign'] = $sign;
                $postData['url'] = $apiUrl;

                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    self::$view->setVar('postFields', $postData);
                    self::$view->render('pay_zhitongbao');
                } else {
                    log2file('zhitongbaoPay.log', $postData);
                    echo '生成订单失败';
                }

                die();
            }

            $postData = array();
            $postData['merchant_code'] = $cards[$card_id]["mer_no"];
            $postData['service_type'] = $service_type;
            $postData['notify_url'] = $callbackurl;
            $postData['interface_version'] = 'V3.1';
            $postData['client_ip'] = $this->getClientIp();
            $postData['sign_type'] = 'RSA-S';
            $postData['order_no'] = $shop_order_num;
            $postData['order_time'] = date('Y-m-d H:i:s');
            $postData['order_amount'] = $deposit_amount;
            $postData['product_name'] = '充值';

            $signStr = "";
            $signStr = $signStr."client_ip=".$postData['client_ip']."&";
            $signStr = $signStr."interface_version=".$postData['interface_version']."&";
            $signStr = $signStr."merchant_code=".$postData['merchant_code']."&";
            $signStr = $signStr."notify_url=".$postData['notify_url']."&";
            $signStr = $signStr."order_amount=".$postData['order_amount']."&";
            $signStr = $signStr."order_no=".$postData['order_no']."&";
            $signStr = $signStr."order_time=".$postData['order_time']."&";
            $signStr = $signStr."product_name=".$postData['product_name']."&";
            $signStr = $signStr."service_type=".$postData['service_type'];
            $merchant_private_key= openssl_get_privatekey($this->formatRSAKey($cards[$card_id]["mer_key"], 'private'));
            openssl_sign($signStr,$sign_info,$merchant_private_key,OPENSSL_ALGO_MD5);
            $sign = base64_encode($sign_info);
            $postData['sign'] = $sign;

            $jsonResponse = $this->curlPostData($apiUrl, http_build_query($postData), $info);
            $response = json_decode(json_encode(simplexml_load_string($jsonResponse)), true);
            $response = $response['response'];

            if ($response != null && isset($response['resp_code']) && isset($response['result_code']) && $response['resp_code'] == 'SUCCESS' && $response['result_code'] == '0') {
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    log2file('zhitongbaoPay.log', $postData);

                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        header("location:" . $response['qrcode']);
                        die();
                    } else {
                        header("location:" . '../pay/qrcode.php?code=' . $response['qrcode'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                        die();
                    }
                } else {
                    log2file('zhitongbaoPay.log', $postData);
                    log2file('zhitongbaoPay.log', $jsonResponse);
                    echo '生成订单失败';
                }
            } else {
                log2file('zhitongbaoPay.log', $postData);
                log2file('zhitongbaoPay.log', $jsonResponse);

                if ($response !== null && isset($response['resp_desc'])) {
                    log2file('zhitongbaoPay.log', $response);
                    echo $response['resp_desc'] . '</br>';
                } else {
                    echo '生成订单失败';
                }
            }
        } else {
            die();
        }
    }

    public function ludePay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            if ($card_id == '') {
                die('系统出错！(错误码：6003)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = ((isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] == 'on') || (isset($_SERVER['HTTP_X_FORWARDED_PROTO']) && $_SERVER['HTTP_X_FORWARDED_PROTO'] == 'https')) ? 'https' : 'http';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $typeId = '';
            $bankId = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['lude_api'];
            $postData = array();
            $postData['service'] = 'TRADE.SCANPAY';

            if ($cards[$card_id]['netway'] === 'WX') {
                $typeId = '2';
            } else if ($cards[$card_id]['netway'] === 'ZFB') {
                $typeId = '1';
            } else if ($cards[$card_id]['netway'] === 'WY') {
                $postData['service'] = 'TRADE.B2C';

                switch ($third_party_bank_id){
                    // 工商银行
                    case '1':
                        $bankId = 'ICBC';
                        break;
                    // 农业银行
                    case '2':
                        $bankId = 'ABC';
                        break;
                    // 建设银行
                    case '3':
                        $bankId = 'CCB';
                        break;
                    // 招商银行
                    case '4':
                        $bankId = 'CMB';
                        break;
                    // 交通银行
                    case '5':
                        $bankId = 'COMM';
                        break;
                    // 中信银行
                    case '6':
                        $bankId = 'CNCB';
                        break;
                    // 邮政储蓄
                    case '7':
                        $bankId = 'PSBC';
                        break;
                    // 中国光大银行
                    case '8':
                        $bankId = 'CEB';
                        break;
                    // 民生银行
                    case '9':
                        $bankId = 'CMBC';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bankId = 'SPDB';
                        break;
                    // 兴业银行
                    case '11':
                        $bankId = 'CIB';
                        break;
                    // 广发银行
                    case '12':
                        $bankId = 'GDB';
                        break;
                    // 平安银行
                    case '13':
                        $bankId = 'PAB';
                        break;
                    // 华夏银行
                    case '15':
                        $bankId = 'HXB';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        break;
                    // 浙商银行
                    case '19':
                        break;
                    // 北京银行
                    case '20':
                        break;
                    // 广州银行
                    case '21':
                        break;
                    // 中国银行
                    case '22':
                        $bankId = 'BOC';
                        break;
                }
            }

            $postData['version'] = '1.0.0.0';
            $postData['merId'] = $cards[$card_id]['mer_no'];

            if ($typeId !== '') {
                $postData['typeId'] = $typeId;
            }

            $postData['tradeNo'] = $shop_order_num;
            $postData['tradeDate'] = date('Ymd');
            $postData['amount'] = $deposit_amount;
            $postData['notifyUrl'] = $callbackurl;
            $postData['extra'] = '';
            $postData['summary'] = '充值';
            $postData['expireTime'] = 1800;
            $postData['clientIp'] = $this->getClientIp();

            if ($bankId !== '') {
                $postData['bankId'] = $bankId;
            }

            if(!preg_match("/[\xe0-\xef][\x80-\xbf]{2}/",$postData['notifyUrl'])){
                $postData['notifyUrl']=iconv("GBK","UTF-8",$postData['notifyUrl']);
            }
            if(!preg_match("/[\xe0-\xef][\x80-\xbf]{2}/",$postData['extra'])){
                $postData['extra']=iconv("GBK","UTF-8",$postData['extra']);
            }
            if(!preg_match("/[\xe0-\xef][\x80-\xbf]{2}/",$postData['summary'])){
                $postData['summary']=iconv("GBK","UTF-8",$postData['summary']);
            }

            if ($cards[$card_id]['netway'] === 'WY') {
                $sign=md5($this->prepareSign($postData) . $cards[$card_id]['mer_key']);
                $postData['sign'] = $sign;
                $postData['url'] = $apiUrl;

                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    self::$view->setVar('postFields', $postData);
                    self::$view->render('pay_lude');
                } else {
                    log2file('ludePay.log', $postData);
                    echo '生成订单失败';
                }

                die();
            }

            $str_to_sign=$this->prepareSign($postData);
            $sign=md5($this->prepareSign($postData) . $cards[$card_id]['mer_key']);
            $to_requset=$this->prepareRequest($str_to_sign,$sign);
            $resultData=$this->request($to_requset, $apiUrl);
            $to_verify=$this->prepareVerify($resultData);
            $resultVerify=$this->ludeVerify($to_verify[0],$to_verify[1],$cards[$card_id]['mer_key']);

            if ($resultVerify) {
                preg_match('{<code>(.*?)</code>}',$resultData,$match);
                $respCode=$match[1];
                //响应描述
                preg_match('{<desc>(.*?)</desc>}',$resultData,$match);
                $respDesc=$match[1];
                //二维码的base64加密代码
                preg_match('{<qrCode>(.*?)</qrCode>}',$resultData,$match);
                $respqrCodeBase64=isset($match[1]) ? $match[1] : '';
                //base64解密二维码代码
                $respqrCode=base64_decode($respqrCodeBase64);

                if ($respCode !== null && $respCode === '00') {
                    $requestURI = $this->request->getPost('requestURI', 'trim');
                    $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                    $data = array(
                        'order_number' => $shop_order_num,
                        'user_id' => $user_id,
                        'username' => $username,
                        'amount' => $deposit_amount,
                        'pay_time' => date('Y-m-d H:i:s'),
                        'source' => $_SERVER['HTTP_HOST'],
                        'requestURI' => $requestURI,
                        'card_id' => $card_id,
                        'bank_id' => $bank_id,
                    );

                    if (pay::addItem($data)) {
                        if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                            header("location:" . $respqrCode);
                            die();
                        } else {
                            header("location:" . '../pay/qrcode.php?code=' . $respqrCode . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                            die();
                        }
                    } else {
                        log2file('ludePay.log', $postData);
                        log2file('ludePay.log', $resultData);
                        echo '生成订单失败';
                    }
                } else {
                    log2file('ludePay.log', $postData);
                    log2file('ludePay.log', $resultData);

                    if ($respDesc !== null) {
                        log2file('ludePay.log', $respDesc);
                        echo $respDesc . '</br>';
                    } else {
                        echo '生成订单失败';
                    }
                }
            } else {

            }
        } else {
            die();
        }
    }

    public function yuyingPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');

        if ($username !== '' && $user_id !== '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN !== substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            if ($card_id === '') {
                die('系统出错！(错误码：6003)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) === 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');
            $protocol = ((isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on') || (isset($_SERVER['HTTP_X_FORWARDED_PROTO']) && $_SERVER['HTTP_X_FORWARDED_PROTO'] === 'https')) ? 'https' : 'http';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url === '') {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $payType = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['yuying_api'];

            if ($cards[$card_id]['netway'] === 'WX') {
                $payType = 'WEIXIN';
            } else if ($cards[$card_id]['netway'] === 'ZFB') {
                $payType = 'ALIPAY';
            } else if ($cards[$card_id]['netway'] === 'QQ') {
                $payType = 'QQPAY';
            } else if ($cards[$card_id]['netway'] === 'WY') {
                $apiUrl = $GLOBALS['cfg']['pay_url']['yuying_wy_api'];

                switch ($third_party_bank_id){
                    // 工商银行
                    case '1':
                        $payType = '1001';
                        break;
                    // 农业银行
                    case '2':
                        $payType = '1002';
                        break;
                    // 建设银行
                    case '3':
                        $payType = '1004';
                        break;
                    // 招商银行
                    case '4':
                        $payType = '1012';
                        break;
                    // 交通银行
                    case '5':
                        $payType = '1005';
                        break;
                    // 中信银行
                    case '6':
                        $payType = '1007';
                        break;
                    // 邮政储蓄
                    case '7':
                        $payType = '1006';
                        break;
                    // 中国光大银行
                    case '8':
                        $payType = '1008';
                        break;
                    // 民生银行
                    case '9':
                        $payType = '1010';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $payType = '1014';
                        break;
                    // 兴业银行
                    case '11':
                        $payType = '1013';
                        break;
                    // 广发银行
                    case '12':
                        $payType = '1017';
                        break;
                    // 平安银行
                    case '13':
                        $payType = '1011';
                        break;
                    // 华夏银行
                    case '15':
                        $payType = '1009';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        break;
                    // 浙商银行
                    case '19':
                        break;
                    // 北京银行
                    case '20':
                        $payType = '1016';
                        break;
                    // 广州银行
                    case '21':
                        break;
                    // 中国银行
                    case '22':
                        $payType = '1003';
                        break;
                }
            }

            $postData = array();
            $postData['merKey'] = $cards[$card_id]['mer_no'];
            $postData['orderNo'] = $shop_order_num;
            $postData['amount'] = $deposit_amount;
            $postData['returnUrl'] = $returnurl;
            $postData['notifyUrl'] = $callbackurl;
            $postData['payType'] = $payType;
            $signStr = "merKey=" . $cards[$card_id]['mer_no'] . "&merSecret=" . $cards[$card_id]['mer_key'] . "&orderNo=" . $postData['orderNo'] . "&amount=" . $postData['amount'] . "&payType=" . $postData['payType'];
            $postData['sign'] = md5($signStr);
            $postData['url'] = $apiUrl;
            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            $data = array(
                'order_number' => $shop_order_num,
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (pay::addItem($data)) {
                self::$view->setVar('postFields', $postData);
                self::$view->render('pay_yuying');
            } else {
                log2file('yuyingPay.log', $postData);
                echo '生成订单失败';
            }
        } else {
            die();
        }
    }

    public function yzPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            if ($card_id == '') {
                die('系统出错！(错误码：6003)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }
            $paytype = "";
            $apiUrl = $GLOBALS['cfg']['pay_url']['yz_api'];

            if ($cards[$card_id]["netway"] == "WX") {
                $paytype = '2';
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $paytype = '1';
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $paytype = '1';
            }
            $postData = array();
            $postData['mch_no'] = $cards[$card_id]["mer_no"];
            $postData['merchantOutOrderNo'] = $shop_order_num;
            $postData['method'] = "2";
            $postData['noncestr'] = mt_rand(1000, 9999);
            $postData['notifyUrl'] = $callbackurl;
            $postData['orderMoney'] =$deposit_amount;
            $postData['orderTime'] = date('YmdHis');
            $postData['type'] = $paytype;

            $signstr = 'mch_no='.$postData['mch_no'].'&merchantOutOrderNo='.$postData['merchantOutOrderNo'].'&noncestr='.$postData['noncestr'].'&notifyUrl='.$postData['notifyUrl'].'&orderMoney='.$postData['orderMoney'].'&orderTime='.$postData['orderTime'];
            $signstr.= '&key='.$cards[$card_id]["mer_key"];
            $postData['sign'] = md5($signstr);
            $postData['url'] = $apiUrl;

            if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    self::$view->setVar('postFields', $postData);
                    self::$view->render('pay_yz');
                } else {
                    log2file('yzPay.log', $postData);
                    echo '生成订单失败';
                }
            } else {
                $info = array();
                $jsonResponse = $this->curlPostData($apiUrl, $postData, $info);
                $response = json_decode($jsonResponse, true);

                if ($response === null) {
                    log2file('yzPay.log', '第三方返回数据异常');
                    log2file('yzPay.log', $postData);
                    log2file('yzPay.log', $jsonResponse);
                    showMSG('第三方返回数据异常');
                }

                if (isset($response['code'])) {
                    log2file('yzPay.log', $response['msg']);
                    log2file('yzPay.log', $postData);
                    log2file('yzPay.log', $jsonResponse);
                    showMSG($response['msg']);
                }

                if (isset($response['url'])) {
                    $requestURI = $this->request->getPost('requestURI', 'trim');
                    $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                    $data = array(
                        'order_number' => $shop_order_num,
                        'user_id' => $user_id,
                        'username' => $username,
                        'amount' => $deposit_amount,
                        'pay_time' => date('Y-m-d H:i:s'),
                        'source' => $_SERVER['HTTP_HOST'],
                        'requestURI' => $requestURI,
                        'card_id' => $card_id,
                        'bank_id' => $bank_id,
                    );

                    if (pay::addItem($data)) {
                        header("location:" . '../pay/qrcode.php?code=' . $response['url'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                        die();
                    } else {
                        log2file('yzPay.log', $postData);
                        echo '生成订单失败';
                    }
                } else {
                    log2file('yzPay.log', $postData);
                    log2file('yzPay.log', $jsonResponse);

                    if (isset($response['msg'])) {
                        echo $response['msg'];
                    } else {
                        echo '生成订单失败';
                    }
                }
            }
        } else {
            die();
        }
    }

    public function xingyunPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            if ($card_id == '') {
                die('系统出错！(错误码：6003)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            $data = array(
                'order_number' => $shop_order_num,
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (pay::addItem($data)) {
                $qq_number = config::getConfig('qq_number');
                $wechat_number = config::getConfig('wechat_number');
                http://ssc.2993377.com/images_fh/upload/2017/12/1512651081614.png
                header("location:pay/xingyunQrcode.php?username=" . $data['username'] . "&coin=" . $data['amount'] . "&netway=" . $cards[$card_id]['netway'] . "&qq=" . $qq_number . "&wechat=" . $wechat_number . "&cdn=" . parent::$PublicImgCdn);
            }
        } else {
            die();
        }
    }

    public function weifutongPay()
    {

        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');



        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;


        if (time() > intval($time)) {
            die('交易超时，请刷新充值页面重新充值');
        }

        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));



        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }

        $cards = cards::getItemsById(array($card_id));



        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');



            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');





            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');




            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];



            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }


            $service_type = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['weifutong_api'];


            if ($cards[$card_id]["netway"] == "WX") {
                $service_type = "pay.weixin.native";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $service_type = "pay.alipay.native";
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $service_type = "pay.tenpay.native";
            } else if ($cards[$card_id]['netway'] == "JD") {
                $service_type = "pay.jdpay.native";
            } else if ($cards[$card_id]['netway'] === 'WY') {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                $apiUrl = $GLOBALS['cfg']['pay_url']['weifutong_api'];

                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bankId = 'ICBC';
                        break;
                    // 农业银行
                    case '2':
                        $bankId = 'ABC';
                        break;
                    // 建设银行
                    case '3':
                        $bankId = 'CCB';
                        break;
                    // 招商银行
                    case '4':
                        $bankId = 'CMB';
                        break;
                    // 交通银行
                    case '5':
                        $bankId = 'BCOM';
                        break;
                    // 中信银行
                    case '6':
                        $bankId = 'ECITIC';
                        break;
                    // 邮政储蓄
                    case '7':
                        $bankId = 'PSBC';
                        break;
                    // 中国光大银行
                    case '8':
                        $bankId = 'CEBB';
                        break;
                    // 民生银行
                    case '9':
                        $bankId = 'CMBC';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bankId = 'SPDB';
                        break;
                    // 兴业银行
                    case '11':
                        $bankId = 'CIB';
                        break;
                    // 广发银行
                    case '12':
                        $bankId = 'GDB';
                        break;
                    // 平安银行
                    case '13':
                        $bankId = 'SPABANK';
                        break;
                    // 华夏银行
                    case '15':
                        $bankId = 'HXB';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        break;
                    // 浙商银行
                    case '19':
                        break;
                    // 北京银行
                    case '20':
                        $bankId = 'BOB';
                        break;
                    // 广州银行
                    case '21':
                        break;
                    // 中国银行
                    case '22':
                        $bankId = 'BOC';
                        break;
                }
            }

            $postData = array();
            $postData['mch_id'] = $cards[$card_id]['mer_no'];
            $postData['service'] = $service_type;
            $postData['notify_url'] = $callbackurl;
            $postData['mch_create_ip'] = $this->getClientIp();
            $postData['out_trade_no'] = substr($shop_order_num, 0,32);
            $postData['total_fee'] = $deposit_amount;
            $postData['total_fee'] = $postData['total_fee'];//*100修改值
            $postData['body'] = '充值';
            $postData['nonce_str'] = mt_rand(time(), time() + rand());
            $signStr = "";
            $signStr = $signStr . "mch_create_ip=" . $postData['mch_create_ip'] . "&";
            $signStr = $signStr . "mch_id=" . $postData['mch_id'] . "&";
            $signStr = $signStr . "notify_url=" . $postData['notify_url'] . "&";
            $signStr = $signStr . "total_fee=" . $postData['total_fee'] . "&";
            $signStr = $signStr . "out_trade_no=" . $postData['out_trade_no'] . "&";
            $signStr = $signStr . "body=" . $postData['body'] . "&";
            $signStr = $signStr . "nonce_str" . $postData['nonce_str'] . "&";
            $signStr = $signStr . "service=" . $postData['service'];





            $priv1 = $cards[$card_id]["mer_key"];
            $src = 'body=' . $postData['body'] . '&mch_create_ip=' . $postData['mch_create_ip'] . '&mch_id=' . $postData['mch_id'] . '&nonce_str=' . $postData['nonce_str'] . '&notify_url=' . $postData['notify_url'] . '&out_trade_no=' . $postData['out_trade_no'] . '&service=' . $postData['service'] . '&total_fee=' . $postData['total_fee'] . '&key=' . $priv1;
            $postData['sign'] = strtoupper(md5($src));
            $jsonResponse = $this->curlPostData($apiUrl, $this->toXml($postData), $info);
            $response = $this->parseXML($jsonResponse);


            if ($response != null && $response['status'] == '0' && $response['result_code'] == '0') {
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');



                $data = array(
                    'order_number' => $postData['out_trade_no'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );


                if (pay::addItem($data)) {

                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        header("location:" . $response['code_url']);
                        die();
                    } else {
                        header("location:" . '../pay/qrcode.php?code=' . $response['code_url'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                        die();
                    }
                }
            } else {
                if ($response == null) {
                    echo '生成订单失败';
                } else {
                    log2file('weifutongPay.log', $postData);
                    log2file('weifutongPay.log', $response);

                    if (isset($response['message'])) {
                        echo $response['message'];
                    }
                }
            }
        } else {
            die();
        }

    }

    public function ufuPay()
    {
        die();
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;


        if (time() > intval($time)) {
            die('交易超时，请刷新充值页面重新充值');
        }

        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));


        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }

        $cards = cards::getItemsById(array($card_id));


        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');


            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');


            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];


            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }


            $service_type = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['ufu_api'];


            if ($cards[$card_id]["netway"] == "WX") {
                $service_type = "20000002";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $service_type = "10000001";
            } else if ($cards[$card_id]['netway'] === 'WY') {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                $apiUrl = $GLOBALS['cfg']['pay_url']['ufu_wy_api'];
                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bankId = '01020000';
                        break;
                    // 农业银行
                    case '2':
                        $bankId = '01030000';
                        break;
                    // 建设银行
                    case '3':
                        $bankId = '01050000';
                        break;
                    // 招商银行
                    case '4':
                        $bankId = '03080000';
                        break;
                    // 交通银行
                    case '5':
                        $bankId = '03010000';
                        break;
                    // 中信银行
                    case '6':
                        $bankId = '03020000';
                        break;
                    // 邮政储蓄
                    case '7':
                        $bankId = '01000000';
                        break;
                    // 中国光大银行
                    case '8':
                        $bankId = '03030000';
                        break;
                    // 民生银行
                    case '9':
                        $bankId = '03050000';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bankId = '03100000';
                        break;
                    // 兴业银行
                    case '11':
                        $bankId = '03090000';
                        break;
                    // 广发银行
                    case '12':
                        $bankId = '03060000';
                        break;
                    // 平安银行
                    case '13':
                        $bankId = '03070000';
                        break;
                    // 华夏银行
                    case '15':
                        $bankId = '03040000';
                        break;
                    // 东莞银行
                    /*case '16':
                        break;*/
                    // 渤海银行
                    case '17':
                        $bankId = '03180000';
                        break;
                    // 浙商银行
                    /*case '19':
                        break;*/
                    // 北京银行
                    /* case '20':
                         //$bankId = 'BOB';
                         break;*/
                    // 广州银行
                    /*case '21':
                        break;*/
                    // 中国银行
                    case '22':
                        $bankId = '01040000';
                        break;

                }
                $postData = array();
                $postData['merchantId'] = $cards[$card_id]['mer_no'];
                $postData['notifyUrl'] = $callbackurl;


                $postData['returnUrl'] = $returnurl;//WY
                $postData['outOrderId'] = substr($shop_order_num, 0, 32);
                $postData['subject'] = '充值';
                $postData['body'] = '充值';//WY
                $postData['transAmt'] = $deposit_amount;//修改金额


                $postData['defaultBank'] = $bankId;//WY
                $postData['channel'] = 'B2C';//WY
                $postData['cardAttr'] = '1';//WY
                /*$signStr = "";
                $signStr = $signStr . "mch_create_ip=" . $postData['mch_create_ip'] . "&";
                $signStr = $signStr . "mch_id=" . $postData['mch_id'] . "&";
                $signStr = $signStr . "notify_url=" . $postData['notify_url'] . "&";
                $signStr = $signStr . "total_fee=" . $postData['total_fee'] . "&";
                $signStr = $signStr . "out_trade_no=" . $postData['out_trade_no'] . "&";
                $signStr = $signStr . "body=" . $postData['body'] . "&";
                $signStr = $signStr . "nonce_str" . $postData['nonce_str'] . "&";
                $signStr = $signStr . "service=" . $postData['service'];*/


                //$priv1 = $cards[$card_id]["mer_key"];
                //$src = 'body=' . $postData['body'] . '&mch_create_ip=' . $postData['mch_create_ip'] . '&mch_id=' . $postData['mch_id'] . '&nonce_str=' . $postData['nonce_str'] . '&notify_url=' . $postData['notify_url'] . '&out_trade_no=' . $postData['out_trade_no'] . '&service=' . $postData['service'] . '&total_fee=' . $postData['total_fee'] . '&key=' . $priv1;
                //$postData['sign'] = strtoupper(md5($src));
                $postData['sign'] = $this->getSendSignature($postData, $cards[$card_id]['mer_no'], $cards[$card_id]['mer_key']);





                $postFields = array(
                    'url' => $apiUrl,
                    'merchantId' => $postData['merchantId'],
                    'notifyUrl' => $postData['notifyUrl'],
                    'outOrderId' => $postData['outOrderId'],
                    'subject' => $postData['subject'],
                    'transAmt' => $postData['transAmt'],
                    // 'scanType' => $postData['scanType'],
                    'sign' => $postData['sign'],
                    'returnUrl' => $postData['returnUrl'],
                    'body' => $postData['body'],
                    'defaultBank' => $postData['defaultBank'],
                    'channel' => $postData['channel'],
                    'cardAttr' => $postData['cardAttr'],

                );


                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


                $data = array(
                    'order_number' => $postData['outOrderId'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    self::$view->setVar('postFields', $postFields);
                    self::$view->render('pay_ufu');
                } else {
                    log2file('ufuPay.log', $postFields);
                    die('生成订单失败');
                }

                die();

            }

            $postData = array();
            $postData['merchantId'] = $cards[$card_id]['mer_no'];
            $postData['notifyUrl'] = $callbackurl;



            //$postData['returnUrl'] = $returnurl;//WY
            $postData['outOrderId'] = substr($shop_order_num, 0, 32);
            $postData['subject'] = '充值';

            //$postData['body'] = '充值';//WY
            $postData['transAmt'] = $deposit_amount;//修改金额
            $postData['scanType'] = $service_type;



            //$postData['defaultBank'] = $service_type;//WY
            //$postData['channel'] = 'B2C';//WY
            //$postData['cardAttr'] = '1';//WY

            /*$signStr = "";
            $signStr = $signStr . "mch_create_ip=" . $postData['mch_create_ip'] . "&";
            $signStr = $signStr . "mch_id=" . $postData['mch_id'] . "&";
            $signStr = $signStr . "notify_url=" . $postData['notify_url'] . "&";
            $signStr = $signStr . "total_fee=" . $postData['total_fee'] . "&";
            $signStr = $signStr . "out_trade_no=" . $postData['out_trade_no'] . "&";
            $signStr = $signStr . "body=" . $postData['body'] . "&";
            $signStr = $signStr . "nonce_str" . $postData['nonce_str'] . "&";
            $signStr = $signStr . "service=" . $postData['service'];*/


            //$priv1 = $cards[$card_id]["mer_key"];
            //$src = 'body=' . $postData['body'] . '&mch_create_ip=' . $postData['mch_create_ip'] . '&mch_id=' . $postData['mch_id'] . '&nonce_str=' . $postData['nonce_str'] . '&notify_url=' . $postData['notify_url'] . '&out_trade_no=' . $postData['out_trade_no'] . '&service=' . $postData['service'] . '&total_fee=' . $postData['total_fee'] . '&key=' . $priv1;
            //$postData['sign'] = strtoupper(md5($src));
            $postData['sign'] = $this->getSendSignature($postData, $cards[$card_id]['mer_no'], $cards[$card_id]['mer_key']);



            $jsonResponse = $this->curlPostData($apiUrl, http_build_query($postData), $info);

            $response = json_decode($jsonResponse, true);
            //dd($response);


            if ($response != null && $response['respType'] == 'R' && $response['respCode'] == '99') {
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


                $data = array(
                    'order_number' => $postData['outOrderId'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );


                if (pay::addItem($data)) {

                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        header("location:" . $response['payCode']);
                        die();
                    } else {
                        header("location:" . '../pay/qrcode.php?code=' . $response['payCode'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                        die();
                    }
                }
            } else {
                if ($response == null) {
                    echo '生成订单失败';
                } else {
                    log2file('ufuPay.log', $postData);
                    log2file('ufuPay.log', $response);

                    if (isset($response['respMsg'])) {
                        echo $response['respMsg'];
                    }
                }
            }
        } else {
            die();
        }
    }




    public function getSendSignature($parm, $merchNo ,$key) {
        $data = array();
        foreach ($parm as $k => $v) {
            if ($k == 'sign' || $k == 'signType' || $v == '') {
                continue;
            }
            $data[$k] = $v;


        }
        $sign = $this->array_to_querystr($data);



        return $this->rsaSendSign($sign, $merchNo ,$key);
    }

    protected function array_to_querystr($parm, $enc = false) {
        $ary = array();
        foreach ($parm as $k => $v) {
            $val = ($enc) ? urlencode($v) : $v;
            $ary[$k] = $k.'='.$v;
        }
        ksort($ary);
        return implode('&', $ary);
    }

    protected function rsaSendSign($data, $merid ,$key) {
        /*$keyPath = $this->getRsaFilePath ('private', $merid);
        $keyfile = file_get_contents($keyPath);

        $key = openssl_get_privatekey($keyfile);*/

        @openssl_sign($data, $sign, $key);

        //openssl_free_key($key);
        @openssl_free_key(openssl_pkey_get_private($key));
        $sign = base64_encode($sign);
        return $sign;
    }

    protected function getRsaFilePath ($type, $merid) {
        $rsa_path = 'rsa/dpol_rsa/';
        $path = '';
        switch($type){
            case 'public':
                $path = 'includes/modules/payment/ufu/'.$merid.'.pem';
                break;
            case 'private':
                $path = $merid.'.pem';//$rsa_path.$this->code.'_'.$merid.'_'.$type.'.pem';
                break;
            case 'sys':
                $path = $rsa_path.$this->code.'_'.$merid.'_'.$type.'.pem';
                break;
        }

        return $path;
    }




    public function dingfengPay(){
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');



        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;


        if (time() > intval($time)) {
            die('交易超时，请刷新充值页面重新充值');
        }

        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));



        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }

        $cards = cards::getItemsById(array($card_id));



        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');



            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');





            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');




            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];



            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }


            $service_type = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['dingfeng_api'];



            if ($cards[$card_id]["netway"] == "WX") {
                $service_type = "WX";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $service_type = "ALI";
            }else if ($cards[$card_id]['netway'] == "QQ") {
                $service_type = "QQ";
            } else if ($cards[$card_id]['netway'] === 'WY') {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                $apiUrl = $GLOBALS['cfg']['pay_url']['dingfeng_api'];

                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bankId = 'ICBC';
                        break;
                    // 农业银行
                    case '2':
                        $bankId = 'ABC';
                        break;
                    // 建设银行
                    case '3':
                        $bankId = 'CCB';
                        break;
                    // 招商银行
                    case '4':
                        $bankId = 'CMB';
                        break;
                    // 交通银行
                    case '5':
                        $bankId = 'BCOM';
                        break;
                    // 中信银行
                    case '6':
                        $bankId = 'ECITIC';
                        break;
                    // 邮政储蓄
                    case '7':
                        $bankId = 'PSBC';
                        break;
                    // 中国光大银行
                    case '8':
                        $bankId = 'CEBB';
                        break;
                    // 民生银行
                    case '9':
                        $bankId = 'CMBC';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bankId = 'SPDB';
                        break;
                    // 兴业银行
                    case '11':
                        $bankId = 'CIB';
                        break;
                    // 广发银行
                    case '12':
                        $bankId = 'GDB';
                        break;
                    // 平安银行
                    case '13':
                        $bankId = 'SPABANK';
                        break;
                    // 华夏银行
                    case '15':
                        $bankId = 'HXB';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        break;
                    // 浙商银行
                    case '19':
                        break;
                    // 北京银行
                    case '20':
                        $bankId = 'BOB';
                        break;
                    // 广州银行
                    case '21':
                        break;
                    // 中国银行
                    case '22':
                        $bankId = 'BOC';
                        break;
                }
            }
            $postData = array();
            $postData['mGUId'] = $cards[$card_id]['mer_no'];
            $postData['mOrderId'] = $shop_order_num;//substr($shop_order_num, 0,32);
            $postData['mAmount'] = $deposit_amount*100;//$req['mAmount'] = $req['mAmount']*100修改值
            $postData['mAction'] = $service_type;
            $postData['mNotityUrl'] = $callbackurl;
            $postData['mVersion'] = '1';
            /*$signStr = "";
            $signStr = $signStr . "mch_create_ip=" . $postData['mch_create_ip'] . "&";
            $signStr = $signStr . "mch_id=" . $postData['mch_id'] . "&";
            $signStr = $signStr . "notify_url=" . $postData['notify_url'] . "&";
            $signStr = $signStr . "total_fee=" . $postData['total_fee'] . "&";
            $signStr = $signStr . "out_trade_no=" . $postData['out_trade_no'] . "&";
            $signStr = $signStr . "body=" . $postData['body'] . "&";
            $signStr = $signStr . "nonce_str" . $postData['nonce_str'] . "&";
            $signStr = $signStr . "service=" . $postData['service'];*/
            //$req = json_encode($postData);
            $mBase64str = base64_encode (json_encode($postData));
            $privk = $cards[$card_id]["mer_key"];
            $sign = strtolower(md5($mBase64str.$privk));
            //$mBackstr = $this->http_post_data($GLOBALS['cfg']['pay_url']['dingfeng_api'],"req=".$mBase64str."&"."sign=".$sign);
            $mBackstr = $this->http_post_data($GLOBALS['cfg']['pay_url']['dingfeng_api'],"req={$mBase64str}&sign={$sign}");
            $mBObjJosn = json_decode($mBackstr);
            $mNewSign = strtolower(md5($mBObjJosn->resp.$privk));
            if ($mBObjJosn->sign == $mNewSign){
                $mDataObjJson =  json_decode(base64_decode($mBObjJosn->resp));


            }
            /*$src = 'body=' . $postData['body'] . '&mch_create_ip=' . $postData['mch_create_ip'] . '&mch_id=' . $postData['mch_id'] . '&nonce_str=' . $postData['nonce_str'] . '&notify_url=' . $postData['notify_url'] . '&out_trade_no=' . $postData['out_trade_no'] . '&service=' . $postData['service'] . '&total_fee=' . $postData['total_fee'] . '&key=' . $priv1;
                $postData['sign'] = strtoupper(md5($src));*/


            $jsonResponse = $this->curlPostData($apiUrl, $this->toXml($postData), $info);
            //dd($jsonResponse);
            //$response = $this->parseXML($jsonResponse);



            if ($jsonResponse != null && $mDataObjJson->mRespCode == "0000") {

                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');



                $data = array(
                    'order_number' => $postData['mOrderId'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );


                if (pay::addItem($data)) {
                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        header("location:" . $mDataObjJson->mUrl);
                        die();
                    } else {
                        header("location:" . '../pay/qrcode.php?code=' . $mDataObjJson->mUrl . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                        die();
                    }
                }
            } else {
                if ($jsonResponse == null) {
                    echo '生成订单失败';
                } else {
                    log2file('dingfengPay.log', $postData);
                    log2file('dingfengPay.log', $jsonResponse);

                    if (isset($mDataObjJson->mRespMsg)) {
                        echo $mDataObjJson->mRespMsg;
                    }
                }
            }
        } else {
            die();
        }

    }
    public function zshPay(){//泽圣支付
    	$username = $this->request->getPost('username', 'trim');
    	$user_id = $this->request->getPost('user_id', 'intval');
    	$card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    	$bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    	if ($card_id == '') {
    		die('系统出错！(错误码：6003)');
    	}
    	$hash = $this->request->getPost('hash', 'trim');
    	$timePart1 = substr($hash, 0, 5);
    	$timePart2 = substr($hash, 5 + 32, 5);
    	$time = $timePart1 . $timePart2;
//     	if (time() > intval($time)) {
//     		die('交易超时，请刷新充值页面重新充值');
//     	}
    	$new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));
    	if ($hash != $timePart1 . $new_hash . $timePart2) {
    		die('系统出错！(错误码：6002)');
    	}
    	$cards = cards::getItemsById(array($card_id));
    	if (count($cards) == 0) {
    		die('系统出错！(错误码：6004)');
    	}
    	if ($username != '' && $user_id != '') {
    		$codes = $this->request->getPost('codes', 'trim');
    		if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
    			die('系统出错！(错误码：6000)');
    		}
    		if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
    			die('系统出错！(错误码：6001)');
    		}
    		$card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    		$shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
    		$deposit_amount = $this->request->getPost('deposit_amount', 'floatval');
    		$protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
    		$domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
    		$payName = $GLOBALS['cfg']['pay_name'][$bank_id];
    		$shop_url = $cards[$card_id]['shop_url'];
    		$callbackurl = $cards[$card_id]['call_back_url'];
    		$returnurl = $cards[$card_id]['return_url'];
    		if ($shop_url == "") {
    			$callbackurl = $domain . 'pay/' . $payName . 'Back.php';
    			$returnurl = $domain . 'pay/hrefback.php';
    		} else if (strpos($shop_url, '?c=pay') === 0) {

    		} else if (strpos($shop_url, '?c=pay') > 0) {

    		} else {
    			$callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
    			$returnurl = $shop_url . '/hrefback.php';
    		}
    		$service_type = '';
    		$apiUrl = $GLOBALS['cfg']['pay_url']['zesheng_api'];
    		if ($cards[$card_id]["netway"] == "WX") {
    			$service_type = "21";
    		} else if ($cards[$card_id]['netway'] == "ZFB") {
    			$service_type = "30";
    		}else if ($cards[$card_id]['netway'] == "QQ") {
    			$service_type = "31";
    		} else if ($cards[$card_id]['netway'] === 'WY') {
    			$third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
    			$apiUrl = $GLOBALS['cfg']['pay_url']['zesheng_wy_api'];
    			switch ($third_party_bank_id) {
    				// 工商银行1
    				case '1':
    					$bankId = 'ICBC';
    					break;
    					// 农业银行1
    				case '2':
    					$bankId = 'ABC';
    					break;
    					// 建设银行1
    				case '3':
    					$bankId = 'CCB';
    					break;
    					// 招商银行1
    				case '4':
    					$bankId = 'CMB';
    					break;
    					// 交通银行1
    				case '5':
    					$bankId = 'BCM';
    					break;
    					// 中信银行1
    				case '6':
    					$bankId = 'CITIC';
    					break;
    					// 邮政储蓄1
    				case '7':
    					$bankId = 'PSBC';
    					break;
    					// 中国光大银行1
    				case '8':
    					$bankId = 'CEB';
    					break;
    					// 民生银行1
    				case '9':
    					$bankId = 'CMBC';
    					break;
    					// 兴业银行1
    				case '10':
    					$bankId = 'CIB';
    					break;
    					// 广发银行1
    				case '11':
    					$bankId = 'GDB';
    					break;
    					// 平安银行1
    				case '12':
    					$bankId = 'PAB';
    					// 北京银行1
    				case '13':
    					$bankId = 'BCCB';
    					break;
    					// 中国银行1
    				case '14':
    					$bankId = 'BOC';
    					break;
    			}
    			$orderCreateTime = date('YmdHis', time());
    			$lastPaytime = date('YmdHis', time()+24*60*60);
    			$sign_fields1 = Array(//签名用
    					"merchantCode",
    					"outOrderId",
    					"totalAmount",
    					"orderCreateTime",
    					"lastPayTime",
    			);
    			$map1 = Array(//签名用
    					"merchantCode" => $cards[$card_id]['mer_no'],
    					"outOrderId" => $shop_order_num,
    					"totalAmount" => $deposit_amount*100,
    					"orderCreateTime" => $orderCreateTime,
    					"lastPayTime" => $lastPaytime,
    					//     							"noticeUrl" => $callbackurl,
    			//     							"isSupportCredit" => '0'
    			);
    			$md5Key = $cards[$card_id]['mer_key'];//MD5key
    			$sign0 = $this->sign_mac($sign_fields1, $map1, $md5Key);
    			$sign1 = strtoupper($sign0);
    			//var_dump($sign1);
    			$postData['outOrderId'] = $shop_order_num;//订单号1
    			$postData['merchantCode'] = $cards[$card_id]['mer_no'];//商户号1
    			$postData['totalAmount'] = $deposit_amount*100;//支付金额1
    			$postData['orderCreateTime'] = $orderCreateTime;//订单创建时间1
    			$postData['merUrl'] = $returnurl;//取货地址1
    			$postData['bankCardType'] = '01';//支持的银行卡类型（01 借记卡）1
    			$postData['bankCode'] = $bankId;//银行代码
    			$postData['sign'] = $sign1;//签名1
    			$postData['noticeUrl'] = $callbackurl;//通知客户端1
    			$postData['ext'] = 'ext';
    			$postData['goodsExplain'] = 'goodsExplain';
    			$postData['goodsName'] = 'goodsName';
    			$postData['lastPayTime'] = $lastPaytime;
    			//var_dump($postData);die;
    			$requestURI = $this->request->getPost('requestURI', 'trim');
    			$bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
	    		$data = array(
	    			'order_number' => $postData['outOrderId'],
	    			'user_id' => $user_id,
	    			'username' => $username,
	    			'amount' => $deposit_amount,
	    			'pay_time' => date('Y-m-d H:i:s'),
	    			'source' => $_SERVER['HTTP_HOST'],
	    			'requestURI' => $requestURI,
	    			'card_id' => $card_id,
	    			'bank_id' => $bank_id,
	    			);
	    		if (pay::addItem($data)) {
	    			self::$view->setVar('apiUrl', $apiUrl);
	                self::$view->setVar('postFields', $postData);
	                self::$view->render('pay_zsh');
	            } else {
	                log2file('zshPay.log', $postData);
	                die('生成订单失败');
	            }
	                die;
    		}
    		$orderCreateTime = date('YmdHis', time());
    		$sign_fields1 = Array(//签名用
    				"merchantCode",
    				"outOrderId",
    				"amount",
    				"orderCreateTime",
    				"noticeUrl",
    				"isSupportCredit"
    		);
    		$map1 = Array(//签名用
    				"merchantCode" => $cards[$card_id]['mer_no'],
    				"outOrderId" => $shop_order_num,
    				"amount" => $deposit_amount*100,
    				"orderCreateTime" => $orderCreateTime,
    				"noticeUrl" => $callbackurl,
    				"isSupportCredit" => '0'
    		);
    		$md5Key = $cards[$card_id]['mer_key'];//MD5key
    		$sign0 = $this->sign_mac($sign_fields1, $map1, $md5Key);//生成签名
    		$sign1 = strtoupper($sign0);//签名转大写
    		$postData['model'] = 'QR_CODE';
    		$postData['outOrderId'] = $shop_order_num;//订单号
    		$postData['merchantCode'] = $cards[$card_id]['mer_no'];//商户号
    		$postData['amount'] = $deposit_amount*100;//支付金额
    		$postData['orderCreateTime'] = $orderCreateTime;//订单创建时间
    		$postData['isSupportCredit'] = 0;//是否支持信用卡
    		$postData['ip'] = $this->getClientIp();
    		$postData['sign'] = $sign1;
    		$postData['noticeUrl'] = $callbackurl;
    		$postData['payChannel'] = $service_type;
     		$res = $this->send_post($apiUrl, $postData);
 			$jsonData = json_decode($res,true);
 			//dd($jsonData);
 			if($jsonData['code'] != '00'){
 			    if (isset($jsonData['msg'])) {
                    echo $jsonData['msg'];
                    die();
                }
 			}

			$checkSign = array(
					'merchantCode' => $cards[$card_id]['mer_no'],
					'orderId' => $jsonData['data']['orderId'],
					'outOrderId' =>$shop_order_num,
					'url'	=> $jsonData['data']['url']
					);
			$checkSign1 = array(
					"merchantCode",
					"orderId",
					"outOrderId",
					"url"
					);
			$inspectSign = $this->zsCheckSign($checkSign1, $checkSign,$md5Key);//生成返回签名
			$inspectSign1 = strtoupper($inspectSign);
			if($inspectSign1 != $jsonData['data']['sign']){//判断返回的签名是否正确
                die("返回签名验证失败");
			}
    		if ($jsonData != null && $jsonData['code'] == "00") {
    			$requestURI = $this->request->getPost('requestURI', 'trim');
    			$bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    			$data = array(
    					'order_number' => $postData['outOrderId'],
    					'user_id' => $user_id,
    					'username' => $username,
    					'amount' => $deposit_amount,
    					'pay_time' => date('Y-m-d H:i:s'),
    					'source' => $_SERVER['HTTP_HOST'],
    					'requestURI' => $requestURI,
    					'card_id' => $card_id,
    					'bank_id' => $bank_id,
    			);

    			if (pay::addItem($data)) {
    				if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
    					header("location:" . $jsonData->url);
    					die();
    				} else {
    					header("location:" . '../pay/qrcode.php?code=' . $jsonData['data']['url'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
    					die();
    				}
    			}
    		} else {
    			if ($jsonData == null) {
    				echo '生成订单失败';
    			} else {
    				log2file('zshPay.log', $postData);
    				log2file('zshPay.log', $jsonData);

//    				if (isset($mDataObjJson->mRespMsg)) {
//    					echo $mDataObjJson->mRespMsg;
//    				}
    			}
    		}
    	} else {
    		die();
    	}
    }
    public function xdfPay(){//新鼎峰
    	$username = $this->request->getPost('username', 'trim');
    	$user_id = $this->request->getPost('user_id', 'intval');
    	$card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    	$bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    	if ($card_id == '') {
    		die('系统出错！(错误码：6003)');
    	}
    	$hash = $this->request->getPost('hash', 'trim');
    	$timePart1 = substr($hash, 0, 5);
    	$timePart2 = substr($hash, 5 + 32, 5);
    	$time = $timePart1 . $timePart2;
    	if (time() > intval($time)) {
    	    		die('交易超时，请刷新充值页面重新充值');
    	}
    	$new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));
    	if ($hash != $timePart1 . $new_hash . $timePart2) {
    		die('系统出错！(错误码：6002)');
    	}
    	$cards = cards::getItemsById(array($card_id));
    	if (count($cards) == 0) {
    		die('系统出错！(错误码：6004)');
    	}
    	if ($username != '' && $user_id != '') {
    		$codes = $this->request->getPost('codes', 'trim');
    		if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
    			die('系统出错！(错误码：6000)');
    		}
    		if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
    			die('系统出错！(错误码：6001)');
    		}
    		$card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    		$shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
    		$deposit_amount = $this->request->getPost('deposit_amount', 'floatval');
    		$protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
    		$domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
    		$payName = $GLOBALS['cfg']['pay_name'][$bank_id];
    		$shop_url = $cards[$card_id]['shop_url'];
    		$callbackurl = $cards[$card_id]['call_back_url'];
    		$returnurl = $cards[$card_id]['return_url'];
    		if ($shop_url == "") {
    			$callbackurl = $domain . 'pay/' . $payName . 'Back.php';
    			$returnurl = $domain . 'pay/hrefback.php';
    		} else if (strpos($shop_url, '?c=pay') === 0) {

    		} else if (strpos($shop_url, '?c=pay') > 0) {

    		} else {
    			$callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
    			$returnurl = $shop_url . '/hrefback.php';
    		}
    		$service_type = '';
    		$apiUrl = $GLOBALS['cfg']['pay_url']['xindf_api'];
    		if ($cards[$card_id]["netway"] == "WX") {
    			$service_type = "wxt0";
    		} else if ($cards[$card_id]['netway'] == "ZFB") {
    			$service_type = "alit0";
    		}else if ($cards[$card_id]['netway'] == "QQ") {
    			$service_type = "qq";
    		} else if ($cards[$card_id]['netway'] === 'WY') {
    			$third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
    			$apiUrl = $GLOBALS['cfg']['pay_url']['zesheng_wy_api'];
    			switch ($third_party_bank_id) {
    				// 工商银行1
    				case '1':
    					$bankId = 'ICBC';
    					break;
    					// 农业银行1
    				case '2':
    					$bankId = 'ABC';
    					break;
    					// 建设银行1
    				case '3':
    					$bankId = 'CCB';
    					break;
    					// 招商银行1
    				case '4':
    					$bankId = 'CMB';
    					break;
    					// 交通银行1
    				case '5':
    					$bankId = 'BCM';
    					break;
    					// 中信银行1
    				case '6':
    					$bankId = 'CITIC';
    					break;
    					// 邮政储蓄1
    				case '7':
    					$bankId = 'PSBC';
    					break;
    					// 中国光大银行1
    				case '8':
    					$bankId = 'CEB';
    					break;
    					// 民生银行1
    				case '9':
    					$bankId = 'CMBC';
    					break;
    					// 兴业银行1
    				case '10':
    					$bankId = 'CIB';
    					break;
    					// 广发银行1
    				case '11':
    					$bankId = 'GDB';
    					break;
    					// 平安银行1
    				case '12':
    					$bankId = 'PAB';
    					// 北京银行1
    				case '13':
    					$bankId = 'BCCB';
    					break;
    					// 中国银行1
    				case '14':
    					$bankId = 'BOC';
    					break;
    			}

    		}
    		$orderCreateTime = date('YmdHis', time());
    		$md5Key = $cards[$card_id]['mer_key'];
    		$postData['action'] = $service_type;//支付类型
    		$postData['merid'] = $cards[$card_id]['mer_no'];//商户号
    		$postData['money'] = $deposit_amount*100;//金额
    		$postData['notify_url'] = $callbackurl;//回调地址
    		$postData['orderid'] = $shop_order_num;//订单号
    		$postData['ordername'] = '充值';//订单标题（可空）
    		$postData['version'] = '1';//固定值
    		$postData['orderremark'] = '充值';//订单描述（可空）
    		$mStr = json_encode($postData);//变成json
    		$md5Str = strtolower(md5($mStr . $cards[$card_id]['mer_key']));//小写转换
    		$data = "merid=" . $postData['merid'] . "&req=" . $mStr . "&sign=" . $md5Str;//签名
    		$respData = $this->http_post_data($apiUrl, $data);//传递数据
    		//dd($respData);
    		$respDataArray = explode('&', $respData);
			if (count($respDataArray) >= 2) {
				$md5Str2 = strtolower(md5($respDataArray[0] . $md5Key));
				if ($md5Str2 == $respDataArray[1]) {
					$json = $respDataArray[0];
					$jsonData = json_decode($json,true);
				}
			} else {
				echo '返回参数错误<br/>';
			}
    		if ($jsonData != null && $jsonData['respcode'] == "0000") {
    			$requestURI = $this->request->getPost('requestURI', 'trim');
    			$bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
    			$data = array(
    					'order_number' => $postData['orderid'],
    					'user_id' => $user_id,
    					'username' => $username,
    					'amount' => $deposit_amount,
    					'pay_time' => date('Y-m-d H:i:s'),
    					'source' => $_SERVER['HTTP_HOST'],
    					'requestURI' => $requestURI,
    					'card_id' => $card_id,
    					'bank_id' => $bank_id,
    			);
    			if (pay::addItem($data)) {
    				if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
    					header("location:" . $jsonData->url);
    					die();
    				} else {
    					header("location:" . '../pay/qrcode.php?code=' . $jsonData['url'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
    					die();
    				}
    			}
    		} else {
    			if ($jsonData == null) {
    				echo '生成订单失败';
    			} else {
    				log2file('xdfPay.log', $postData);
    				log2file('xdfPay.log', $jsonData);
    			}
    		}
    	} else {
    		die();
    	}
    }
    public function http_post_data($url, $data_string) {

        $ch = curl_init();
        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_POSTFIELDS, $data_string);
        curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                'Content-Type: application/x-www-form-urlencoded; charset=utf-8',
                'Content-Length: ' . strlen($data_string))
        );
        ob_start();
        curl_exec($ch);
        $return_content = ob_get_contents();
        ob_end_clean();

        $return_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);
        return $return_content;
        //return array($return_code, $return_content);
    }

    public function dingyiPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;


        /*if (time() > intval($time)) {
            die('交易超时，请刷新充值页面重新充值');
        }*/

        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));


        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }

        $cards = cards::getItemsById(array($card_id));


        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');


            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');


            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];


            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }


            $service_type = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['dingyi_api'];

            if ($cards[$card_id]["netway"] == "ZFB") {
                $service_type = "101";
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $service_type = "1003";
            } else if ($cards[$card_id]['netway'] == "WX") {
                $service_type = "1004";
            } else if ($cards[$card_id]['netway'] == "WX_WAP") {
                $service_type = "1005";
            } else if ($cards[$card_id]['netway'] == "CFT") {
                $service_type = "993";
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $service_type = "1006";
            } else if ($cards[$card_id]['netway'] == "QQ_WAP") {
                $service_type = "1007";
            } else if ($cards[$card_id]['netway'] == "JD") {
                $service_type = "1010";
            } else if ($cards[$card_id]['netway'] == "JD_WAP") {
                $service_type = "1011";
            } else if ($cards[$card_id]['netway'] === 'WY') {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                $apiUrl = $GLOBALS['cfg']['pay_url']['dingyi_api'];
                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bankId = '967';
                        break;
                    // 农业银行
                    case '2':
                        $bankId = '964';
                        break;
                    // 建设银行
                    case '3':
                        $bankId = '965';
                        break;
                    // 招商银行
                    case '4':
                        $bankId = '970';
                        break;
                    // 交通银行
                    case '5':
                        $bankId = '981';
                        break;
                    // 中信银行
                    case '6':
                        $bankId = '962';
                        break;
                    // 邮政储蓄
                    case '7':
                        $bankId = '971';
                        break;
                    // 中国光大银行
                    case '8':
                        $bankId = '986';
                        break;
                    // 民生银行
                    case '9':
                        $bankId = '980';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bankId = '977';
                        break;
                    // 兴业银行
                    case '11':
                        $bankId = '972';
                        break;
                    // 广发银行
                    case '12':
                        $bankId = '985';
                        break;
                    // 平安银行
                    case '13':
                        $bankId = '978';
                        break;
                    // 华夏银行
                    case '15':
                        $bankId = '982';
                        break;
                    // 东莞银行
                    /*case '16':
                        break;*/
                    // 渤海银行
                    /*case '17':
                        $bankId = '03180000';
                        break;*/
                    // 浙商银行
                    case '19':
                        $bankId = '968';
                        break;
                    // 北京银行
                    case '20':
                        $bankId = '989';
                        break;
                    // 广州银行
                    /*case '21':
                        break;*/
                    // 中国银行
                    case '22':
                        $bankId = '963';
                        break;

                }
                $postData = array();
                $postData['parter'] = $cards[$card_id]['mer_no'];
                $postData['type'] = $bankId;
                $postData['value'] = $deposit_amount;//修改金额
                $postData['orderid'] = substr($shop_order_num, 0, 30);
                $postData['callbackurl'] = $callbackurl;
                /*$signStr = "";
                $signStr = $signStr . "mch_create_ip=" . $postData['mch_create_ip'] . "&";
                $signStr = $signStr . "mch_id=" . $postData['mch_id'] . "&";
                $signStr = $signStr . "notify_url=" . $postData['notify_url'] . "&";
                $signStr = $signStr . "total_fee=" . $postData['total_fee'] . "&";
                $signStr = $signStr . "out_trade_no=" . $postData['out_trade_no'] . "&";
                $signStr = $signStr . "body=" . $postData['body'] . "&";
                $signStr = $signStr . "nonce_str" . $postData['nonce_str'] . "&";
                $signStr = $signStr . "service=" . $postData['service'];*/


                //$priv1 = $cards[$card_id]["mer_key"];
                //$src = 'body=' . $postData['body'] . '&mch_create_ip=' . $postData['mch_create_ip'] . '&mch_id=' . $postData['mch_id'] . '&nonce_str=' . $postData['nonce_str'] . '&notify_url=' . $postData['notify_url'] . '&out_trade_no=' . $postData['out_trade_no'] . '&service=' . $postData['service'] . '&total_fee=' . $postData['total_fee'] . '&key=' . $priv1;
                //$postData['sign'] = strtoupper(md5($src));

                $sbOld = "parter=" . $postData['parter'] . "&type=" . $postData['type'] . "&value=" . $postData['value'] . "&orderid=" . $postData['orderid'] . "&callbackurl=" . $postData['callbackurl'];
                $postData['sign'] = md5($sbOld . $cards[$card_id]['mer_key']);


                $postFields = array(
                    'url' => $apiUrl,
                    'sign' => $postData['sign'],
                    'parter' => $postData['parter'],
                    'type' => $postData['type'],
                    'value' => $postData['value'],
                    'orderid' => $postData['orderid'],
                    'callbackurl' => $postData['callbackurl'],
                );


                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


                $data = array(
                    'order_number' => $postData['orderid'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    self::$view->setVar('postFields', $postFields);
                    self::$view->render('pay_dingyi');
                } else {
                    log2file('dingyiPay.log', $postFields);
                    die('生成订单失败');
                }

                die();

            }

            $postData = array();
            $postData['parter'] = $cards[$card_id]['mer_no'];
            $postData['type'] = $service_type;
            $postData['value'] = $deposit_amount;//修改金额
            $postData['orderid'] = substr($shop_order_num, 0, 30);
            $postData['callbackurl'] = $callbackurl;
            /*$signStr = "";
            $signStr = $signStr . "mch_create_ip=" . $postData['mch_create_ip'] . "&";
            $signStr = $signStr . "mch_id=" . $postData['mch_id'] . "&";
            $signStr = $signStr . "notify_url=" . $postData['notify_url'] . "&";
            $signStr = $signStr . "total_fee=" . $postData['total_fee'] . "&";
            $signStr = $signStr . "out_trade_no=" . $postData['out_trade_no'] . "&";
            $signStr = $signStr . "body=" . $postData['body'] . "&";
            $signStr = $signStr . "nonce_str" . $postData['nonce_str'] . "&";
            $signStr = $signStr . "service=" . $postData['service'];*/


            //$priv1 = $cards[$card_id]["mer_key"];
            //$src = 'body=' . $postData['body'] . '&mch_create_ip=' . $postData['mch_create_ip'] . '&mch_id=' . $postData['mch_id'] . '&nonce_str=' . $postData['nonce_str'] . '&notify_url=' . $postData['notify_url'] . '&out_trade_no=' . $postData['out_trade_no'] . '&service=' . $postData['service'] . '&total_fee=' . $postData['total_fee'] . '&key=' . $priv1;
            //$postData['sign'] = strtoupper(md5($src));

            $sbOld = "parter=" . $postData['parter'] . "&type=" . $postData['type'] . "&value=" . $postData['value'] . "&orderid=" . $postData['orderid'] . "&callbackurl=" . $postData['callbackurl'];
            $postData['sign'] = md5($sbOld . $cards[$card_id]['mer_key']);

            $postFields = array(
                'url' => $apiUrl,
                'sign' => $postData['sign'],
                'parter' => $postData['parter'],
                'type' => $postData['type'],
                'value' => $postData['value'],
                'orderid' => $postData['orderid'],
                'callbackurl' => $postData['callbackurl'],
            );


            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            $data = array(
                'order_number' => $postData['orderid'],
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (pay::addItem($data)) {

                self::$view->setVar('postFields', $postFields);
                self::$view->render('pay_dingyi');
            } else {
                log2file('dingyiPay.log', $postFields);
                die('生成订单失败');
            }

            die();



        }
    }


    public function zaixianbaoPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;


        /*if (time() > intval($time)) {
            die('交易超时，请刷新充值页面重新充值');
        }*/

        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));


        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }

        $cards = cards::getItemsById(array($card_id));


        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');


            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');


            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];


            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }


            $service_type = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['zaixianbao_api'];

            if ($cards[$card_id]["netway"] == "ZFB") {
                $service_type = "1";
            } else if ($cards[$card_id]['netway'] == "WX") {
                $service_type = "2";
            } else if ($cards[$card_id]['netway'] == "BD") {
                $service_type = "3";
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $service_type = "4";
            } else if ($cards[$card_id]['netway'] == "JD") {
                $service_type = "5";
            } else if ($cards[$card_id]['netway'] === 'WY') {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                $apiUrl = $GLOBALS['cfg']['pay_url']['dingyi_api'];
                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bankId = '967';
                        break;
                    // 农业银行
                    case '2':
                        $bankId = '964';
                        break;
                    // 建设银行
                    case '3':
                        $bankId = '965';
                        break;
                    // 招商银行
                    case '4':
                        $bankId = '970';
                        break;
                    // 交通银行
                    case '5':
                        $bankId = '981';
                        break;
                    // 中信银行
                    case '6':
                        $bankId = '962';
                        break;
                    // 邮政储蓄
                    case '7':
                        $bankId = '971';
                        break;
                    // 中国光大银行
                    case '8':
                        $bankId = '986';
                        break;
                    // 民生银行
                    case '9':
                        $bankId = '980';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bankId = '977';
                        break;
                    // 兴业银行
                    case '11':
                        $bankId = '972';
                        break;
                    // 广发银行
                    case '12':
                        $bankId = '985';
                        break;
                    // 平安银行
                    case '13':
                        $bankId = '978';
                        break;
                    // 华夏银行
                    case '15':
                        $bankId = '982';
                        break;
                    // 东莞银行
                    /*case '16':
                        break;*/
                    // 渤海银行
                    /*case '17':
                        $bankId = '03180000';
                        break;*/
                    // 浙商银行
                    case '19':
                        $bankId = '968';
                        break;
                    // 北京银行
                    case '20':
                        $bankId = '989';
                        break;
                    // 广州银行
                    /*case '21':
                        break;*/
                    // 中国银行
                    case '22':
                        $bankId = '963';
                        break;

                }
                $postData = array();
                $postData['parter'] = $cards[$card_id]['mer_no'];
                $postData['type'] = $bankId;
                $postData['value'] = $deposit_amount;//修改金额
                $postData['orderid'] = $shop_order_num;
                $postData['callbackurl'] = $callbackurl;
                /*$signStr = "";
                $signStr = $signStr . "mch_create_ip=" . $postData['mch_create_ip'] . "&";
                $signStr = $signStr . "mch_id=" . $postData['mch_id'] . "&";
                $signStr = $signStr . "notify_url=" . $postData['notify_url'] . "&";
                $signStr = $signStr . "total_fee=" . $postData['total_fee'] . "&";
                $signStr = $signStr . "out_trade_no=" . $postData['out_trade_no'] . "&";
                $signStr = $signStr . "body=" . $postData['body'] . "&";
                $signStr = $signStr . "nonce_str" . $postData['nonce_str'] . "&";
                $signStr = $signStr . "service=" . $postData['service'];*/


                //$priv1 = $cards[$card_id]["mer_key"];
                //$src = 'body=' . $postData['body'] . '&mch_create_ip=' . $postData['mch_create_ip'] . '&mch_id=' . $postData['mch_id'] . '&nonce_str=' . $postData['nonce_str'] . '&notify_url=' . $postData['notify_url'] . '&out_trade_no=' . $postData['out_trade_no'] . '&service=' . $postData['service'] . '&total_fee=' . $postData['total_fee'] . '&key=' . $priv1;
                //$postData['sign'] = strtoupper(md5($src));

                $sbOld = "parter=" . $postData['parter'] . "&type=" . $postData['type'] . "&value=" . $postData['value'] . "&orderid=" . $postData['orderid'] . "&callbackurl=" . $postData['callbackurl'];
                $postData['sign'] = md5($sbOld . $cards[$card_id]['mer_key']);


                $postFields = array(
                    'url' => $apiUrl,
                    'sign' => $postData['sign'],
                    'parter' => $postData['parter'],
                    'type' => $postData['type'],
                    'value' => $postData['value'],
                    'orderid' => $postData['orderid'],
                    'callbackurl' => $postData['callbackurl'],
                );


                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


                $data = array(
                    'order_number' => $postData['orderid'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    self::$view->setVar('postFields', $postFields);
                    self::$view->render('pay_dingyi');
                } else {
                    log2file('dingyiPay.log', $postFields);
                    die('生成订单失败');
                }

                die();

            }
            $postData = array();
            $postData['amount'] = $deposit_amount;//$req['mAmount'] = $req['mAmount']*100修改值
            $postData['goodsName']= 'happy';
            $postData['merchno'] = $cards[$card_id]['mer_no'];
            $postData['notifyUrl']= $callbackurl;
            $postData['payType'] = $service_type;
            //$postData['remark']= '';
            $postData['settleType']= '1';
            $postData['traceno'] = $shop_order_num;




            $jsonResponse = @iconv('GB2312', 'UTF-8', $this -> doCurlPostRequest($postData['payType'], $postData['amount'],$timeout = 5,$apiUrl,$cards[$card_id]["mer_key"],$postData));
            $response = json_decode($jsonResponse,true);
            //dd($cards[$card_id]["mer_key"]);










            /*$postData['certno']= '';
            $postData['mobile']= '';
            $postData['accountno']= '';
            $postData['accountName']= '';
            $postData['fee']= '';*/

            /*ksort($postData);
            $a = '';
            $privk = $cards[$card_id]["mer_key"];
            foreach ($postData as $x => $x_value) {
                $a = $a . $x . "=" . iconv('UTF-8', 'GB2312', $x_value) . "&";
            }
            $b = md5($a . $privk);


            $postData['signature'] = $b;*/



            //$jsonResponse = $this->curlPostData($apiUrl,$postData, $info);


            //$jsonResponse = iconv('GB2312', 'UTF-8', $this->curlPostData($apiUrl, $postData, $info));
            //dd($jsonResponse);


            //$response = $this->parseXML($jsonResponse);

            /*$signStr = "";

            $postData['payType'] = $service_type;

            $postData['mNotityUrl'] = $callbackurl;
            $postData['mVersion'] = '1';
               $signStr = $signStr . "mch_create_ip=" . $postData['mch_create_ip'] . "&";
            $signStr = $signStr . "mch_id=" . $postData['mch_id'] . "&";
            $signStr = $signStr . "notify_url=" . $postData['notify_url'] . "&";
            $signStr = $signStr . "total_fee=" . $postData['total_fee'] . "&";
            $signStr = $signStr . "out_trade_no=" . $postData['out_trade_no'] . "&";
            $signStr = $signStr . "body=" . $postData['body'] . "&";
            $signStr = $signStr . "nonce_str" . $postData['nonce_str'] . "&";
            $signStr = $signStr . "service=" . $postData['service'];*/
            //$req = json_encode($postData);
            /*$mBase64str = base64_encode (json_encode($postData));

            $sign = strtolower(md5($mBase64str.$privk));
            //$mBackstr = $this->http_post_data($GLOBALS['cfg']['pay_url']['dingfeng_api'],"req=".$mBase64str."&"."sign=".$sign);
            $mBackstr = $this->http_post_data($GLOBALS['cfg']['pay_url']['dingfeng_api'],"req={$mBase64str}&sign={$sign}");
            $mBObjJosn = json_decode($mBackstr);
            $mNewSign = strtolower(md5($mBObjJosn->resp.$privk));*/
            /*if ($mBObjJosn->sign == $mNewSign){
                $mDataObjJson =  json_decode(base64_decode($mBObjJosn->resp));


            }*/
            /*$src = 'body=' . $postData['body'] . '&mch_create_ip=' . $postData['mch_create_ip'] . '&mch_id=' . $postData['mch_id'] . '&nonce_str=' . $postData['nonce_str'] . '&notify_url=' . $postData['notify_url'] . '&out_trade_no=' . $postData['out_trade_no'] . '&service=' . $postData['service'] . '&total_fee=' . $postData['total_fee'] . '&key=' . $priv1;
                $postData['sign'] = strtoupper(md5($src));*/


            //$jsonResponse = $this->curlPostData($apiUrl, $this->toXml($postData), $info);
            //dd($jsonResponse);
            //$response = $this->parseXML($jsonResponse);



            if ($response != null && $response['respCode'] == "00") {


                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');



                $data = array(
                    'order_number' => $response['traceno'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );


                if (pay::addItem($data)) {
                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        header("location:" . $response['barCode']);
                        die();
                    } else {
                        header("location:" . '../pay/qrcode.php?code=' . $response['barCode'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                        die();
                    }
                }
            } else {
                if ($response == null) {
                    echo '第三方接口返回消息为空!';
                } else {
                    log2file('zaixianbaoPay.log', $postData);
                    log2file('zaixianbaoPay.log', $jsonResponse);

                    if (isset($response['message'])) {
                        echo $response['message'];
                    }
                }
            }
        } else {
            die();
        }

    }



public function doCurlPostRequest($paytype, $amount,$timeout = 5,$urls,$Md5,$post_data) {
        //$urls = Configs::URLPASSIVEPAY;
        //$Md5 = Configs::SIGNATURE;
        //$merchnos = Configs::MERCHNO;
        //$timetraceno = Configs::TIMETRA . date('ymdhis', time());
        //$certno = Configs::CERTNO;
        //$notifyUrl = Configs::NOTIFYURL;
        //$accountno = Configs::ACCOUNTNO;
        //$mobile = Configs::MOBILE;
        //$account_name = Configs::ACCOUNT_NAME;
        //$fee = $amount * Configs::FEE;
        /*if ($fee < 0.01) {
            $fee = 0.01;
        }*/
        $pyte = '';
        //$post_data = '';
        /*if ($gettp == '1') {
            $post_data = array('merchno' => $merchnos, 'amount' => $amount, 'traceno' => $timetraceno, 'payType' => $paytype, 'certno' => $certno, 'accountno' => $accountno, 'account_name' => $account_name, 'fee' => $fee, 'notifyUrl' => $notifyUrl, 'settleType' => '0', 'mobile' => $mobile, "goodsName" => '商品', 'remark' => "beizhu");
        } else {
            $post_data = array('merchno' => $merchnos, 'amount' => $amount, 'traceno' => $timetraceno, 'payType' => $paytype, 'notifyUrl' => $notifyUrl, 'goodsName' => '商品', 'settleType' => '1', 'remark' => "beizhu");
        }*/
        ksort($post_data);
        $a = '';
        foreach ($post_data as $x => $x_value) {
            $a = $a . $x . "=" . iconv('UTF-8', 'GB2312', $x_value) . "&";
        }
        $b = md5($a . $Md5);
        $c = $a . 'signature' . '=' . $b;
        if ($urls == '' || $c == '' || $timeout <= 0) {
            return false;
        }
        $con = curl_init((string)$urls);
        curl_setopt($con, CURLOPT_HEADER, false);
        curl_setopt($con, CURLOPT_POSTFIELDS, $c);
        curl_setopt($con, CURLOPT_POST, true);
        curl_setopt($con, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($con, CURLOPT_TIMEOUT, (int)$timeout);
        return curl_exec($con);
    }

    public function tianfubaoPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            if ($card_id == '') {
                die('系统出错！(错误码：6003)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $payType = '';


            if ($cards[$card_id]["netway"] == "WX") {
                $payType = "800201";
                $paychannel = "wxpay";
            } else if ($cards[$card_id]['netway'] == "WX_WAP") {
                $payType = "800206";
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $payType = "800201";
                $paychannel = "qqpay";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $payType = "800201";
            }

            $postData = array();

            $postData['spid'] = $cards[$card_id]["mer_no"];
            $postData['notify_url'] = $callbackurl;//http://ssc.2993377.com/tfb/payNotifyUrl.php
            $postData['sp_billno'] = $shop_order_num;
            $postData['spbill_create_ip'] = $this->getClientIp();
            $postData['pay_type'] = $payType;
            $postData['tran_time'] = date('YmdHis');
            $postData['tran_amt'] = $deposit_amount*100;
            $postData['cur_type'] = 'CNY';
            $postData['item_name'] = 'lucky';
            $postData['out_channel'] = $cards[$card_id]['netway'] == "ZFB"?'':$paychannel;
            if($postData['out_channel'] == ''){
                unset($postData['out_channel']);
            }

            $postData['bank_mch_name'] = $cards[$card_id]['netway'] == "ZFB"?'':'201610131607';//WX必填
            if($postData['bank_mch_name'] == ''){
                unset($postData['bank_mch_name']);
            }
            $postData['bank_mch_id'] = $cards[$card_id]['netway'] == "ZFB"?'':'1610111';//WX必填
            if($postData['bank_mch_id'] == ''){
                unset($postData['bank_mch_id']);
            }
            $postData['sign'] = $this->createSign($postData, $cards[$card_id]["mer_key"]);
            //$this->logdump($postData);
            //dd($postData);
            $apiUrl = $cards[$card_id]['netway'] == "ZFB"?$GLOBALS['cfg']['pay_url']['tianfubao_ali_api']:$GLOBALS['cfg']['pay_url']['tianfubao_api'];
            $info = array();
            $jsonResponse = $this->curlGetData($this->getRequestURL($postData, $apiUrl), $info);
            //dd($jsonResponse);
            $response = $this->xmlTonewArray($jsonResponse);
            //dd($response);






            /*$postUrl = $apiUrl . "?spid=" . $postData['spid'];
            $postUrl .= "&notify_url=" . $postData['notify_url'];
            $postUrl .= "&sp_billno=" . $postData['sp_billno'];
            $postUrl .= "&spbill_create_ip=" . $postData['spbill_create_ip'];
            $postUrl .= "&pay_type=" . $postData['pay_type'];
            $postUrl .= "&tran_time=" . $postData['tran_time'];
            $postUrl .= "&tran_amt=" . $postData['tran_amt'];
            $postUrl .= "&cur_type=" . $postData['cur_type'];
            $postUrl .= "&item_name=" . $postData['item_name'];
            $postUrl .= "&bank_mch_name=" . $postData['bank_mch_name'];
            $postUrl .= "&bank_mch_id=" . $postData['bank_mch_id'];
            $postUrl .= "&sign=" . $postData['sign'];*/


            if ($response != null && $response['retcode'] == '0') {
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        header("location:" . $response['qrcode']);
                        die();
                    } else {
                        header("location:" . '../pay/qrcode.php?code=' . $response['qrcode'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $postData['tran_amt']/100 . "&cdn=" . parent::$PublicImgCdn);
                        die();
                    }
                } else {
                    log2file('tianfubaoPay.log', $postData);
                    log2file('tianfubaoPay.log', $jsonResponse);
                    echo '生成订单失败';
                }

            }
        }
    }

 public   function createSign($parray,$skey) {
        $signPars = "";
        ksort ( $parray );
        foreach ( $parray as $k => $v ) {
            if ("" != $v && "sign" != $k) {
                $signPars .= $k . "=" . mb_convert_encoding ( $v, "GBK", "UTF-8" ) . "&";
            }
        }
        $signPars .= "key=" . $skey;
        $sign = strtolower ( md5 ( $signPars ) );
        return $sign;


    }

public   function getRequestURL($parray1,$gateurl2) {

        //$this->createSign();

        $reqPar = "";
        ksort($parray1);
        foreach($parray1 as $k => $v) {
            $reqPar .= $k . "=" . urlencode($v) . "&";
        }

        //去掉最后一个&
        $reqPar = substr($reqPar, 0, strlen($reqPar)-1);

        $requestURL = $gateurl2 . "?" . $reqPar;

        return $requestURL;

    }

    public function caimaoPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            if ($card_id == '') {
                die('系统出错！(错误码：6003)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $payType = '';


            if ($cards[$card_id]["netway"] == "WX") {
                $payType = "weixin_scan";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $payType = "alipay_scan";
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $payType = "tenpay_scan";
            } else if ($cards[$card_id]['netway'] == "WY") {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                $apiUrl = $GLOBALS['cfg']['pay_url']['caimao_wy_api'];
                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bankId = 'ICBC';
                        break;
                    // 农业银行
                    case '2':
                        $bankId = 'ABC';
                        break;
                    // 建设银行
                    case '3':
                        $bankId = 'CCB';
                        break;
                    // 招商银行
                    case '4':
                        $bankId = 'CMB';
                        break;
                    // 交通银行
                    case '5':
                        $bankId = 'BCOM';
                        break;
                    // 中信银行
                    case '6':
                        $bankId = 'ECITIC';
                        break;
                    // 邮政储蓄
                    case '7':
                        $bankId = 'PSBC';
                        break;
                    // 中国光大银行
                    case '8':
                        $bankId = 'CEBB';
                        break;
                    // 民生银行
                    case '9':
                        $bankId = 'CMBC';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bankId = 'SPDB';
                        break;
                    // 兴业银行
                    case '11':
                        $bankId = 'CIB';
                        break;
                    // 广发银行
                    case '12':
                        $bankId = 'GDB';
                        break;
                    // 平安银行
                    case '13':
                        $bankId = 'SPABANK';
                        break;
                    // 华夏银行
                    case '15':
                        $bankId = 'HXB';
                        break;
                    // 东莞银行
                    /*case '16':
                        break;*/
                    // 渤海银行
                    /*case '17':
                        $bankId = '03180000';
                        break;*/
                    // 浙商银行
                    /*case '19':
                        $bankId = '968';
                        break;*/
                    // 北京银行
                    case '20':
                        $bankId = 'BOB';
                        break;
                    // 广州银行
                    /*case '21':
                        break;*/
                    // 中国银行
                    case '22':
                        $bankId = 'BOC';
                        break;
                    //上海银行
                    case '23':
                        $bankId = 'SHB';
                        break;
                    case '24':
                        $bankId = 'NBB';
                        break;
                    case '25':
                        $bankId = 'HZB';
                        break;

                }
                $postData = array();
                $postData['merchant_code'] = $cards[$card_id]['mer_no'];
                $postData['service_type'] = "direct_pay";
                $postData['interface_version'] = "V3.0";
                $postData['sign_type'] = "RSA-S";
                $postData['input_charset'] = "UTF-8";
                $postData['notify_url'] = $callbackurl;
                $postData['order_no'] = $shop_order_num;
                $postData['order_time'] = date( 'Y-m-d H:i:s' );
                $postData['order_amount'] = $deposit_amount;
                $postData['product_name'] = "testpay";

                $signStr= "";
                $signStr = $signStr."input_charset=".$postData['input_charset']."&";
                $signStr = $signStr."interface_version=".$postData['interface_version']."&";
                $signStr = $signStr."merchant_code=".$postData['merchant_code']."&";
                $signStr = $signStr."notify_url=".$postData['notify_url']."&";
                $signStr = $signStr."order_amount=".$postData['order_amount']."&";
                $signStr = $signStr."order_no=".$postData['order_no']."&";
                $signStr = $signStr."order_time=".$postData['order_time']."&";
                $signStr = $signStr."product_name=".$postData['product_name']."&";
                $signStr = $signStr."service_type=".$postData['service_type'];


                $merchant_private_key= openssl_get_privatekey($cards[$card_id]['mer_key']);

                @openssl_sign($signStr,$sign_info,$merchant_private_key,OPENSSL_ALGO_MD5);

                $sign = base64_encode($sign_info);


                //$priv1 = $cards[$card_id]["mer_key"];
                //$src = 'body=' . $postData['body'] . '&mch_create_ip=' . $postData['mch_create_ip'] . '&mch_id=' . $postData['mch_id'] . '&nonce_str=' . $postData['nonce_str'] . '&notify_url=' . $postData['notify_url'] . '&out_trade_no=' . $postData['out_trade_no'] . '&service=' . $postData['service'] . '&total_fee=' . $postData['total_fee'] . '&key=' . $priv1;
                //$postData['sign'] = strtoupper(md5($src));

                $postFields = array(
                    'url' => $apiUrl,
                    'sign' => $sign,
                    'merchant_code' => $postData['merchant_code'],
                    'order_no' => $postData['order_no'],
                    'order_amount' => $postData['order_amount'],
                    'input_charset' => $postData['input_charset'],
                    'notify_url' => $postData['notify_url'],
                    'interface_version' => $postData['interface_version'],
                    'order_time' => $postData['order_time'],
                    'service_type' => $postData['service_type'],
                    'sign_type' => $postData['sign_type'],
                    'product_name' => $postData['product_name'],

                );


                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


                $data = array(
                    'order_number' => $postData['order_no'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    self::$view->setVar('postFields', $postFields);
                    self::$view->render('pay_caimao');
                } else {
                    log2file('dingyiPay.log', $postFields);
                    die('生成订单失败');
                }

                die();

            }


            $postData = array();

            $postData['merchant_code'] = $cards[$card_id]["mer_no"];
            $postData['service_type'] = $payType;
            $postData['notify_url'] = $callbackurl;
            $postData['interface_version'] = 'V3.1';
            $postData['sign_type'] = 'RSA-S';
            $postData['order_no'] = $shop_order_num;
            $postData['client_ip'] = $this->getClientIp();
            $postData['order_time'] = date('Y-m-d H:i:s');
            $postData['order_amount'] = $deposit_amount;
            $postData['product_name'] = 'lucky';


            $signStr = "";

            $signStr = $signStr."client_ip=".$postData['client_ip']."&";	//5

            $signStr = $signStr."interface_version=".$postData['interface_version']."&";	//4

            $signStr = $signStr."merchant_code=".$postData['merchant_code']."&";	//1

            $signStr = $signStr."notify_url=".$postData['notify_url']."&";	//3

            $signStr = $signStr."order_amount=".$postData['order_amount']."&";	//8

            $signStr = $signStr."order_no=".$postData['order_no']."&";		//6

            $signStr = $signStr."order_time=".$postData['order_time']."&";	//7

            $signStr = $signStr."product_name=".$postData['product_name']."&";//10

            $signStr = $signStr."service_type=".$postData['service_type'];//2

            $merchant_private_key= openssl_get_privatekey($cards[$card_id]['mer_key']);

            @openssl_sign($signStr,$sign_info,$merchant_private_key,OPENSSL_ALGO_MD5);

            $sign = base64_encode($sign_info);
            $postData['sign'] = $sign;

            $apiUrl = $GLOBALS['cfg']['pay_url']['caimao_api'];
            if($postData['service_type'] == "alipay_scan") {
                $jsonResponse = $this->caimaocurlPostData($apiUrl, $postData);
                $response = $this->xmlToArray($jsonResponse);

                if (!isset($response['response']['result_code'])) {
                    log2file('caimaoPay.log', '第三方返回数据异常');
                    log2file('caimaoPay.log', $postData);
                    log2file('caimaoPay.log', $jsonResponse);
                    showMSG('第三方返回数据异常');
                }

                if ($response['response']['result_code'] !== '0') {
                    log2file('caimaoPay.log', '获取二维码失败');
                    log2file('caimaoPay.log', $postData);
                    log2file('caimaoPay.log', $jsonResponse);
                    showMSG('获取二维码失败');
                }

                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $postData['order_amount'],
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );
                if (pay::addItem($data)) {
                    $aliurl = urldecode($response['response']['qrcode']);
                    self::$view->setVar('aliurl', $aliurl);
                    self::$view->render('pay_caimaoali');
                }

            }else {
                $jsonResponse = $this->caimaocurlPostData($apiUrl, $postData);
                $response = $this->xmlToArray($jsonResponse);

                if (!isset($response['response']['result_code'])) {
                    log2file('caimaoPay.log', '第三方返回数据异常');
                    log2file('caimaoPay.log', $postData);
                    log2file('caimaoPay.log', $jsonResponse);
                    showMSG('第三方返回数据异常');
                }

                if ($response['response']['result_code'] !== '0') {
                    log2file('caimaoPay.log', '获取二维码失败');
                    log2file('caimaoPay.log', $postData);
                    log2file('caimaoPay.log', $jsonResponse);
                    showMSG('获取二维码失败');
                }
                //dd($response['response']);
            }




            /*$postUrl = $apiUrl . "?spid=" . $postData['spid'];
            $postUrl .= "&notify_url=" . $postData['notify_url'];
            $postUrl .= "&sp_billno=" . $postData['sp_billno'];
            $postUrl .= "&spbill_create_ip=" . $postData['spbill_create_ip'];
            $postUrl .= "&pay_type=" . $postData['pay_type'];
            $postUrl .= "&tran_time=" . $postData['tran_time'];
            $postUrl .= "&tran_amt=" . $postData['tran_amt'];
            $postUrl .= "&cur_type=" . $postData['cur_type'];
            $postUrl .= "&item_name=" . $postData['item_name'];
            $postUrl .= "&bank_mch_name=" . $postData['bank_mch_name'];
            $postUrl .= "&bank_mch_id=" . $postData['bank_mch_id'];
            $postUrl .= "&sign=" . $postData['sign'];*/


            if ($response['response'] != null && $response['response']['result_code'] == '0'&&$postData['service_type'] != "alipay_scan") {
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $postData['order_amount'],
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        header("location:" . $response['response']['qrcode']);
                        die();
                    } else {
                        header("location:" . '../pay/qrcode.php?code=' . $response['response']['qrcode'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $postData['order_amount'] . "&cdn=" . parent::$PublicImgCdn);
                        die();
                    }
                } else {
                    log2file('caimaoPay.log', $postData);
                    log2file('caimaoPay.log', $jsonResponse);
                    echo '生成订单失败';
                }

            }
        }
    }

    public function caimaocurlPostData($url,$data){
        $ch = curl_init();
        curl_setopt($ch,CURLOPT_URL,$url);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);
        curl_setopt($ch, CURLOPT_POST, true);
        curl_setopt($ch, CURLOPT_HEADER, false);
        curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($data));
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);


        $response=curl_exec($ch);
        curl_close($ch);
        return $response;
    }


    public function xinfubaoPay()
    {

        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;


        /*if (time() > intval($time)) {
            die('交易超时，请刷新充值页面重新充值');
        }*/

        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));


        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }

        $cards = cards::getItemsById(array($card_id));


        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');


            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');


            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];


            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }


            $service_type = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['xinfubao_api'];

            if ($cards[$card_id]["netway"] == "ZFB") {
                $service_type = "00021";
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $service_type = "00024";
            } else if ($cards[$card_id]['netway'] == "WX") {
                $service_type = "00022";
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $service_type = "00032";
            } else if ($cards[$card_id]['netway'] === 'WY') {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                $apiUrl = $GLOBALS['cfg']['pay_url']['xinfubao_wyzfbwap_api'];
                $service_type = "00020";
                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bankId = '102';
                        break;
                    // 农业银行
                    case '2':
                        $bankId = '103';
                        break;
                    // 建设银行
                    case '3':
                        $bankId = '105';
                        break;
                    // 招商银行
                    case '4':
                        $bankId = '308';
                        break;
                    // 交通银行
                    case '5':
                        $bankId = '301';
                        break;
                    // 中信银行
                    case '6':
                        $bankId = '302';
                        break;
                    // 邮政储蓄
                    case '7':
                        $bankId = '403';
                        break;
                    // 中国光大银行
                    case '8':
                        $bankId = '303';
                        break;
                    // 民生银行
                    case '9':
                        $bankId = '305';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bankId = '310';
                        break;
                    // 兴业银行
                    case '11':
                        $bankId = '309';
                        break;
                    // 广发银行
                    case '12':
                        $bankId = '306';
                        break;
                    // 平安银行
                    case '13':
                        $bankId = '307';
                        break;
                    // 华夏银行
                    case '15':
                        $bankId = '304';
                        break;
                    // 农业发展银行
                    case '16':
                        $bankId = '203';
                        break;
                    // 渤海银行
                    case '17':
                        $bankId = '318';
                        break;
                    // 浙商银行
                    case '19':
                        $bankId = '316';
                        break;
                    // 北京银行
                    case '20':
                        $bankId = '313';
                        break;
                    // 恒丰银行
                    case '21':
                        $bankId = '315';
                        break;
                    // 中国银行
                    case '22':
                        $bankId = '104';
                        break;
                    //上海银行
                    case '22':
                        $bankId = '325';
                        break;
                    //徽商银行
                    case '22':
                        $bankId = '440';
                        break;

                }
                $postData = array();
                $postData['versionId'] = "1.0";
                $postData['orderAmount'] = $deposit_amount * 100;//修改金额
                $postData['orderDate'] = date('Ymdhms', time());//
                $postData['currency'] = "RMB";//
                $postData['transType'] = "0008";//
                $postData['asynNotifyUrl'] = $callbackurl;//
                $postData['synNotifyUrl'] = $returnurl;//
                $postData['signType'] = "MD5";//
                $postData['merId'] = "00000000518772";//
                $postData['prdOrdNo'] = $shop_order_num;//
                $postData['payMode'] = $service_type;//
                $postData['tranChannel'] = $bankId;//银行代码
                $postData['accountType'] = "0";//
                $postData['receivableType'] = "D00";//
                $postData['prdName'] = "lucky";//
                $postData['prdDesc'] = "luckyg";//
                $postData['pnum'] = "1";//

                //"versionId=1.0&orderAmount=200&orderDate=20170929190131&currency=RMB&transType=0008&asynNotifyUrl=http://localhost:8090/merchant_order_demo/decryptsynNotifyUrl=http://m.test.foodmall.com&signType=MD5&merId=00000000518772&prdOrdNo=30529577872376&payMode=00020&tranChannel=103&accountType=0&receivableType=D00&prdName=100元移动充值卡&prdDesc=充值卡&pnum=1"
                //versionId=1.0&orderAmount=6700&orderDate=20170929070901&currency=RMB&transType=0008&asynNotifyUrl=http://jacky.2993377.com:80/pay/xinfubaoBack.php&synNotifyUrl=http://jacky.2993377.com:8&signType=MD5&merId=00000000518772&prdOrdNo=376_XINFUBAOWY&payMode=00020&tranChannel=403&accountType=0&receivableType=D00&prdName=lucky&prdDesc=luckyg&pnum=1
                $signStr = "";
                $signStr = $signStr . "versionId=" . $postData['versionId'] . "&";
                $signStr = $signStr . "orderAmount=" . $postData['orderAmount'] . "&";
                $signStr = $signStr . "orderDate=" . $postData['orderDate'] . "&";
                $signStr = $signStr . "currency=" . $postData['currency'] . "&";
                $signStr = $signStr . "transType=" . $postData['transType'] . "&";
                $signStr = $signStr . "asynNotifyUrl=" . $postData['asynNotifyUrl'] . "&";
                $signStr = $signStr . "synNotifyUrl=" . $postData['synNotifyUrl'] . "&";
                $signStr = $signStr . "signType=" . $postData['signType'] . "&";
                $signStr = $signStr . "merId=" . $postData['merId'] . "&";
                $signStr = $signStr . "prdOrdNo=" . $postData['prdOrdNo'] . "&";
                $signStr = $signStr . "payMode=" . $postData['payMode'] . "&";
                $signStr = $signStr . "tranChannel=" . $postData['tranChannel'] . "&";
                $signStr = $signStr . "accountType=" . $postData['accountType'] . "&";
                $signStr = $signStr . "receivableType=" . $postData['receivableType'] . "&";
                $signStr = $signStr . "prdName=" . $postData['prdName'] . "&";
                $signStr = $signStr . "prdDesc=" . $postData['prdDesc'] . "&";
                $signStr = $signStr . "pnum=" . $postData['pnum'];
                //dd($signStr);
                $pieces = explode("&", $signStr);//$cards[$card_id]['mer_key']
                $sign = $this->sign($signStr, $cards[$card_id]['mer_key']);
                $postData['signData'] = $sign;
                $postData['url'] = $apiUrl;
                //dd($postData);
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


                $data = array(
                    'order_number' => $postData['prdOrdNo'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );


                if (pay::addItem($data)) {
                    self::$view->setVar('postData', $postData);
                    self::$view->render('pay_xinfubao_wy');
                } else {
                    log2file('xinfubaoPay.log', $postData);
                    die('生成订单失败');
                }
                    die;

            }


            $postData = array();
            $postData['versionId'] = "1.0";//
            $postData['orderAmount'] = $deposit_amount * 100;//
            $postData['orderDate'] = date('Ymdhis', time());//
            $postData['currency'] = "RMB";//
            $postData['transType'] = "0008";//
            $postData['asynNotifyUrl'] = $callbackurl;//
            $postData['synNotifyUrl'] = $returnurl;//
            $postData['signType'] = "MD5";//
            $postData['merId'] = $cards[$card_id]["mer_no"];//
            $postData['prdOrdNo'] = $shop_order_num;//
            $postData['payMode'] = $service_type;//
            $postData['receivableType'] = "D00";//
            $postData['prdAmt'] = "1";//
            $postData['prdName'] = "lucky";//

            $apiUrl = $GLOBALS['cfg']['pay_url']['xinfubao_api'];
            $info = array();
            $postUrl = "versionId=" . $postData['versionId'];
            $postUrl .= "&orderAmount=" . $postData['orderAmount'];
            $postUrl .= "&orderDate=" . $postData['orderDate'];
            $postUrl .= "&currency=" . $postData['currency'];
            $postUrl .= "&transType=" . $postData['transType'];
            $postUrl .= "&asynNotifyUrl=" . $postData['asynNotifyUrl'];
            $postUrl .= "&synNotifyUrl=" . $postData['synNotifyUrl'];
            $postUrl .= "&signType=" . $postData['signType'];
            $postUrl .= "&merId=" . $postData['merId'];
            $postUrl .= "&prdOrdNo=" . $postData['prdOrdNo'];
            $postUrl .= "&payMode=" . $postData['payMode'];
            $postUrl .= "&receivableType=" . $postData['receivableType'];
            $postUrl .= "&prdAmt=" . $postData['prdAmt'];
            $postUrl .= "&prdName=" . $postData['prdName'];


            $stringnew = $this->signString($postUrl, $cards[$card_id]['mer_key']);
            //dd($stringnew);


            $jsonResponse = $this->xinfucurlGetData($apiUrl, $stringnew, $info);
            //dd($jsonResponse);

            //$response = json_decode($jsonResponse, true);



            if ($jsonResponse != null && $jsonResponse['code']=='1') {
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {

                    header("location:" . '../pay/qrcode.php?code=' . $jsonResponse['qrcode'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $postData['orderAmount'] / 100 . "&cdn=" . parent::$PublicImgCdn);
                    die();

                } else {
                    log2file('xinfubaoPay.log', $postData);
                    log2file('xinfubaoPay.log', $jsonResponse);
                    die('生成订单失败');


                }

            }
        }
    }





 public function sign($input,$KEY){
        $pieces = explode("&", $input);
        sort($pieces);
        $string='';
        foreach ($pieces as $value){
            if($value!=''){
                $vlaue1= explode("=", $value);
                if($vlaue1[1]!=''&&$value[1]!=null){
                    $string=$string.$value.'&';
                }
            }
        }
        $string=$string.'key='. $KEY;
        $sign=strtoupper(md5($string));
        return $sign;
    }



   public function signString($input,$KEY){
        $pieces = explode("&", $input);
        sort($pieces);
        //global $KEY;
        $string='';
        foreach ($pieces as $value){
            if($value!=''){
                $vlaue1= explode("=", $value);
                if($vlaue1[1]!=''&&$value[1]!=null){
                    $string=$string.$value.'&';
                }
            }
        }
        $string=$string.'key='. $KEY;
        $sign=strtoupper(md5($string));
        $string=$string.'&signData='.$sign;
        return $string;
    }


    public function yuanbaoPay()
    {

        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;


        /*if (time() > intval($time)) {
            die('交易超时，请刷新充值页面重新充值');
        }*/

        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));


        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }

        $cards = cards::getItemsById(array($card_id));


        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');


            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');


            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];


            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }


            $service_type = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['yuanbao_api'];

            if ($cards[$card_id]["netway"] == "ZFB") {
                $service_type = "ALIPAY";
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $service_type = "ALIPAYWAP";
            } else if ($cards[$card_id]['netway'] == "WX") {
                $service_type = "WEIXIN";
            } else if ($cards[$card_id]['netway'] == "WX_WAP") {
                $service_type = "WEIXINWAP";
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $service_type = "QQ";
            } else if ($cards[$card_id]['netway'] == "QQ_WAP") {
                $service_type = "QQWAP";
            } else if ($cards[$card_id]['netway'] === 'WY') {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bankId = 'ICBC';
                        break;
                    // 农业银行
                    case '2':
                        $bankId = 'ABC';
                        break;
                    // 建设银行
                    case '3':
                        $bankId = 'CCB';
                        break;
                    // 招商银行
                    case '4':
                        $bankId = 'CMB';
                        break;
                    // 交通银行
                    case '5':
                        $bankId = 'BOCO';
                        break;
                    // 中信银行
                    case '6':
                        $bankId = 'CTTIC';
                        break;
                    // 邮政储蓄
                    case '7':
                        $bankId = 'PSBS';
                        break;
                    // 中国光大银行
                    case '8':
                        $bankId = 'CEB';
                        break;
                    // 民生银行
                    case '9':
                        $bankId = 'CMBC';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bankId = 'SPDB';
                        break;
                    // 兴业银行
                    case '11':
                        $bankId = 'CIB';
                        break;
                    // 广发银行
                    case '12':
                        $bankId = 'GDB';
                        break;
                    // 平安银行
                    case '13':
                        $bankId = 'PINGANBANK';
                        break;
                    // 华夏银行
                    case '15':
                        $bankId = 'HXB';
                        break;
                    // 农业发展银行
                    /*case '16':
                        $bankId = '203';
                        break;*/
                    // 渤海银行
                    case '17':
                        $bankId = 'CBHB';
                        break;
                    // 浙商银行
                    /*case '19':
                        $bankId = '316';
                        break;*/
                    // 北京银行
                    case '20':
                        $bankId = 'BCCB';
                        break;
                    // 恒丰银行
                    /*case '21':
                        $bankId = '315';
                        break;*/
                    // 中国银行
                    case '22':
                        $bankId = 'BOC';
                        break;
                    //上海银行
                    case '22':
                        $bankId = 'SHB';
                        break;
                    //徽商银行
                    /*case '22':
                        $bankId = '440';
                        break;*/

                }
                $postData = array();
                $postData['version'] = "3.0";
                $postData['method'] = "Boh.online.interface";
                $postData['partner'] = $cards[$card_id]["mer_no"];//
                $postData['banktype'] = $bankId;
                $postData['paymoney'] = $deposit_amount;//修改金额
                $postData['ordernumber'] = $shop_order_num;
                $postData['callbackurl'] = $callbackurl;
//                $postData['sign'] = md5($postData['version']."={0}&".$postData['method']."={1}&".$postData['partner']."={2}&".$postData['banktype']."={3}&".$postData['paymoney']."={4}&".$postData['ordernumber']."={5}&".$postData['callbackurl']."={6}".$cards[$card_id]['mer_key']);
                $postData['sign'] = md5("version=".$postData['version']."&method=".$postData['method']."&partner=".$postData['partner']."&banktype=".$postData['banktype']."&paymoney=".$postData['paymoney']."&ordernumber=".$postData['ordernumber']."&callbackurl=".$postData['callbackurl'].$cards[$card_id]['mer_key']);
                $info = array();
                $formResponse = $this->curlPostData($apiUrl, $postData, $info);

                if ($formResponse == null) {
                    log2file('yuanbaoPay.log', '第三方返回数据异常');
                    log2file('yuanbaoPay.log', $postData);
                    log2file('yuanbaoPay.log', $formResponse);
                    showMSG('第三方返回数据异常');
                }

                $errorResponse = json_decode($formResponse, true);

                if (isset($errorResponse['message'])) {
                    log2file('yuanbaoPay.log', $errorResponse['message']);
                    log2file('yuanbaoPay.log', $postData);
                    log2file('yuanbaoPay.log', $errorResponse);
                    showMSG($errorResponse['message']);
                }

                //echo $jsonResponse;
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


                $data = array(
                    'order_number' => $postData['ordernumber'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );


                if (pay::addItem($data)) {
                    self::$view->setVar('formResponse', $formResponse);
                    self::$view->render('pay_yuanbao_wy');
                } else {
                    log2file('yuanbaoPay.log',$postData);
                    die('生成订单失败');
                }
                die;

            }
            $postData = array();
            $postData['version'] = "3.0";
            $postData['method'] = "Boh.online.interface";
            $postData['partner'] = $cards[$card_id]["mer_no"];//
            $postData['banktype'] = $service_type;
            $postData['paymoney'] = $deposit_amount;//修改金额
            $postData['ordernumber'] = $shop_order_num;
            $postData['callbackurl'] = $callbackurl;
            //$postData['sign'] = md5($postData['version']."={0}&".$postData['method']."={1}&".$postData['partner']."={2}&".$postData['banktype']."={3}&".$postData['paymoney']."={4}&".$postData['ordernumber']."={5}&".$postData['callbackurl']."={6}".$cards[$card_id]['mer_key']);
//            $postData['sign'] = md5("version=".$postData['version']."&method=".$postData['method']."&partner=".$postData['partner']."&banktype=".$postData['banktype']."&paymoney=".$postData['paymoney']."&ordernumber=".$postData['ordernumber']."&callbackurl=".$postData['callbackurl'].$cards[$card_id]['mer_key']);
            $info = array();
            $jsonResponse = $this->curlPostData($apiUrl, $postData, $info);
            //dd($jsonResponse);
            $reponse = json_decode($jsonResponse,true);

            if (!isset($reponse['status'])) {
                log2file('yuanbaoPay.log', '第三方返回数据异常');
                log2file('yuanbaoPay.log', $postData);
                log2file('yuanbaoPay.log', $jsonResponse);
                showMSG('第三方返回数据异常');
            }

            if ($reponse['status'] !== 1) {
                log2file('yuanbaoPay.log', $reponse['message']);
                log2file('yuanbaoPay.log', $postData);
                log2file('yuanbaoPay.log', $jsonResponse);
                showMSG($reponse['message']);
            }

            //dd($reponse);

            if ($reponse != null && $reponse['status'] == '1') {
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $postData['ordernumber'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {

                    header("location:" . '../pay/qrcode.php?code=' . $reponse['qrurl'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $postData['paymoney'] . "&cdn=" . parent::$PublicImgCdn);
                    die();

                } else {
                    log2file('yuanbaoPay.log', $postData);
                    log2file('yuanbaoPay.log', $jsonResponse);
                    die('生成订单失败');


                }

            }
        }
    }

    public function boshiPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            if ($card_id == '') {
                die('系统出错！(错误码：6003)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');
            if($deposit_amount > '3000'){
                showMSG("充值金额不能大于3000元");
            }
            if($deposit_amount < '10'){
                showMSG("充值金额不能小于10元");
            }

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $payType = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['boshi_api'];

            if ($cards[$card_id]["netway"] == "WX") {
                $payType = "WECHAT";
            } else if ($cards[$card_id]['netway'] == "WX_WAP") {
                $payType = "WECHAT_WAP";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $payType = "ALIPAY";
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $payType = "ALIPAY_WAP";
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $payType = "QQ";
            } else if ($cards[$card_id]['netway'] == "JD") {
                $payType = "JD";
            } else if ($cards[$card_id]['netway'] == "JD_WAP") {
                $payType = "JD_WAP";
            } else if ($cards[$card_id]['netway'] == "WY") {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');

                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bankId = 'ICBC';
                        break;
                    // 农业银行
                    case '2':
                        $bankId = 'ABC';
                        break;
                    // 建设银行
                    case '3':
                        $bankId = 'CCB';
                        break;
                    // 招商银行
                    case '4':
                        $bankId = 'CMB';
                        break;
                    // 交通银行
                    case '5':
                        $bankId = 'BOCO';
                        break;
                    // 中信银行
                    case '6':
                        $bankId = 'ECITIC';
                        break;
                    // 邮政储蓄
                    case '7':
                        $bankId = 'PSBC';
                        break;
                    // 中国光大银行
                    case '8':
                        $bankId = 'CEB';
                        break;
                    // 民生银行
                    case '9':
                        $bankId = 'CMBC';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bankId = 'SPDB';
                        break;
                    // 兴业银行
                    case '11':
                        $bankId = 'CIB';
                        break;
                    // 广发银行
                    case '12':
                        $bankId = 'GDB';
                        break;
                    // 深圳发展银行
                    case '13':
                        $bankId = 'SDB';
                        break;
                    // 华夏银行
                    case '15':
                        $bankId = 'HXB';
                        break;
                    // 东莞银行
                    /*case '16':
                        break;*/
                    // 渤海银行
                    /*case '17':
                        $bankId = '03180000';
                        break;*/
                    // 浙商银行
                    /*case '19':
                        $bankId = '968';
                        break;*/
                    // 北京银行
                    case '20':
                        $bankId = 'BCCB';
                        break;
                    // 广州银行
                    /*case '21':
                        break;*/
                    // 中国银行
                    case '22':
                        $bankId = 'BOC';
                        break;
                    //上海银行
                    case '23':
                        $bankId = 'SHB';
                        break;
                    case '24':
                        $bankId = 'NBB';
                        break;
                    case '25':
                        $bankId = 'HZB';
                        break;

                }
                $postData = array();
                $postData['MerchantCode'] = $cards[$card_id]['mer_no'];
                $postData['BankCode'] = @$bankId;
                $postData['Amount'] = $deposit_amount;
                $postData['OrderId'] = $shop_order_num;
                $postData['NotifyUrl'] = $callbackurl;
                $postData['OrderDate'] = time();
                $postData['key'] = $cards[$card_id]['mer_key'];

                $postData['Sign'] = $this->bscreateSign($postData);

                $postFields = array(
                    'url' => $apiUrl,
                    'MerchantCode' => $postData['MerchantCode'],
                    'BankCode' => $postData['BankCode'],
                    'Amount' => $postData['Amount'],
                    'OrderId' => $postData['OrderId'],
                    'NotifyUrl' => $postData['NotifyUrl'],
                    'OrderDate' => $postData['OrderDate'],
                    'Sign' => $postData['Sign']
                );


                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


                $data = array(
                    'order_number' => $postData['OrderId'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    self::$view->setVar('postFields', $postFields);
                    self::$view->render('pay_boshi_wy');
                } else {
                    log2file('boshiPay.log', $postFields);
                    die('生成订单失败');
                }

                die();

            }
            $postData = array();
            $postData['MerchantCode'] = $cards[$card_id]['mer_no'];
            $postData['BankCode'] = $payType;
            $postData['Amount'] = $deposit_amount;
            $postData['OrderId'] = $shop_order_num;
            $postData['NotifyUrl'] = $callbackurl;
            $postData['OrderDate'] = time();
            $postData['key'] = $cards[$card_id]['mer_key'];

            $postData['Sign'] = $this->bscreateSign($postData);

            $postFields = array(
                'url' => $apiUrl,
                'MerchantCode' => $postData['MerchantCode'],
                'BankCode' => $postData['BankCode'],
                'Amount' => $postData['Amount'],
                'OrderId' => $postData['OrderId'],
                'NotifyUrl' => $postData['NotifyUrl'],
                'OrderDate' => $postData['OrderDate'],
                'Sign' => $postData['Sign']
            );


            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            $data = array(
                'order_number' => $postData['OrderId'],
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (pay::addItem($data)) {
                self::$view->setVar('postFields', $postFields);
                self::$view->render('pay_boshi_wy');
            } else {
                log2file('boshiPay.log', $postFields);
                die('生成订单失败');
            }

            die();

        }
    }

    public function bscreateSign($params) {
        $signText = 'MerchantCode=['.$params['MerchantCode'].']OrderId=['.$params['OrderId'].']Amount=['.$params['Amount'].']NotifyUrl=['.$params['NotifyUrl'].']OrderDate=['.$params['OrderDate'].']BankCode=['.$params['BankCode'].']TokenKey=['.$params["key"].']';
        return strtoupper(md5($signText));
    }



    public function yuebaoPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            if ($card_id == '') {
                die('系统出错！(错误码：6003)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $payType = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['yuebao_api'];

            if ($cards[$card_id]["netway"] == "WX") {
                $payType = "WEIXIN";
            } else if ($cards[$card_id]['netway'] == "WX_WAP") {
                $payType = "WEIXINWAP";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $payType = "ALIPAY";
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $payType = "ALIPAYWAP";
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $payType = "QQ";
            } else if ($cards[$card_id]['netway'] == "QQ_WAP") {
                $payType = "QQWAP";
            } else if ($cards[$card_id]['netway'] == "KJ") {
                $payType = "SHORTCUT";
            } else if ($cards[$card_id]['netway'] == "WY") {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');

                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bankId = 'ICBC';
                        break;
                    // 农业银行
                    case '2':
                        $bankId = 'ABC';
                        break;
                    // 建设银行
                    case '3':
                        $bankId = 'CCB';
                        break;
                    // 招商银行
                    case '4':
                        $bankId = 'CMB';
                        break;
                    // 交通银行
                    case '5':
                        $bankId = 'BOCO';
                        break;
                    // 中信银行
                    case '6':
                        $bankId = 'CTTIC';
                        break;
                    // 邮政储蓄
                    case '7':
                        $bankId = 'PSBS';
                        break;
                    // 中国光大银行
                    case '8':
                        $bankId = 'CEB';
                        break;
                    // 民生银行
                    case '9':
                        $bankId = 'CMBC';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bankId = 'SPDB';
                        break;
                    // 兴业银行
                    case '11':
                        $bankId = 'CIB';
                        break;
                    // 广发银行
                    case '12':
                        $bankId = 'GDB';
                        break;
                    // 平安银行
                    case '13':
                        $bankId = 'PINGANBANK';
                        break;
                    // 华夏银行
                    case '15':
                        $bankId = 'HXB';
                        break;
                    // 东莞银行
                    /*case '16':
                        break;*/
                    // 渤海银行
                    case '17':
                        $bankId = 'CBHB';
                        break;
                    // 浙商银行
                    /*case '19':
                        $bankId = '968';
                        break;*/
                    // 北京银行
                    case '20':
                        $bankId = 'BCCB';
                        break;
                    // 广州银行
                    /*case '21':
                        break;*/
                    // 中国银行
                    case '22':
                        $bankId = 'BOC';
                        break;
                    //上海银行
                    case '23':
                        $bankId = 'SHB';
                        break;
                    //宁波银行
                    case '24':
                        $bankId = 'NBCB';
                        break;
                    /*case '25':
                        $bankId = 'HZB';
                        break;*/

                }
                $postData = array();
                $postData['version'] = "3.0";
                $postData['method'] = "Yb.online.interface";
                $postData['partner'] = $cards[$card_id]['mer_no'];
                $postData['banktype'] = $bankId;
                $postData['paymoney'] = $deposit_amount;
                $postData['ordernumber'] = $shop_order_num;
                $postData['callbackurl'] = $callbackurl;

                $signSource = sprintf("version=%s&method=%s&partner=%s&banktype=%s&paymoney=%s&ordernumber=%s&callbackurl=%s%s", $postData['version'],$postData['method'],$postData['partner'], $postData['banktype'], $postData['paymoney'], $postData['ordernumber'], $postData['callbackurl'], $cards[$card_id]['mer_key']);

                $sign = md5($signSource);

                $postUrl = $apiUrl. "?version=".$postData['version'];
                $postUrl.="&method=".$postData['method'];
                $postUrl.="&partner=".$postData['partner'];
                $postUrl.="&banktype=".$postData['banktype'];
                $postUrl.="&paymoney=".$postData['paymoney'];
                $postUrl.="&ordernumber=".$postData['ordernumber'];
                $postUrl.="&callbackurl=".$postData['callbackurl'];
                $postUrl.="&sign=".$sign;

                $postFields = array(
                    'url' => $postUrl
                );


                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


                $data = array(
                    'order_number' => $postData['ordernumber'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    self::$view->setVar('postFields', $postFields);
                    self::$view->render('pay_yuebao');
                } else {
                    log2file('yuebaoPay.log', $postFields);
                    die('生成订单失败');
                }

                die();

            }

            $postData = array();
            $postData['version'] = "3.0";
            $postData['method'] = "Yb.online.interface";
            $postData['partner'] = $cards[$card_id]['mer_no'];
            $postData['banktype'] = $payType;
            $postData['paymoney'] = $deposit_amount;
            $postData['ordernumber'] = $shop_order_num;
            $postData['callbackurl'] = $callbackurl;

            $signSource = sprintf("version=%s&method=%s&partner=%s&banktype=%s&paymoney=%s&ordernumber=%s&callbackurl=%s%s", $postData['version'],$postData['method'],$postData['partner'], $postData['banktype'], $postData['paymoney'], $postData['ordernumber'], $postData['callbackurl'], $cards[$card_id]['mer_key']);

            $sign = md5($signSource);

            $postUrl = $apiUrl. "?version=".$postData['version'];
            $postUrl.="&method=".$postData['method'];
            $postUrl.="&partner=".$postData['partner'];
            $postUrl.="&banktype=".$postData['banktype'];
            $postUrl.="&paymoney=".$postData['paymoney'];
            $postUrl.="&ordernumber=".$postData['ordernumber'];
            $postUrl.="&callbackurl=".$postData['callbackurl'];
            $postUrl.="&sign=".$sign;

            $postFields = array(
                'url' => $postUrl
            );


            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            $data = array(
                'order_number' => $postData['ordernumber'],
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (pay::addItem($data)) {
                self::$view->setVar('postFields', $postFields);
                self::$view->render('pay_yuebao');
            } else {
                log2file('yuebaoPay.log', $postFields);
                die('生成订单失败');
            }

            die();
        }
    }


    public function zhifuhuiPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;


        /*if (time() > intval($time)) {
            die('交易超时，请刷新充值页面重新充值');
        }*/

        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));


        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }

        $cards = cards::getItemsById(array($card_id));


        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');


            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');


            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];


            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }


            $service_type = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['zhifuhui_api'];

            if ($cards[$card_id]["netway"] == "ZFB") {
                $service_type = "alipay_scan";
            } else if ($cards[$card_id]['netway'] == "WX") {
                $service_type = "weixin_scan";
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $service_type = "tenpay_scan";
            } else if ($cards[$card_id]['netway'] === 'WY') {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                $apiUrl = $GLOBALS['cfg']['pay_url']['zhifuhui_api_wy'];
                $service_type = "b2c";
                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bankId = 'ICBC';
                        break;
                    // 农业银行
                    case '2':
                        $bankId = 'ABC';
                        break;
                    // 建设银行
                    case '3':
                        $bankId = 'CCB';
                        break;
                    // 招商银行
                    case '4':
                        $bankId = 'CMB';
                        break;
                    // 交通银行
                    case '5':
                        $bankId = 'BCOM';
                        break;
                    // 中信银行
                    case '6':
                        $bankId = 'ECITIC';
                        break;
                    // 邮政储蓄
                    case '7':
                        $bankId = 'PSBC';
                        break;
                    // 中国光大银行
                    case '8':
                        $bankId = 'CEBB';
                        break;
                    // 民生银行
                    case '9':
                        $bankId = 'CMBC';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bankId = 'SPDB';
                        break;
                    // 兴业银行
                    case '11':
                        $bankId = 'CIB';
                        break;
                    // 广发银行
                    case '12':
                        $bankId = 'GDB';
                        break;
                    // 平安银行
                    case '13':
                        $bankId = 'SPABANK';
                        break;
                    // 华夏银行
                    case '15':
                        $bankId = 'HXB';
                        break;
                    // 东莞银行
                    /*case '16':
                        break;*/
                    // 渤海银行
                    /*case '17':
                        $bankId = '03180000';
                        break;*/
                    // 浙商银行
                    /*case '19':
                        $bankId = '968';
                        break;*/
                    // 北京银行
                    case '20':
                        $bankId = 'BOB';
                        break;
                    // 广州银行
                    /*case '21':
                        break;*/
                    // 中国银行
                    case '22':
                        $bankId = 'BOC';
                        break;
                    //上海银行
                    case '23':
                        $bankId = 'SHB';
                        break;
                    //宁波银行
                    case '24':
                        $bankId = 'NBB';
                        break;
                    //杭州银行
                    case '25':
                        $bankId = 'HZB';
                        break;
                }
                $postData = array();
                $postData['merchant_code'] = $cards[$card_id]['mer_no'];
                $postData['service_type'] = "direct_pay";
                $postData['notify_url'] = $callbackurl;
                $postData['interface_version'] = "V3.0";
                $postData['input_charset'] = "UTF-8";
                $postData['sign_type'] = "RSA-S";//该字段不参与签名
                $postData['order_no'] = $shop_order_num;
                $postData['order_time'] = date( 'Y-m-d H:i:s' );
                $postData['order_amount'] = $deposit_amount;
                $postData['product_name'] = "testpay";

                $signStr= "";
                $signStr = $signStr."input_charset=".$postData['input_charset']."&";
                $signStr = $signStr."interface_version=".$postData['interface_version']."&";
                $signStr = $signStr."merchant_code=".$postData['merchant_code']."&";
                $signStr = $signStr."notify_url=".$postData['notify_url']."&";
                $signStr = $signStr."order_amount=".$postData['order_amount']."&";
                $signStr = $signStr."order_no=".$postData['order_no']."&";
                $signStr = $signStr."order_time=".$postData['order_time']."&";
                $signStr = $signStr."product_name=".$postData['product_name']."&";
                $signStr = $signStr."service_type=".$postData['service_type'];
                $merchant_private_key= openssl_get_privatekey($this->formatKey($cards[$card_id]['mer_key'], $type = 'private'));

                openssl_sign($signStr,$sign_info,$merchant_private_key,OPENSSL_ALGO_MD5);

                $sign = base64_encode($sign_info);

                $postData['sign'] = $sign;//该字段不参与签名

                $postFields = array(
                    'url' => $apiUrl,
                    'sign' => $postData['sign'],
                    'merchant_code' => $postData['merchant_code'],
                    'service_type' => $postData['service_type'],
                    'notify_url' => $postData['notify_url'],
                    'interface_version' => $postData['interface_version'],
                    'input_charset' => $postData['input_charset'],
                    'sign_type' => $postData['sign_type'],
                    'order_no' => $postData['order_no'],
                    'order_time' => $postData['order_time'],
                    'order_amount' => $postData['order_amount'],
                    'product_name' => $postData['product_name']
                );


                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


                $data = array(
                    'order_number' => $postData['order_no'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    self::$view->setVar('postFields', $postFields);
                    self::$view->render('pay_zhifuhui_wy');
                } else {
                    log2file('zhifuhuiPay.log', $postFields);
                    die('生成订单失败');
                }

                die();

            }
            $postData = array();
            $postData['merchant_code'] = $cards[$card_id]['mer_no'];
            $postData['service_type'] = $service_type;
            $postData['notify_url'] = $callbackurl;
            $postData['interface_version'] = "V3.1";
            $postData['client_ip'] = $this->getClientIp();
            $postData['sign_type'] = "RSA-S";//不参与签名
            $postData['order_no'] = $shop_order_num;
            $postData['order_time'] = date( 'Y-m-d H:i:s' );
            $postData['order_amount'] = $deposit_amount;
            $postData['product_name'] = "testpay";

            $signStr = "";
            $signStr = $signStr."client_ip=".$postData['client_ip']."&";
            $signStr = $signStr."interface_version=".$postData['interface_version']."&";
            $signStr = $signStr."merchant_code=".$postData['merchant_code']."&";
            $signStr = $signStr."notify_url=".$postData['notify_url']."&";
            $signStr = $signStr."order_amount=".$postData['order_amount']."&";
            $signStr = $signStr."order_no=".$postData['order_no']."&";
            $signStr = $signStr."order_time=".$postData['order_time']."&";
            $signStr = $signStr."product_name=".$postData['product_name']."&";
            $signStr = $signStr."service_type=".$postData['service_type'];

            $merchant_private_key= openssl_get_privatekey($this->formatKey($cards[$card_id]['mer_key'], $type = 'private'));

            openssl_sign($signStr,$sign_info,$merchant_private_key,OPENSSL_ALGO_MD5);

            $sign = base64_encode($sign_info);

            $postData['sign'] = $sign;

            $jsonResponse = $this->zfhcurlPostData($apiUrl,$postData);
            $response = $this->xmlToArray($jsonResponse, $recursive = false );
            //dd($response['response']);
            if ($response['response'] != null && $response['response']['result_code'] == "0") {


                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');



                $data = array(
                    'order_number' => $response['response']['order_no'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );


                if (pay::addItem($data)) {
                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        header("location:" . $response['response']['qrcode']);
                        die();
                    } else {
                        header("location:" . '../pay/qrcode.php?code=' . $response['response']['qrcode'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                        die();
                    }
                }
            } else {
                if ($response['response'] == null) {
                    echo '第三方接口返回消息为空!';
                } else {
                    log2file('zhifuhuiPay.log', $postData);
                    log2file('zhifuhuiPay.log', $jsonResponse);

                    if (isset($response['response']['resp_desc'])) {
                        echo $response['response']['resp_desc'];
                    }
                }
            }
        } else {
            die();
        }

    }
public function zfhcurlPostData($apiUrl, $postData){
    $ch = curl_init();
    curl_setopt($ch,CURLOPT_URL,$apiUrl);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
    curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);
    curl_setopt($ch, CURLOPT_POST, true);
    curl_setopt($ch, CURLOPT_HEADER, false);
    curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($postData));
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);

    $response=curl_exec($ch);

    //$res=simplexml_load_string($response);

    curl_close($ch);

    return $response;


}


    public function shiguangfuPay()
    {

        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');



        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;


        if (time() > intval($time)) {
            die('交易超时，请刷新充值页面重新充值');
        }

        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));



        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }

        $cards = cards::getItemsById(array($card_id));



        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');



            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');





            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'intval');




            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];



            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }


            $service_type = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['shiguangfu_api'];


            if ($cards[$card_id]["netway"] == "WX") {
                $service_type = "2";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $service_type = "4";
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $service_type = "6";
            } else if ($cards[$card_id]['netway'] === 'WY') {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                $apiUrl = $GLOBALS['cfg']['pay_url']['weifutong_api'];

                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bankId = 'ICBC';
                        break;
                    // 农业银行
                    case '2':
                        $bankId = 'ABC';
                        break;
                    // 建设银行
                    case '3':
                        $bankId = 'CCB';
                        break;
                    // 招商银行
                    case '4':
                        $bankId = 'CMB';
                        break;
                    // 交通银行
                    case '5':
                        $bankId = 'BCOM';
                        break;
                    // 中信银行
                    case '6':
                        $bankId = 'ECITIC';
                        break;
                    // 邮政储蓄
                    case '7':
                        $bankId = 'PSBC';
                        break;
                    // 中国光大银行
                    case '8':
                        $bankId = 'CEBB';
                        break;
                    // 民生银行
                    case '9':
                        $bankId = 'CMBC';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bankId = 'SPDB';
                        break;
                    // 兴业银行
                    case '11':
                        $bankId = 'CIB';
                        break;
                    // 广发银行
                    case '12':
                        $bankId = 'GDB';
                        break;
                    // 平安银行
                    case '13':
                        $bankId = 'SPABANK';
                        break;
                    // 华夏银行
                    case '15':
                        $bankId = 'HXB';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        break;
                    // 浙商银行
                    case '19':
                        break;
                    // 北京银行
                    case '20':
                        $bankId = 'BOB';
                        break;
                    // 广州银行
                    case '21':
                        break;
                    // 中国银行
                    case '22':
                        $bankId = 'BOC';
                        break;
                }
            }

            $postData = array();
            $postData['P_UserId'] = $cards[$card_id]['mer_no'];
            $postData['P_OrderId'] = $shop_order_num;
            $postData['P_FaceValue'] = $deposit_amount;
            $postData['P_CustormId']  ="01"."_". Md5($postData['P_UserId'] . "|" .$cards[$card_id]["mer_key"] . "|" ."01");
            $postData['P_Type'] = $service_type;
            $postData['P_RequestType'] = "0";
            $postData['P_SDKVersion'] = "3.1.3";
            $postData['P_Subject'] = "testgood";
            $postData['P_Result_URL'] = $returnurl;
            $postData['P_Notify_URL'] = $callbackurl;
            $postData['P_PostKey'] = md5($postData['P_UserId'].'|'.$postData['P_OrderId'].'|'.$postData['P_FaceValue'].'|'.$postData['P_Type'].'|'.$postData['P_SDKVersion'].'|'.$postData['P_RequestType'].'|'.$cards[$card_id]["mer_key"]);

            /*$signStr = "";
            $signStr = $signStr . "mch_create_ip=" . $postData['mch_create_ip'] . "&";
            $signStr = $signStr . "mch_id=" . $postData['mch_id'] . "&";
            $signStr = $signStr . "notify_url=" . $postData['notify_url'] . "&";
            $signStr = $signStr . "total_fee=" . $postData['total_fee'] . "&";
            $signStr = $signStr . "out_trade_no=" . $postData['out_trade_no'] . "&";
            $signStr = $signStr . "body=" . $postData['body'] . "&";
            $signStr = $signStr . "nonce_str" . $postData['nonce_str'] . "&";
            $signStr = $signStr . "service=" . $postData['service'];*/

            $jsonResponse = $this->sgfpost($apiUrl,$postData);
            $response = json_decode($jsonResponse,true);



            if ($response != null && $response['status'] == '0' && $response['result_code'] == '0') {
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');



                $data = array(
                    'order_number' => $postData['P_OrderId'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );


                if (pay::addItem($data)) {

                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        header("location:" . $response['code_url']);
                        die();
                    } else {
                        header("location:" . '../pay/qrcode.php?code=' . $response['code_url'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                        die();
                    }
                }
            } else {
                if ($response == null) {
                    echo '生成订单失败';
                } else {
                    log2file('shiguangfuPay.log', $postData);
                    log2file('shiguangfuPay.log', $response);

                    if (isset($response['message'])) {
                        echo $response['message'];
                    }
                }
            }
        } else {
            die();
        }

    }

    public function  sgfpost($url,$postdata)
    {

        $ch = curl_init();
        curl_setopt($ch,CURLOPT_URL,$url);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);
        curl_setopt($ch, CURLOPT_POST, true);
        curl_setopt($ch, CURLOPT_HEADER, false);
        curl_setopt($ch, CURLOPT_POSTFIELDS, urldecode(http_build_query($postdata)));
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        $response=curl_exec($ch);
        curl_close($ch);
        return $response;
    }

    public function ouchuangPay()
    {

        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');



        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;


        if (time() > intval($time)) {
            die('交易超时，请刷新充值页面重新充值');
        }

        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));



        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }

        $cards = cards::getItemsById(array($card_id));



        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');



            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');





            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'intval');




            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];



            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }


            $service_type = '';

            if ($cards[$card_id]["netway"] == "WX") {
                $service_type = "T0";
                $apiUrl = $GLOBALS['cfg']['pay_url']['ouchuang_wxapi'];
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $service_type = "T0";
                $apiUrl = $GLOBALS['cfg']['pay_url']['ouchuang_zfb'];
            } else if ($cards[$card_id]['netway'] == "WX_WAP") {
                $service_type = "T1";
                $apiUrl = $GLOBALS['cfg']['pay_url']['ouchuang_wxwapapi'];
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $service_type = "T0";
                $apiUrl = $GLOBALS['cfg']['pay_url']['ouchuang_zfbwapapi'];
            } else if ($cards[$card_id]['netway'] === 'WY') {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                $apiUrl = $GLOBALS['cfg']['pay_url']['weifutong_api'];

                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bankId = 'ICBC';
                        break;
                    // 农业银行
                    case '2':
                        $bankId = 'ABC';
                        break;
                    // 建设银行
                    case '3':
                        $bankId = 'CCB';
                        break;
                    // 招商银行
                    case '4':
                        $bankId = 'CMB';
                        break;
                    // 交通银行
                    case '5':
                        $bankId = 'BCOM';
                        break;
                    // 中信银行
                    case '6':
                        $bankId = 'ECITIC';
                        break;
                    // 邮政储蓄
                    case '7':
                        $bankId = 'PSBC';
                        break;
                    // 中国光大银行
                    case '8':
                        $bankId = 'CEBB';
                        break;
                    // 民生银行
                    case '9':
                        $bankId = 'CMBC';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bankId = 'SPDB';
                        break;
                    // 兴业银行
                    case '11':
                        $bankId = 'CIB';
                        break;
                    // 广发银行
                    case '12':
                        $bankId = 'GDB';
                        break;
                    // 平安银行
                    case '13':
                        $bankId = 'SPABANK';
                        break;
                    // 华夏银行
                    case '15':
                        $bankId = 'HXB';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        break;
                    // 浙商银行
                    case '19':
                        break;
                    // 北京银行
                    case '20':
                        $bankId = 'BOB';
                        break;
                    // 广州银行
                    case '21':
                        break;
                    // 中国银行
                    case '22':
                        $bankId = 'BOC';
                        break;
                }
            }

            $postData = array();
            $postData['P_UserId'] = $cards[$card_id]['mer_no'];
            $postData['P_OrderId'] = $shop_order_num;
            $postData['P_FaceValue'] = $deposit_amount;
            $postData['P_CustormId']  ="01"."_". Md5($postData['P_UserId'] . "|" .$cards[$card_id]["mer_key"] . "|" ."01");
            $postData['P_Type'] = $service_type;
            $postData['P_RequestType'] = "0";
            $postData['P_SDKVersion'] = "3.1.3";
            $postData['P_Subject'] = "testgood";
            $postData['P_Result_URL'] = $returnurl;
            $postData['P_Notify_URL'] = $callbackurl;
            $postData['P_PostKey'] = md5($postData['P_UserId'].'|'.$postData['P_OrderId'].'|'.$postData['P_FaceValue'].'|'.$postData['P_Type'].'|'.$postData['P_SDKVersion'].'|'.$postData['P_RequestType'].'|'.$cards[$card_id]["mer_key"]);

            $info = array();
            $jsonResponse = $this->curlPostData($apiUrl, $postData, $info);
            $response = json_decode($jsonResponse, true);



            if ($response != null && $response['status'] == '0' && $response['result_code'] == '0') {
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');



                $data = array(
                    'order_number' => $postData['P_OrderId'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );


                if (pay::addItem($data)) {

                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        self::$view->setVar('qrcode_url', $response['qrcodeInfo']);
                        self::$view->render('pay_ouchuangwap');
                        die();
                    } else {
                        header("location:" . '../pay/qrcode.php?code=' . $response['code_url'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                        die();
                    }
                }
            } else {
                if ($response == null) {
                    echo '生成订单失败';
                } else {
                    log2file('shiguangfuPay.log', $postData);
                    log2file('shiguangfuPay.log', $response);

                    if (isset($response['err_msg'])) {
                        echo $response['err_msg'];
                    }
                }
            }
        } else {
            die();
        }

    }

    public function mifuPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $bank = '';

            if ($cards[$card_id]["netway"] == "WX") {
                $bank = "WECHAT";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $bank = "ALIPAY";
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $bank = "QQ";
            } else if ($cards[$card_id]['netway'] === 'WY') {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');

                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bank = 'ICBC';
                        break;
                    // 农业银行
                    case '2':
                        $bank = 'ABOC';
                        break;
                    // 建设银行
                    case '3':
                        $bank = 'CCB';
                        break;
                    // 招商银行
                    case '4':
                        $bank = 'CMB';
                        break;
                    // 交通银行
                    case '5':
                        $bank = 'BOCOM';
                        break;
                    // 中信银行
                    case '6':
                        $bank = 'ECITIC';
                        break;
                    // 邮政储蓄
                    case '7':
                        $bank = 'PSBC';
                        break;
                    // 中国光大银行
                    case '8':
                        $bank = 'CEB';
                        break;
                    // 民生银行
                    case '9':
                        $bank = 'CMBC';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bank = 'SPDB';
                        break;
                    // 兴业银行
                    case '11':
                        $bank = 'CIB';
                        break;
                    // 广发银行
                    case '12':
                        $bank = 'GDB';
                        break;
                    // 平安银行
                    case '13':
                        $bank = 'SDB';
                        break;
                    // 华夏银行
                    case '15':
                        $bank = 'HXB';
                        break;
                    // 北京银行
                    case '20':
                        $bank = 'BOBJ';
                        break;
                    // 中国银行
                    case '22':
                        $bank = 'BOC';
                        break;
                }
            }

            $postFields = array(
                'merchant' => $cards[$card_id]['mer_no'],
                'billno' => $shop_order_num,
                'amount' => $deposit_amount,
                'notify_url' => $callbackurl,
                'sign_type' => 'MD5',
                'bank' => $bank,
                'pay_time' => date('Ymdhis'),
            );

            $sign = md5('amount=' . $postFields['amount'] . '&bank=' . $postFields['bank'].'&billno=' . $postFields['billno']. '&merchant=' . $postFields['merchant'] . '&pay_time=' . $postFields['pay_time'] . '&sign_type=' . $postFields['sign_type'] . '&key=' . $cards[$card_id]['mer_key']);
            $postFields['sign'] = $sign;
            $apiUrl = $GLOBALS['cfg']['pay_url']['mifu_api'];

            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            $data = array(
                'order_number' => $shop_order_num,
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if ($cards[$card_id]['netway'] === 'WY') {
                if (pay::addItem($data)) {
                    $postUrl = $apiUrl . '?' . http_build_query($postFields);
                    header("location:" . $postUrl);
                    die();
                } else {
                    die('添加订单失败');
                }
            }

            $info = array();
            $response = $this->curlPostData($apiUrl, $postFields, $info);
            $response = json_decode($response, true);

            if ($response !== null && isset($response['code']) && $response['code'] === '1000') {
                if (pay::addItem($data)) {
                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        self::$view->setVar('qrcode_url', $response['qrCode']);
                        self::$view->render('pay_shunfu');
                        die();
                    } else {
                        header("location:" . '../pay/qrcode.php?code=' . $response['qrCode'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                        die();
                    }
                } else {
                    die('添加订单失败');
                }
            } else {
                if (isset($response['msg'])) {
                    echo $response['msg'];
                } else {
                    echo '生成订单失败';
                }

                log2file('mifuPay.log', $postFields);
                log2file('mifuPay.log', $response);
            }
        } else {
            die();
        }
    }

    public function alaPay()
    {

        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');



        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;


        if (time() > intval($time)) {
            die('交易超时，请刷新充值页面重新充值');
        }

        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));



        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }

        $cards = cards::getItemsById(array($card_id));



        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');



            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');





            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');




            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];



            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }


            $service_type = '';

            if ($cards[$card_id]["netway"] == "WX") {
                $service_type = "2";
                $apiUrl = $GLOBALS['cfg']['pay_url']['ala_scan'];
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $service_type = "1";
                $apiUrl = $GLOBALS['cfg']['pay_url']['ala_scan'];
            } else if ($cards[$card_id]['netway'] == "WX_WAP") {
                $service_type = "2";
                $apiUrl = $GLOBALS['cfg']['pay_url']['ala_wxwap'];
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $service_type = "8";
                $apiUrl = $GLOBALS['cfg']['pay_url']['ala_scan'];
            } else if ($cards[$card_id]['netway'] === 'WY') {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                $apiUrl = $GLOBALS['cfg']['pay_url']['ala_wy'];

                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bankId = '3002';
                        break;
                    // 农业银行
                    case '2':
                        $bankId = '3005';
                        break;
                    // 建设银行
                    case '3':
                        $bankId = '3003';
                        break;
                    // 招商银行
                    case '4':
                        $bankId = '3001';
                        break;
                    // 交通银行
                    case '5':
                        $bankId = '3020';
                        break;
                    // 中信银行
                    case '6':
                        $bankId = '3039';
                        break;
                    // 邮政储蓄
                    /*case '7':
                        $bankId = 'PSBC';
                        break;*/
                    // 中国光大银行
                    case '8':
                        $bankId = '3022';
                        break;
                    // 民生银行
                    case '9':
                        $bankId = '3006';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bankId = '3004';
                        break;
                    // 兴业银行
                    case '11':
                        $bankId = '3009';
                        break;
                    // 广发银行
                    case '12':
                        $bankId = '3036';
                        break;
                    // 平安银行
                    case '13':
                        $bankId = '3035';
                        break;
                    // 华夏银行
                    /*case '15':
                        $bankId = 'HXB';
                        break;*/
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        break;
                    // 浙商银行
                    case '19':
                        break;
                    // 北京银行
                    case '20':
                        $bankId = '3032';
                        break;
                    // 广州银行
                    case '21':
                        break;
                    // 中国银行
                    case '22':
                        $bankId = '3026';
                        break;
                }
                $postData = array();
                $postData['merchno'] = $cards[$card_id]['mer_no'];
                $postData['amount'] = $deposit_amount;
                $postData['traceno'] = $shop_order_num;
                $postData['channel'] = "2";
                $postData['bankCode'] = $bankId;
                $postData['settleType'] = "2";
                $postData['notifyUrl'] = $callbackurl;
                $postData['returnUrl'] = $returnurl;

                $temp='';
                ksort($postData);
                foreach ($postData as $x=>$x_value){
                    if ($x_value != null){
                        $temp = $temp.$x."=".iconv('UTF-8','GBK//IGNORE',$x_value)."&";
                    }
                }
                $md5=md5($temp.$cards[$card_id]['mer_key']);
                $postData['signature'] = $md5;

                $postFields = array(
                    'url' => $apiUrl,
                    'sign' => $postData['signature'],
                    'merchno' => $postData['merchno'],
                    'amount' => $postData['amount'],
                    'traceno' => $postData['traceno'],
                    'channel' => $postData['channel'],
                    'bankCode' => $postData['bankCode'],
                    'settleType' => $postData['settleType'],
                    'notifyUrl' => $postData['notifyUrl'],
                    'returnUrl' => $postData['returnUrl']
                );


                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


                $data = array(
                    'order_number' => $postData['traceno'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    self::$view->setVar('postFields', $postFields);
                    self::$view->render('pay_ala_wy');
                } else {
                    log2file('alaPay.log', $postFields);
                    die('生成订单失败');
                }

                die();
            }

            $postData = array();
            $postData['merchno'] = $cards[$card_id]['mer_no'];
            $postData['amount'] = $deposit_amount;
            $postData['traceno'] = $shop_order_num;
            $postData['payType'] = $service_type;
            $postData['settleType'] = "1";
            $postData['notifyUrl'] = $callbackurl;

            $temp='';
            ksort($postData);
            foreach ($postData as $x=>$x_value){
                if ($x_value != null){
                    $temp = $temp.$x."=".iconv('UTF-8','GBK//IGNORE',$x_value)."&";
                }
            }
            $md5=md5($temp.$cards[$card_id]["mer_key"]);
            $reveiveData = $temp.'signature'.'='.$md5;

            $jsonResponse = $this->alacurlpost($apiUrl,$reveiveData);
            $response = json_decode($jsonResponse, true);

            if ($response != null && $response['respCode'] == '00') {
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $postData['traceno'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );


                if (pay::addItem($data)) {

                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        self::$view->setVar('qrcode_url', $response['barCode']);
                        self::$view->render('pay_alawap');
                        die();
                    } else {
                        header("location:" . '../pay/qrcode.php?code=' . $response['barCode'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                        die();
                    }
                }
            } else {
                if ($response == null) {
                    echo '生成订单失败';
                } else {
                    log2file('alaPay.log', $postData);
                    log2file('alaPay.log', $response);

                    if (isset($response['message'])) {
                        echo $response['message'];
                    }
                }
            }
        } else {
            die();
        }

    }

    public function alacurlpost($url,$reveiveData){
        $curl = curl_init();
//设置抓取的url
        curl_setopt($curl, CURLOPT_URL, $url);
//设置头文件的信息作为数据流输出
        curl_setopt($curl, CURLOPT_HEADER, false);
//设置获取的信息以文件流的形式返回，而不是直接输出。
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
//设置post方式提交
        curl_setopt($curl, CURLOPT_POST, 1);
        curl_setopt($curl, CURLOPT_POSTFIELDS, $reveiveData);
//执行命令
        $data = curl_exec($curl);
//关闭URL请求
        curl_close($curl);
//return iconv('GB2312', 'UTF-8', $data);
//显示获得的数据
        return iconv('GBK//IGNORE', 'UTF-8', $data);

    }

    public function zunPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;


        /*if (time() > intval($time)) {
            die('交易超时，请刷新充值页面重新充值');
        }*/

        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));


        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }

        $cards = cards::getItemsById(array($card_id));


        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');


            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');


            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];


            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }


            $service_type = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['zunpay_api'];

            if ($cards[$card_id]["netway"] == "ZFB") {
                $service_type = "992";
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $service_type = "1006";
            } else if ($cards[$card_id]['netway'] == "WX") {
                $service_type = "1004";
            } else if ($cards[$card_id]['netway'] == "WX_WAP") {
                $service_type = "1007";
            } else if ($cards[$card_id]['netway'] === 'WY') {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bankId = '967';
                        break;
                    // 农业银行
                    case '2':
                        $bankId = '964';
                        break;
                    // 建设银行
                    case '3':
                        $bankId = '965';
                        break;
                    // 招商银行
                    case '4':
                        $bankId = '970';
                        break;
                    // 交通银行
                    case '5':
                        $bankId = '981';
                        break;
                    // 中信银行
                    case '6':
                        $bankId = '962';
                        break;
                    // 邮政储蓄
                    case '7':
                        $bankId = '971';
                        break;
                    // 中国光大银行
                    case '8':
                        $bankId = '';
                        break;
                    // 民生银行
                    case '9':
                        $bankId = '980';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bankId = '977';
                        break;
                    // 兴业银行
                    case '11':
                        $bankId = '972';
                        break;
                    // 广发银行
                    case '12':
                        $bankId = '985';
                        break;
                    // 平安银行
                    case '13':
                        $bankId = '978';
                        break;
                    // 华夏银行
                    case '15':
                        $bankId = '982';
                        break;
                    // 东莞银行
                    /*case '16':
                        break;*/
                    // 渤海银行
                    case '17':
                        $bankId = '988';
                        break;
                    // 浙商银行
                    case '19':
                        $bankId = '968';
                        break;
                    // 北京银行
                    case '20':
                        $bankId = '989';
                        break;
                    // 广州银行
                    /*case '21':
                        break;*/
                    // 中国银行
                    case '22':
                        $bankId = '963';
                        break;

                }
                $postData = array();
                $postData['parter'] = $cards[$card_id]['mer_no'];
                $postData['type'] = $bankId;
                $postData['value'] = $deposit_amount;
                $postData['orderid'] = $shop_order_num;
                $postData['callbackurl'] = $callbackurl;

                $postData['sign'] = md5("parter={$postData['parter']}&type={$postData['type']}&value={$postData['value']}&orderid ={$postData['orderid']}&callbackurl={$postData['callbackurl']}{$cards[$card_id]['mer_key']}");

                $postFields = array(
                    'url' => $apiUrl,
                    'parter' => $postData['parter'],
                    'type' => $postData['type'],
                    'value' => $postData['value'],
                    'orderid' => $postData['orderid'],
                    'callbackurl' => $postData['callbackurl'],
                    'sign' => $postData['sign'],
                );


                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


                $data = array(
                    'order_number' => $postData['orderid'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    self::$view->setVar('postFields', $postFields);
                    self::$view->render('pay_zun');
                } else {
                    log2file('zunPay.log', $postFields);
                    die('生成订单失败');
                }

                die();

            }
            $postData = array();
            $postData['parter'] = $cards[$card_id]['mer_no'];
            $postData['type'] = $service_type;
            $postData['value'] = $deposit_amount;
            $postData['orderid'] = $shop_order_num;
            $postData['callbackurl'] = $callbackurl;

            $postData['sign'] = md5("parter={$postData['parter']}&type={$postData['type']}&value={$postData['value']}&orderid={$postData['orderid']}&callbackurl={$postData['callbackurl']}{$cards[$card_id]['mer_key']}");

            $postFields = array(
                'url' => $apiUrl,
                'parter' => $postData['parter'],
                'type' => $postData['type'],
                'value' => $postData['value'],
                'orderid' => $postData['orderid'],
                'callbackurl' => $postData['callbackurl'],
                'sign' => $postData['sign'],
            );


            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            $data = array(
                'order_number' => $postData['orderid'],
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (pay::addItem($data)) {
                self::$view->setVar('postFields', $postFields);
                self::$view->render('pay_zun');
            } else {
                log2file('zunPay.log', $postFields);
                die('生成订单失败');
            }

            die();
        }
    }

    public function xunPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;


        /*if (time() > intval($time)) {
            die('交易超时，请刷新充值页面重新充值');
        }*/

        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));


        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }

        $cards = cards::getItemsById(array($card_id));


        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');


            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');


            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];


            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }


            $service_type = '';
            $xftongdao = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['xunpay_api'];

            if ($cards[$card_id]["netway"] == "ZFB") {
                $service_type = "ChengYiAlipay";
                $xftongdao = "ChengYiAlipay";
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $service_type = "ChengYiQQpay";
                $xftongdao = "ChengYiQQpay";
            } else if ($cards[$card_id]['netway'] == "WX") {
                $service_type = "ChengYiWeiXin";
                $xftongdao = "ChengYiWeiXin";
            } else if ($cards[$card_id]['netway'] === 'WY') {
                $service_type = "ChengYiOnlineBank";
                $xftongdao = "ChengYiOnlineBank";
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bankId = '967';
                        break;
                    // 农业银行
                    case '2':
                        $bankId = '964';
                        break;
                    // 建设银行
                    case '3':
                        $bankId = '965';
                        break;
                    // 招商银行
                    case '4':
                        $bankId = '970';
                        break;
                    // 交通银行
                    case '5':
                        $bankId = '981';
                        break;
                    // 中信银行
                    case '6':
                        $bankId = '962';
                        break;
                    // 邮政储蓄
                    case '7':
                        $bankId = '971';
                        break;
                    // 中国光大银行
                    case '8':
                        $bankId = '';
                        break;
                    // 民生银行
                    case '9':
                        $bankId = '980';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bankId = '977';
                        break;
                    // 兴业银行
                    case '11':
                        $bankId = '972';
                        break;
                    // 广发银行
                    case '12':
                        $bankId = '985';
                        break;
                    // 平安银行
                    case '13':
                        $bankId = '978';
                        break;
                    // 华夏银行
                    case '15':
                        $bankId = '982';
                        break;
                    // 东莞银行
                    /*case '16':
                        break;*/
                    // 渤海银行
                    case '17':
                        $bankId = '988';
                        break;
                    // 浙商银行
                    case '19':
                        $bankId = '968';
                        break;
                    // 北京银行
                    case '20':
                        $bankId = '989';
                        break;
                    // 广州银行
                    /*case '21':
                        break;*/
                    // 中国银行
                    case '22':
                        $bankId = '963';
                        break;

                }
                $postData = array();
                $postData['pay_memberid'] = $cards[$card_id]['mer_no'];
                $postData['pay_orderid'] = $shop_order_num;
                $postData['pay_amount'] = $deposit_amount;
                $postData['pay_applydate'] = date('Y-m-d H:i:s');
                $postData['pay_bankcode'] = $service_type;
                $postData['pay_notifyurl'] = $callbackurl;
                $postData['pay_callbackurl'] = $returnurl;
                $hmacstr="pay_amount=>".$postData['pay_amount']."&pay_applydate=>".$postData['pay_applydate']."&pay_bankcode=>".$postData['pay_bankcode']."&pay_callbackurl=>".$postData['pay_callbackurl']."&pay_memberid=>".$postData['pay_memberid']."&pay_notifyurl=>".$postData['pay_notifyurl']."&pay_orderid=>".$postData['pay_orderid']."&key=".$cards[$card_id]['mer_key'];
                $hmac= md5($hmacstr);
                $postData['pay_md5sign'] = strtoupper($hmac);
                $postData['tongdao'] = $xftongdao;

                $postFields = array(
                    'url' => $apiUrl,
                    'pay_memberid' => $postData['pay_memberid'],
                    'pay_orderid' => $postData['pay_orderid'],
                    'pay_amount' => $postData['pay_amount'],
                    'pay_applydate' => $postData['pay_applydate'],
                    'pay_bankcode' => $postData['pay_bankcode'],
                    'pay_notifyurl' => $postData['pay_notifyurl'],
                    'pay_callbackurl' => $postData['pay_callbackurl'],
                    'pay_md5sign' => $postData['pay_md5sign'],
                    'tongdao' => $postData['tongdao'],
                );


                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


                $data = array(
                    'order_number' => $postData['pay_orderid'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    self::$view->setVar('postFields', $postFields);
                    self::$view->render('pay_xun');
                } else {
                    log2file('xunPay.log', $postFields);
                    die('生成订单失败');
                }

                die();

            }

            $postData = array();
            $postData['pay_memberid'] = $cards[$card_id]['mer_no'];
            $postData['pay_orderid'] = $shop_order_num;
            $postData['pay_amount'] = $deposit_amount;
            $postData['pay_applydate'] = date('Y-m-d H:i:s');
            $postData['pay_bankcode'] = $service_type;
            $postData['pay_notifyurl'] = $callbackurl;
            $postData['pay_callbackurl'] = $returnurl;
            $hmacstr="pay_amount=>".$postData['pay_amount']."&pay_applydate=>".$postData['pay_applydate']."&pay_bankcode=>".$postData['pay_bankcode']."&pay_callbackurl=>".$postData['pay_callbackurl']."&pay_memberid=>".$postData['pay_memberid']."&pay_notifyurl=>".$postData['pay_notifyurl']."&pay_orderid=>".$postData['pay_orderid']."&key=".$cards[$card_id]['mer_key'];
            $hmac= md5($hmacstr);
            $postData['pay_md5sign'] = strtoupper($hmac);
            $postData['tongdao'] = $xftongdao;

            $postFields = array(
                'url' => $apiUrl,
                'pay_memberid' => $postData['pay_memberid'],
                'pay_orderid' => $postData['pay_orderid'],
                'pay_amount' => $postData['pay_amount'],
                'pay_applydate' => $postData['pay_applydate'],
                'pay_bankcode' => $postData['pay_bankcode'],
                'pay_notifyurl' => $postData['pay_notifyurl'],
                'pay_callbackurl' => $postData['pay_callbackurl'],
                'pay_md5sign' => $postData['pay_md5sign'],
                'tongdao' => $postData['tongdao'],
            );


            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            $data = array(
                'order_number' => $postData['pay_orderid'],
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (pay::addItem($data)) {
                self::$view->setVar('postFields', $postFields);
                self::$view->render('pay_xun');
            } else {
                log2file('xunPay.log', $postFields);
                die('生成订单失败');
            }

            die();

        }
    }

    public function qbjhPay()
    {

        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;


        if (time() > intval($time)) {
            die('交易超时，请刷新充值页面重新充值');
        }

        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));


        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }

        $cards = cards::getItemsById(array($card_id));


        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');


            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');


            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];


            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }


            $service_type = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['qbjhpay_api'];

            if ($cards[$card_id]["netway"] == "WX") {
                $service_type = "wx_qr";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $service_type = "alipay_qr";
            } else if ($cards[$card_id]['netway'] === 'WY') {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bankId = '3002';
                        break;
                    // 农业银行
                    case '2':
                        $bankId = '3005';
                        break;
                    // 建设银行
                    case '3':
                        $bankId = '3003';
                        break;
                    // 招商银行
                    case '4':
                        $bankId = '3001';
                        break;
                    // 交通银行
                    case '5':
                        $bankId = '3020';
                        break;
                    // 中信银行
                    case '6':
                        $bankId = '3039';
                        break;
                    // 邮政储蓄
                    /*case '7':
                        $bankId = 'PSBC';
                        break;*/
                    // 中国光大银行
                    case '8':
                        $bankId = '3022';
                        break;
                    // 民生银行
                    case '9':
                        $bankId = '3006';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bankId = '3004';
                        break;
                    // 兴业银行
                    case '11':
                        $bankId = '3009';
                        break;
                    // 广发银行
                    case '12':
                        $bankId = '3036';
                        break;
                    // 平安银行
                    case '13':
                        $bankId = '3035';
                        break;
                    // 华夏银行
                    /*case '15':
                        $bankId = 'HXB';
                        break;*/
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        break;
                    // 浙商银行
                    case '19':
                        break;
                    // 北京银行
                    case '20':
                        $bankId = '3032';
                        break;
                    // 广州银行
                    case '21':
                        break;
                    // 中国银行
                    case '22':
                        $bankId = '3026';
                        break;
                }
                $postData = array();
                $postData['merchno'] = $cards[$card_id]['mer_no'];
                $postData['amount'] = $deposit_amount;
                $postData['traceno'] = $shop_order_num;
                $postData['channel'] = "2";
                $postData['bankCode'] = $bankId;
                $postData['settleType'] = "2";
                $postData['notifyUrl'] = $callbackurl;
                $postData['returnUrl'] = $returnurl;

                $temp = '';
                ksort($postData);
                foreach ($postData as $x => $x_value) {
                    if ($x_value != null) {
                        $temp = $temp . $x . "=" . iconv('UTF-8', 'GBK//IGNORE', $x_value) . "&";
                    }
                }
                $md5 = md5($temp . $cards[$card_id]['mer_key']);
                $postData['signature'] = $md5;

                $postFields = array(
                    'url' => $apiUrl,
                    'sign' => $postData['signature'],
                    'merchno' => $postData['merchno'],
                    'amount' => $postData['amount'],
                    'traceno' => $postData['traceno'],
                    'channel' => $postData['channel'],
                    'bankCode' => $postData['bankCode'],
                    'settleType' => $postData['settleType'],
                    'notifyUrl' => $postData['notifyUrl'],
                    'returnUrl' => $postData['returnUrl']
                );


                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


                $data = array(
                    'order_number' => $postData['traceno'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    self::$view->setVar('postFields', $postFields);
                    self::$view->render('pay_ala_wy');
                } else {
                    log2file('alaPay.log', $postFields);
                    die('生成订单失败');
                }

                die();
            }

            $postData = array();
            $postData['order_no'] = $shop_order_num;//8-20位数字或字母，不允许特殊字符。
            $postData['amount'] = strval($deposit_amount * 100);//订单总金额（分为单位）整型
            $postData['subject'] = "lucky";
            $postData['mer_id'] = explode("＿", $cards[$card_id]["mer_no"])[0];
            $postData['channel'] = $service_type;
            $postData['notify_url'] = $callbackurl;
            $appid = @explode("＿", $cards[$card_id]["mer_no"])[1];
            $reqParams = $this->formatRequestParams('charge.create', $postData, $appid, $cards[$card_id]["mer_key"]);
            $resp = $this->execute($apiUrl, $reqParams);
            $response = json_decode($resp, true);
            //dd($response);
            if (@$response['data']['channel'] == "alipay_qr") {
                $codeurl = @$response['data']['credential']['alipay_qr']['qr_code'];
            }else{
                $codeurl = @$response['data']['credential']['wx_qr']['code_url'];
            }
            if ($response != null && $response['code'] == '0') {
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $postData['order_no'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );


                if (pay::addItem($data)) {

                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        self::$view->setVar('qrcode_url', $response['barCode']);
                        self::$view->render('pay_alawap');
                        die();
                    } else {
                        header("location:" . '../pay/qrcode.php?code=' . $codeurl . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $postData['amount']/100 . "&cdn=" . parent::$PublicImgCdn);
                        die();
                    }
                }
            } else {
                if ($response == null) {
                    echo '生成订单失败';
                } else {
                    log2file('qbjhPay.log', $postData);
                    log2file('qbjhPay.log', $response);

                    if (isset($response['message'])) {
                        echo $response['message'];
                    }
                }
            }
        } else {
            die();
        }
    }


    public function formatRequestParams($method, $params, $app_id, $app_secret) {
        // 组装系统参数
        $params["app_id"] = $app_id;
        $params["method"] = $method;
        $params["timestamp"] = date("Y-m-d H:i:s");

        $sign_type = "md5";

        // 计算签名
        ksort($params);

        $stringToBeSigned = "";

        foreach ($params as $k => $v)
        {
            if(is_string($v) && strlen($v) > 0)
            {
                $stringToBeSigned .= "$k=$v&";
            }
        }
        unset($k, $v);

        $stringToBeSigned = substr($stringToBeSigned, 0, -1);
        $stringToBeSigned .= $app_secret;

        $sign = strtoupper(md5($stringToBeSigned));
        $params["sign_type"] = $sign_type;
        $params["sign"] = $sign;

        return $params;
    }

    public function execute($url, $params) {
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_FAILONERROR, false);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_POST, true);

        if (is_array($params) && 0 < count($params))
        {
            $postBodyString = "";
            foreach ($params as $k => $v)
            {
                if(!is_string($v))
                    continue ;

                $postBodyString .= "$k=" . urlencode($v) . "&";
            }
            unset($k, $v);
            curl_setopt($ch, CURLOPT_POST, true);
            $header = array("content-type: application/x-www-form-urlencoded; charset=UTF-8");
            curl_setopt($ch,CURLOPT_HTTPHEADER,$header);
            curl_setopt($ch, CURLOPT_POSTFIELDS, substr($postBodyString,0,-1));
        }

        $reponse = curl_exec($ch);
        curl_close($ch);
		dd(reponse);
        return $reponse;
    }

    public function bjhfPay()
    {

        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;


        if (time() > intval($time)) {
            die('交易超时，请刷新充值页面重新充值');
        }

        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));


        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }

        $cards = cards::getItemsById(array($card_id));


        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');


            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];


            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }


            $service_type = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['bjhfpay_api'];

            if ($cards[$card_id]["netway"] == "WX") {
                $service_type = "0";
            } else if ($cards[$card_id]['netway'] == "WX_WAP") {
                $service_type = "2";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $service_type = "4";
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $service_type = "3";
            } else if ($cards[$card_id]['netway'] == "KJ") {
                $service_type = "6";
            } else if ($cards[$card_id]['netway'] === 'WY') {
                $service_type = "5";
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bankId = '10001';
                        break;
                    // 农业银行
                    case '2':
                        $bankId = '10003';
                        break;
                    // 建设银行
                    case '3':
                        $bankId = '10004';
                        break;
                    // 招商银行
                    case '4':
                        $bankId = '10002';
                        break;
                    // 交通银行
                    case '5':
                        $bankId = '10005';
                        break;
                    // 中信银行
                    case '6':
                        $bankId = '10010';
                        break;
                    // 邮政储蓄
                    case '7':
                        $bankId = '10012';
                        break;
                    // 中国光大银行
                    case '8':
                        $bankId = '10013';
                        break;
                    // 民生银行
                    case '9':
                        $bankId = '10007';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bankId = '3004';
                        break;
                    // 兴业银行
                    case '11':
                        $bankId = '10006';
                        break;
                    // 广发银行
                    case '12':
                        $bankId = '10011';
                        break;
                    // 平安银行
                    case '13':
                        $bankId = '10009';
                        break;
                    // 华夏银行
                    /*case '15':
                        $bankId = 'HXB';
                        break;*/
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        break;
                    // 浙商银行
                    case '19':
                        break;
                    // 北京银行
                    case '20':
                        $bankId = '3032';
                        break;
                    // 广州银行
                    case '21':
                        break;
                    // 中国银行
                    case '22':
                        $bankId = '10008';
                        break;
                }
                $postData = array();
                $postData['body'] = "lucky";
                $postData['total_fee'] = strval($deposit_amount * 100);
                $postData['product_id'] = $shop_order_num;
                $postData['goods_tag'] = "29937";
                $postData['op_user_id'] = $cards[$card_id]["mer_no"];
                $postData['nonce_str'] = strval(rand(10000000, 99999999));
                $postData['spbill_create_ip'] = $this->getClientIp();
                $postData['notify_url'] = $callbackurl;
                $postData['front_notify_url'] = $returnurl;
                $postData['pay_type'] = $service_type;
                $postData['bank_id'] = $bankId;
                $postData['sign'] = strtoupper(sha1("bank_id={$postData['bank_id']}&body={$postData['body']}&front_notify_url={$postData['front_notify_url']}&goods_tag={$postData['goods_tag']}&nonce_str={$postData['nonce_str']}&notify_url={$postData['notify_url']}&op_user_id={$postData['op_user_id']}&pay_type={$postData['pay_type']}&product_id={$postData['product_id']}&spbill_create_ip={$postData['spbill_create_ip']}&total_fee={$postData['total_fee']}{$cards[$card_id]["mer_key"]}"));
                $datajson = json_encode($postData);
                $info = array();
                $curldata = $this->curlPostData($apiUrl, $datajson, $info);
                $response = json_decode($curldata, true);
                if (!isset($response['code_url'])) {
                    showMSG("返回值为空");
                }
                $locationurl = $response['code_url'];
                if ($response != null && $response['code_url'] != '') {
                    $requestURI = $this->request->getPost('requestURI', 'trim');
                    $bank_id = $this->request->getPost('bank_id', 'trim');
                    $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                    $data = array(
                        'order_number' => $postData['product_id'],
                        'user_id' => $user_id,
                        'username' => $username,
                        'amount' => $deposit_amount,
                        'pay_time' => date('Y-m-d H:i:s'),
                        'source' => $_SERVER['HTTP_HOST'],
                        'requestURI' => $requestURI,
                        'card_id' => $card_id,
                        'bank_id' => $bank_id,
                    );


                    if (pay::addItem($data)) {
                        header("location:$locationurl");
                    } else {
                        log2file('bjhfPay.log', $postData);
                        die('生成订单失败');

                    }
                }
            }

            $postData = array();
            $postData['body'] = "lucky";
            $postData['total_fee'] = strval($deposit_amount * 100);
            $postData['product_id'] = $shop_order_num;
            $postData['goods_tag'] = "29937";
            $postData['op_user_id'] = $cards[$card_id]["mer_no"];
            $postData['nonce_str'] = strval(rand(10000000, 99999999));
            $postData['spbill_create_ip'] = $this->getClientIp();
            $postData['notify_url'] = $callbackurl;
            $postData['front_notify_url'] = $returnurl;
            $postData['pay_type'] = $service_type;
            $postData['sign'] = strtoupper(sha1("body={$postData['body']}&front_notify_url={$postData['front_notify_url']}&goods_tag={$postData['goods_tag']}&nonce_str={$postData['nonce_str']}&notify_url={$postData['notify_url']}&op_user_id={$postData['op_user_id']}&pay_type={$postData['pay_type']}&product_id={$postData['product_id']}&spbill_create_ip={$postData['spbill_create_ip']}&total_fee={$postData['total_fee']}{$cards[$card_id]["mer_key"]}"));
            $datajson = json_encode($postData);
            $info = array();
            $curldata = $this->curlPostData($apiUrl, $datajson, $info);
            $response = json_decode($curldata,true);
            if(!isset($response['code_url'])){
                showMSG("返回值为空");
            }
            if ($response != null && $response['code_url'] != '') {
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $postData['product_id'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );


                if (pay::addItem($data)) {

                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        header("location:".$response['code_url']);
                        die();
                    }elseif ($cards[$card_id]['netway'] == "KJ"){
                        header("location:".$response['code_url']);
                        die();
                    } else {
                        header("location:" . '../pay/qrcode.php?code=' . $response['code_url'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $postData['total_fee']/100 . "&cdn=" . parent::$PublicImgCdn);
                        die();
                    }
                }
            } else {
                if ($response == null) {
                    echo '生成订单失败';
                } else {
                    log2file('bjhfPay.log', $postData);
                    log2file('bjhfPay.log', $response);

                    if (isset($response['info'])) {
                        echo $response['info'];
                    }
                }
            }
        } else {
            die();
        }
    }

    public function wzhPay()
    {

        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;


        if (time() > intval($time)) {
            die('交易超时，请刷新充值页面重新充值');
        }

        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));


        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }

        $cards = cards::getItemsById(array($card_id));


        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');


            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');


            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];


            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }


            $service_type = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['wzhpay_api'];

            if ($cards[$card_id]["netway"] == "WX") {
                $service_type = "1";
                $apiqrcodeUrl = $GLOBALS['cfg']['pay_url']['wzhpay_wx_api'];
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $service_type = "2";
                $apiqrcodeUrl = $GLOBALS['cfg']['pay_url']['wzhpay_zfb_api'];
            } else if ($cards[$card_id]['netway'] === 'WY') {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bankId = '3002';
                        break;
                    // 农业银行
                    case '2':
                        $bankId = '3005';
                        break;
                    // 建设银行
                    case '3':
                        $bankId = '3003';
                        break;
                    // 招商银行
                    case '4':
                        $bankId = '3001';
                        break;
                    // 交通银行
                    case '5':
                        $bankId = '3020';
                        break;
                    // 中信银行
                    case '6':
                        $bankId = '3039';
                        break;
                    // 邮政储蓄
                    /*case '7':
                        $bankId = 'PSBC';
                        break;*/
                    // 中国光大银行
                    case '8':
                        $bankId = '3022';
                        break;
                    // 民生银行
                    case '9':
                        $bankId = '3006';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bankId = '3004';
                        break;
                    // 兴业银行
                    case '11':
                        $bankId = '3009';
                        break;
                    // 广发银行
                    case '12':
                        $bankId = '3036';
                        break;
                    // 平安银行
                    case '13':
                        $bankId = '3035';
                        break;
                    // 华夏银行
                    /*case '15':
                        $bankId = 'HXB';
                        break;*/
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        break;
                    // 浙商银行
                    case '19':
                        break;
                    // 北京银行
                    case '20':
                        $bankId = '3032';
                        break;
                    // 广州银行
                    case '21':
                        break;
                    // 中国银行
                    case '22':
                        $bankId = '3026';
                        break;
                }
                $postData = array();
                $postData['merchno'] = $cards[$card_id]['mer_no'];
                $postData['amount'] = $deposit_amount;
                $postData['traceno'] = $shop_order_num;
                $postData['channel'] = "2";
                $postData['bankCode'] = $bankId;
                $postData['settleType'] = "2";
                $postData['notifyUrl'] = $callbackurl;
                $postData['returnUrl'] = $returnurl;

                $temp = '';
                ksort($postData);
                foreach ($postData as $x => $x_value) {
                    if ($x_value != null) {
                        $temp = $temp . $x . "=" . iconv('UTF-8', 'GBK//IGNORE', $x_value) . "&";
                    }
                }
                $md5 = md5($temp . $cards[$card_id]['mer_key']);
                $postData['signature'] = $md5;

                $postFields = array(
                    'url' => $apiUrl,
                    'sign' => $postData['signature'],
                    'merchno' => $postData['merchno'],
                    'amount' => $postData['amount'],
                    'traceno' => $postData['traceno'],
                    'channel' => $postData['channel'],
                    'bankCode' => $postData['bankCode'],
                    'settleType' => $postData['settleType'],
                    'notifyUrl' => $postData['notifyUrl'],
                    'returnUrl' => $postData['returnUrl']
                );


                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


                $data = array(
                    'order_number' => $postData['traceno'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    self::$view->setVar('postFields', $postFields);
                    self::$view->render('pay_ala_wy');
                } else {
                    log2file('alaPay.log', $postFields);
                    die('生成订单失败');
                }

                die();
            }

            $postData = array();
            $postData['type'] = "PayData";
            $postData['amount'] = $deposit_amount;
            $postData['userid'] = $shop_order_num;
            $postData['Paytype'] = intval($service_type);
            $postData['callbackurl'] = $callbackurl;

            //$info = array();
            $header = array("identifying:" . $cards[$card_id]['mer_key']);
            //$curldata = $this->wzhcurlPostData($apiUrl, $postData, $info,$header);
            $curldata = $this->tocurl($apiUrl, $header, $postData);
            //dd($curldata);
            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            $data = array(
                'order_number' => $postData['userid'],
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $postData['amount'],
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            $qrcode_url = $apiqrcodeUrl . "?Code=" . $curldata . "&SuccessUrl=".urlencode($returnurl);


            if (pay::addItem($data)) {

                if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                    self::$view->setVar('qrcode_url', $curldata);
                    self::$view->render('pay_alawap');
                    die();
                } else {
                    self::$view->setVar('qrcode_url', $qrcode_url);
                    self::$view->render('pay_wzh');
                    die();
                }
            } else {
                die('添加订单失败');

            }
        }
    }


    public function tocurl($url, $header, $content){
        $ch = curl_init();
        if(substr($url,0,5)=='https'){
            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false); // 跳过证书检查
            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, true);  // 从证书中检查SSL加密算法是否存在
        }
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_HTTPHEADER, $header);
        curl_setopt($ch, CURLOPT_POST, true);
        curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($content));
        $response = curl_exec($ch);
        if($error=curl_error($ch)){
            die($error);
        }
        curl_close($ch);
        return $response;
    }

    public function ruiyinPay()
    {

        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;


        if (time() > intval($time)) {
            die('交易超时，请刷新充值页面重新充值');
        }

        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));


        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }

        $cards = cards::getItemsById(array($card_id));


        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');


            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');


            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];


            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }


            $service_type = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['ruiyinpay_api'];

            if ($cards[$card_id]["netway"] == "WX") {
                $service_type = "1004";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $service_type = "992";
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $service_type = "2098";
            } else if ($cards[$card_id]['netway'] == "WX_WAP") {
                $service_type = "2099";
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $service_type = "993";
            } else if ($cards[$card_id]['netway'] === 'WY') {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bankId = '967';
                        break;
                    // 农业银行
                    case '2':
                        $bankId = '964';
                        break;
                    // 建设银行
                    case '3':
                        $bankId = '965';
                        break;
                    // 招商银行
                    case '4':
                        $bankId = '970';
                        break;
                    // 交通银行
                    case '5':
                        $bankId = '981';
                        break;
                    // 中信银行
                    case '6':
                        $bankId = '962';
                        break;
                    // 邮政储蓄
                    case '7':
                        $bankId = '971';
                        break;
                    // 中国光大银行
                    case '8':
                        $bankId = '986';
                        break;
                    // 民生银行
                    case '9':
                        $bankId = '980';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bankId = '977';
                        break;
                    // 兴业银行
                    case '11':
                        $bankId = '972';
                        break;
                    // 广发银行
                    case '12':
                        $bankId = '985';
                        break;
                    // 平安银行
                    case '13':
                        $bankId = '978';
                        break;
                    // 华夏银行
                    case '15':
                        $bankId = '982';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        $bankId = '988';
                        break;
                    // 浙商银行
                    case '19':
                        $bankId = '968';
                        break;
                    // 北京银行
                    case '20':
                        $bankId = '989';
                        break;
                    // 广州银行
                    case '21':
                        break;
                    // 中国银行
                    case '22':
                        $bankId = '963';
                        break;
                }
                $postData = array();
                $postData['parter'] = $cards[$card_id]['mer_no'];
                $postData['type'] = @$bankId;
                $postData['value'] = $deposit_amount;
                $postData['orderid'] = $shop_order_num;
                $postData['callbackurl'] = $callbackurl;

                $postData['sign'] = md5("parter={$postData['parter']}&type={$postData['type']}&value={$postData['value']}&orderid ={$postData['orderid']}&callbackurl={$postData['callbackurl']}{$cards[$card_id]['mer_key']}");
                $postUrl = $apiUrl . "?parter=" . $postData['parter'];
                $postUrl .= "&type=" . $postData['type'];
                $postUrl .= "&value=" . $postData['value'];
                $postUrl .= "&orderid=" . $postData['orderid'];
                $postUrl .= "&callbackurl=" . $postData['callbackurl'];
                $postUrl .= "&sign=" . $postData['sign'];


                $postFields = array(
                    'url' => $postUrl,
                );

                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


                $data = array(
                    'order_number' => $postData['orderid'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    self::$view->setVar('postFields', $postFields);
                    self::$view->render('pay_ruiyin_wy');
                } else {
                    log2file('ruiyinPay.log', $postFields);
                    die('生成订单失败');
                }

                die();
            }

            $postData = array();
            $postData['parter'] = $cards[$card_id]['mer_no'];
            $postData['type'] = $service_type;
            $postData['value'] = $deposit_amount;
            $postData['orderid'] = $shop_order_num;
            $postData['callbackurl'] = $callbackurl;
            $a = "parter={$postData['parter']}&type={$postData['type']}&value={$postData['value']}&orderid ={$postData['orderid']}&callbackurl={$postData['callbackurl']}{$cards[$card_id]['mer_key']}";
            dd($a);
            $postData['sign'] = md5("parter={$postData['parter']}&type={$postData['type']}&value={$postData['value']}&orderid ={$postData['orderid']}&callbackurl={$postData['callbackurl']}{$cards[$card_id]['mer_key']}");
            $postUrl = $apiUrl . "?parter=" . $postData['parter'];
            $postUrl .= "&type=" . $postData['type'];
            $postUrl .= "&value=" . $postData['value'];
            $postUrl .= "&orderid=" . $postData['orderid'];
            $postUrl .= "&callbackurl=" . $postData['callbackurl'];
            $postUrl .= "&sign=" . $postData['sign'];


            $postFields = array(
                'url' => $postUrl,
            );

            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            $data = array(
                'order_number' => $postData['orderid'],
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );
            if (pay::addItem($data)) {
                if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                    self::$view->setVar('qrcode_url', $postFields);
                    self::$view->render('pay_alawap');
                    die();
                }else{self::$view->setVar('postFields', $postFields);
                   self::$view->render('pay_ruiyin_wy');
                    die();}
            } else {
                log2file('ruiyinPay.log', $postFields);
                die('生成订单失败');
            }
        }
    }

    public function zf32Pay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;


        /*if (time() > intval($time)) {
            die('交易超时，请刷新充值页面重新充值');
        }*/

        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));


        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }

        $cards = cards::getItemsById(array($card_id));


        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');


            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');
            if($deposit_amount > '3000'){
                showMSG("充值金额不能大于3000元");
            }


            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];


            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }


            $service_type = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['32pay_api'];

            if ($cards[$card_id]["netway"] == "QQ") {
                $service_type = "89";
            } else if ($cards[$card_id]['netway'] == "QQ_WAP") {
                $service_type = "92";
            } else if ($cards[$card_id]['netway'] == "WX") {
                $service_type = "21";
            } else if ($cards[$card_id]['netway'] == "WX_WAP") {
                $service_type = "33";
            } else if ($cards[$card_id]['netway'] === 'WY') {
                $service_type = "1";
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bankId = '10001';
                        break;
                    // 农业银行
                    case '2':
                        $bankId = '10002';
                        break;
                    // 建设银行
                    case '3':
                        $bankId = '10005';
                        break;
                    // 招商银行
                    case '4':
                        $bankId = '10003';
                        break;
                    // 交通银行
                    case '5':
                        $bankId = '10008';
                        break;
                    // 中信银行
                    case '6':
                        $bankId = '10007';
                        break;
                    // 邮政储蓄
                    case '7':
                        $bankId = '10012';
                        break;
                    // 中国光大银行
                    case '8':
                        $bankId = '10010';
                        break;
                    // 民生银行
                    case '9':
                        $bankId = '10006';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bankId = '10015';
                        break;
                    // 兴业银行
                    case '11':
                        $bankId = '10009';
                        break;
                    // 广发银行
                    case '12':
                        $bankId = '10016';
                        break;
                    // 平安银行
                    case '13':
                        $bankId = '10014';
                        break;
                    // 华夏银行
                    case '15':
                        $bankId = '10025';
                        break;
                    // 东莞银行
                    /*case '16':
                        break;*/
                    // 渤海银行
                    case '17':
                        $bankId = '10017';
                        break;
                    // 浙商银行
                    case '19':
                        $bankId = '10022';
                        break;
                    // 北京银行
                    case '20':
                        $bankId = '10013';
                        break;
                    // 广州银行
                    /*case '21':
                        break;*/
                    // 中国银行
                    case '22':
                        $bankId = '10004';
                        break;

                }
                $postData = array();
                $postData['P_UserId'] = $cards[$card_id]['mer_no'];
                $postData['P_ServiceName'] = "GetBankGateway";
                $postData['P_TimesTamp'] = "";

                $str = $postData['P_UserId'].'|'.$postData['P_ServiceName'].'|'.$postData['P_TimesTamp'].'|'.$cards[$card_id]['mer_key'];
                $postData['P_PostKey'] = md5($str);

                $info = array();

                $url = $apiUrl."?P_UserId=".$postData['P_UserId'];
                $url.= "&P_ServiceName=".$postData['P_ServiceName'];
                $url.= "&P_TimesTamp=".$postData['P_TimesTamp'];
                $url.= "&P_PostKey=".$postData['P_PostKey'];

                $jsonResponse = $this->curlGetData($url, $info);
                $jsonResponse = json_decode($jsonResponse,true);
                //dd($jsonResponse['P_SubmitUrl']);
                if(!isset($jsonResponse['P_SubmitUrl'])){
                    showMSG("返回值为空!");
                }

                $postData['P_UserId'] = $cards[$card_id]['mer_no'];
                $postData['P_OrderId'] = $shop_order_num;
                $postData['P_CardId'] = "";
                $postData['P_CardPass'] = "";
                $postData['P_FaceValue'] = $deposit_amount;
                $postData['P_ChannelId'] = $service_type;
                $postData['P_Result_URL'] = $callbackurl;//不参与签名
                $postData['P_Price'] = "1.01";
                $postData['P_Quantity'] = "1";
                $postData['P_Description'] = @$bankId;

                $str = $postData['P_UserId'].'|'.$postData['P_OrderId'].'|'.$postData['P_CardId'].'|'.$postData['P_CardPass'].'|'.$postData['P_FaceValue'].'|'.$postData['P_ChannelId'].'|'.$cards[$card_id]['mer_key'];
                //dd($str);
                $postData['P_PostKey'] = md5($str);

                $url = $jsonResponse['P_SubmitUrl']."?P_UserId=".$postData['P_UserId'];
                $url.= "&P_OrderId=".$postData['P_OrderId'];
                $url.= "&P_CardId=".$postData['P_CardId'];
                $url.= "&P_CardPass=".$postData['P_CardPass'];
                $url.= "&P_FaceValue=".$postData['P_FaceValue'];
                $url.= "&P_ChannelId=".$postData['P_ChannelId'];
                $url.= "&P_Result_URL=".$postData['P_Result_URL'];
                $url.= "&P_Price=".$postData['P_Price'];
                $url.= "&P_Quantity=".$postData['P_Quantity'];
                $url.= "&P_Description=".$postData['P_Description'];
                $url.= "&P_PostKey=".$postData['P_PostKey'];
                //dd($url);

                /*$postFields = array(
                    'url' => $url,
                );*/


                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


                $data = array(
                    'order_number' => $postData['P_OrderId'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    //self::$view->setVar('postFields', $postFields);
                    //self::$view->render('pay_zf32');
                    header("location:$url");
                } else {
                    log2file('zf32Pay.log', $data);
                    die('生成订单失败');
                }

                die();

            }
            $postData = array();
            $postData['P_UserId'] = $cards[$card_id]['mer_no'];
            $postData['P_ServiceName'] = "GetBankGateway";
            $postData['P_TimesTamp'] = "";

            $str = $postData['P_UserId'].'|'.$postData['P_ServiceName'].'|'.$postData['P_TimesTamp'].'|'.$cards[$card_id]['mer_key'];
            $postData['P_PostKey'] = md5($str);

            $info = array();

            $url = $apiUrl."?P_UserId=".$postData['P_UserId'];
            $url.= "&P_ServiceName=".$postData['P_ServiceName'];
            $url.= "&P_TimesTamp=".$postData['P_TimesTamp'];
            $url.= "&P_PostKey=".$postData['P_PostKey'];

            $jsonResponse = $this->curlGetData($url, $info);
            $jsonResponse = json_decode($jsonResponse,true);
            //dd($jsonResponse['P_SubmitUrl']);
            if(!isset($jsonResponse['P_SubmitUrl'])){
                showMSG("返回值为空!");
            }

            $postData['P_UserId'] = $cards[$card_id]['mer_no'];
            $postData['P_OrderId'] = $shop_order_num;
            $postData['P_CardId'] = "";
            $postData['P_CardPass'] = "";
            $postData['P_FaceValue'] = $deposit_amount;
            $postData['P_ChannelId'] = $service_type;
            $postData['P_Result_URL'] = $callbackurl;//不参与签名
            $postData['P_Price'] = "1.01";
            $postData['P_Quantity'] = "1";
            //$postData['P_Description'] = @$bankId;

            $str = $postData['P_UserId'].'|'.$postData['P_OrderId'].'|'.$postData['P_CardId'].'|'.$postData['P_CardPass'].'|'.$postData['P_FaceValue'].'|'.$postData['P_ChannelId'].'|'.$cards[$card_id]['mer_key'];
            //dd($str);
            $postData['P_PostKey'] = md5($str);

            $url = $jsonResponse['P_SubmitUrl']."?P_UserId=".$postData['P_UserId'];
            $url.= "&P_OrderId=".$postData['P_OrderId'];
            $url.= "&P_CardId=".$postData['P_CardId'];
            $url.= "&P_CardPass=".$postData['P_CardPass'];
            $url.= "&P_FaceValue=".$postData['P_FaceValue'];
            $url.= "&P_ChannelId=".$postData['P_ChannelId'];
            $url.= "&P_Result_URL=".$postData['P_Result_URL'];
            $url.= "&P_Price=".$postData['P_Price'];
            $url.= "&P_Quantity=".$postData['P_Quantity'];
            $url.= "&P_PostKey=".$postData['P_PostKey'];

            /*$postFields = array(
                'url' => $url,
            );*/


            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            $data = array(
                'order_number' => $postData['P_OrderId'],
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (pay::addItem($data)) {
                //self::$view->setVar('postFields', $postFields);
                //self::$view->render('pay_zf32');
                header("location:$url");
            } else {
                log2file('zf32Pay.log', $data);
                die('生成订单失败');
            }

            die();



        }
    }

    public function caihonPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;


        /*if (time() > intval($time)) {
            die('交易超时，请刷新充值页面重新充值');
        }*/

        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));


        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }

        $cards = cards::getItemsById(array($card_id));


        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');


            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');
            if($deposit_amount > '3000'){
                showMSG("充值金额不能大于3000元");
            }
            if($deposit_amount < '2'){
                showMSG("充值金额不能小于2元");
            }

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];


            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }


            $service_type = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['caihon_api'];

            if ($cards[$card_id]["netway"] == "QQ") {
                $service_type = "1008";
            } else if ($cards[$card_id]['netway'] == "WX") {
                $service_type = "1004";
            } else if ($cards[$card_id]['netway'] === 'WY') {
                $service_type = "1";
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bankId = '10001';
                        break;
                    // 农业银行
                    case '2':
                        $bankId = '10002';
                        break;
                    // 建设银行
                    case '3':
                        $bankId = '10005';
                        break;
                    // 招商银行
                    case '4':
                        $bankId = '10003';
                        break;
                    // 交通银行
                    case '5':
                        $bankId = '10008';
                        break;
                    // 中信银行
                    case '6':
                        $bankId = '10007';
                        break;
                    // 邮政储蓄
                    case '7':
                        $bankId = '10012';
                        break;
                    // 中国光大银行
                    case '8':
                        $bankId = '10010';
                        break;
                    // 民生银行
                    case '9':
                        $bankId = '10006';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bankId = '10015';
                        break;
                    // 兴业银行
                    case '11':
                        $bankId = '10009';
                        break;
                    // 广发银行
                    case '12':
                        $bankId = '10016';
                        break;
                    // 平安银行
                    case '13':
                        $bankId = '10014';
                        break;
                    // 华夏银行
                    case '15':
                        $bankId = '10025';
                        break;
                    // 东莞银行
                    /*case '16':
                        break;*/
                    // 渤海银行
                    case '17':
                        $bankId = '10017';
                        break;
                    // 浙商银行
                    case '19':
                        $bankId = '10022';
                        break;
                    // 北京银行
                    case '20':
                        $bankId = '10013';
                        break;
                    // 广州银行
                    /*case '21':
                        break;*/
                    // 中国银行
                    case '22':
                        $bankId = '10004';
                        break;

                }
                $postData = array();
                $postData['P_UserId'] = $cards[$card_id]['mer_no'];
                $postData['P_ServiceName'] = "GetBankGateway";
                $postData['P_TimesTamp'] = "";

                $str = $postData['P_UserId'].'|'.$postData['P_ServiceName'].'|'.$postData['P_TimesTamp'].'|'.$cards[$card_id]['mer_key'];
                $postData['P_PostKey'] = md5($str);

                $info = array();

                $url = $apiUrl."?P_UserId=".$postData['P_UserId'];
                $url.= "&P_ServiceName=".$postData['P_ServiceName'];
                $url.= "&P_TimesTamp=".$postData['P_TimesTamp'];
                $url.= "&P_PostKey=".$postData['P_PostKey'];

                $jsonResponse = $this->curlGetData($url, $info);
                $jsonResponse = json_decode($jsonResponse,true);
                //dd($jsonResponse['P_SubmitUrl']);
                if(!isset($jsonResponse['P_SubmitUrl'])){
                    showMSG("返回值为空!");
                }

                $postData['P_UserId'] = $cards[$card_id]['mer_no'];
                $postData['P_OrderId'] = $shop_order_num;
                $postData['P_CardId'] = "";
                $postData['P_CardPass'] = "";
                $postData['P_FaceValue'] = $deposit_amount;
                $postData['P_ChannelId'] = $service_type;
                $postData['P_Result_URL'] = $callbackurl;//不参与签名
                $postData['P_Price'] = "1.01";
                $postData['P_Quantity'] = "1";
                $postData['P_Description'] = @$bankId;

                $str = $postData['P_UserId'].'|'.$postData['P_OrderId'].'|'.$postData['P_CardId'].'|'.$postData['P_CardPass'].'|'.$postData['P_FaceValue'].'|'.$postData['P_ChannelId'].'|'.$cards[$card_id]['mer_key'];
                //dd($str);
                $postData['P_PostKey'] = md5($str);

                $url = $jsonResponse['P_SubmitUrl']."?P_UserId=".$postData['P_UserId'];
                $url.= "&P_OrderId=".$postData['P_OrderId'];
                $url.= "&P_CardId=".$postData['P_CardId'];
                $url.= "&P_CardPass=".$postData['P_CardPass'];
                $url.= "&P_FaceValue=".$postData['P_FaceValue'];
                $url.= "&P_ChannelId=".$postData['P_ChannelId'];
                $url.= "&P_Result_URL=".$postData['P_Result_URL'];
                $url.= "&P_Price=".$postData['P_Price'];
                $url.= "&P_Quantity=".$postData['P_Quantity'];
                $url.= "&P_Description=".$postData['P_Description'];
                $url.= "&P_PostKey=".$postData['P_PostKey'];
                //dd($url);

                /*$postFields = array(
                    'url' => $url,
                );*/


                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


                $data = array(
                    'order_number' => $postData['P_OrderId'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    //self::$view->setVar('postFields', $postFields);
                    //self::$view->render('pay_zf32');
                    header("location:$url");
                } else {
                    log2file('zf32Pay.log', $data);
                    die('生成订单失败');
                }

                die();

            }
            $postData = array();
            $postData['parter'] = $cards[$card_id]['mer_no'];
            $postData['type'] = $service_type;
            $postData['value'] = $deposit_amount;
            $postData['orderid'] = $shop_order_num;
            $postData['callbackurl'] = $callbackurl;

            $url = "parter=".$postData['parter'] ."&type=". $postData['type'] ."&value=". $postData['value']. "&orderid=". $postData['orderid'] ."&callbackurl=". $postData['callbackurl'];
		    $sign = md5($url.$cards[$card_id]['mer_key']);
		    $url = $apiUrl."?".$url."&sign=" .$sign;

            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            $data = array(
                'order_number' => $postData['orderid'],
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (pay::addItem($data)) {
                //self::$view->setVar('postFields', $postFields);
                //self::$view->render('pay_zf32');
                header("location:$url");
            } else {
                log2file('caihonPay.log', $data);
                die('生成订单失败');
            }

            die();



        }
    }

    public function qianenPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            if ($card_id == '') {
                die('系统出错！(错误码：6003)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');
            if($deposit_amount > '10000'){
                showMSG("充值金额不能大于10000元");
            }
            if($deposit_amount < '80'){
                showMSG("充值金额不能小于80元");
            }

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $service_type = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['qianen_api'];

            if ($cards[$card_id]["netway"] == "QQ") {
                $service_type = "2";
            } else if ($cards[$card_id]['netway'] == "WX") {
                $service_type = "0";
            } else if ($cards[$card_id]['netway'] === 'ZFB') {
                $service_type = "1";
            }

            $postData = array();
            $postData['orgId'] = @explode("_",$cards[$card_id]["mer_no"])[0];
            $postData['source'] = $service_type;
            $postData['settleAmt'] = "1";
            $postData['subject'] = "lucky";
            $postData['account'] = @explode("_",$cards[$card_id]["mer_no"])[1];
            $postData['amount'] = $deposit_amount*100;
            $postData['notifyUrl'] = $callbackurl;
            $postData['tranTp'] = "0";
            $postData['orgOrderNo'] = $shop_order_num;


            $data = @$this->qianensign($postData);

            $postData['signature'] = @$this->qianenrsasign($data,$this->formatRSAKey($cards[$card_id]['mer_key'], "private"));

            $data9 = json_encode($postData);
            $response = $this->qianencurlpost($apiUrl,$data9);
            $response = json_decode($response, true);

            if ($response != null && isset($response['respCode']) && $response['respCode'] == '200') {
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $postData['orgOrderNo'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        header("location:" . $response['payUrl']);
                        die();
                    } else {
                        header("location:" . '../pay/qrcode.php?code=' . $response['qrcode'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $postData['amount']/100 ."&cdn=" . parent::$PublicImgCdn);
                        die();
                    }
                } else {
                    log2file('qianenPay.log', $postData);
                    log2file('qianenPay.log', $response);
                    echo '生成订单失败';
                }

                die();
            }  else {
                log2file('qianenPay.log', $postData);

                if ($response != null) {
                    log2file('qianenPay.log', $response);

                    if (isset($response['respMsg'])) {
                        echo $response['respMsg'];
                    }
                } else {
                    echo '生成订单失败';
                }
            }
        } else {
            die();
        }
    }

    public function qianenrsasign($data,$priKey) {

        $res = openssl_get_privatekey($priKey);
        //调用openssl内置签名方法，生成签名$sign
        openssl_sign($data, $sign, $res,OPENSSL_ALGO_MD5);
        //释放资源
        openssl_free_key($res);
        //base64编码
        $sign = base64_encode($sign);
        return $sign;
    }

    public function qianensign($rarray)
    {
        $signPars = "";
        ksort($rarray);
        foreach ($rarray as $k => $v) {
            if ("sign" != $k && "" != $v) {
                $signPars .= $k . "=" . $v . "&";
            }
        }
        $signPars = trim(substr($signPars,0,-1));
        return $signPars;
    }

    public function qianencurlpost($url, $post_data) {

        $ch = curl_init();
        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_POSTFIELDS, $post_data);
        curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                'Content-Type: application/json; charset=utf-8',
                'Content-Length: ' . strlen($post_data))
        );
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

       $results = curl_exec($ch);

       return $results;

    }

    public function baishiPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;


        /*if (time() > intval($time)) {
            die('交易超时，请刷新充值页面重新充值');
        }*/

        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));


        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }

        $cards = cards::getItemsById(array($card_id));


        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');


            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');
            if($deposit_amount > '5000'){
                showMSG("充值金额不能大于5000元");
            }

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];


            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }


            $service_type = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['baishi_api'];

            if ($cards[$card_id]["netway"] == "WX") {
                $service_type = "0203";
            } else if ($cards[$card_id]['netway'] == "WX_WAP") {
                $service_type = "0209";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $service_type = "0204";
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $service_type = "0210";
            } else if ($cards[$card_id]['netway'] === 'WY') {
                $service_type = "1";
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bankId = '10001';
                        break;
                    // 农业银行
                    case '2':
                        $bankId = '10002';
                        break;
                    // 建设银行
                    case '3':
                        $bankId = '10005';
                        break;
                    // 招商银行
                    case '4':
                        $bankId = '10003';
                        break;
                    // 交通银行
                    case '5':
                        $bankId = '10008';
                        break;
                    // 中信银行
                    case '6':
                        $bankId = '10007';
                        break;
                    // 邮政储蓄
                    case '7':
                        $bankId = '10012';
                        break;
                    // 中国光大银行
                    case '8':
                        $bankId = '10010';
                        break;
                    // 民生银行
                    case '9':
                        $bankId = '10006';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bankId = '10015';
                        break;
                    // 兴业银行
                    case '11':
                        $bankId = '10009';
                        break;
                    // 广发银行
                    case '12':
                        $bankId = '10016';
                        break;
                    // 平安银行
                    case '13':
                        $bankId = '10014';
                        break;
                    // 华夏银行
                    case '15':
                        $bankId = '10025';
                        break;
                    // 东莞银行
                    /*case '16':
                        break;*/
                    // 渤海银行
                    case '17':
                        $bankId = '10017';
                        break;
                    // 浙商银行
                    case '19':
                        $bankId = '10022';
                        break;
                    // 北京银行
                    case '20':
                        $bankId = '10013';
                        break;
                    // 广州银行
                    /*case '21':
                        break;*/
                    // 中国银行
                    case '22':
                        $bankId = '10004';
                        break;

                }
                $postData = array();
                $postData['P_UserId'] = $cards[$card_id]['mer_no'];
                $postData['P_ServiceName'] = "GetBankGateway";
                $postData['P_TimesTamp'] = "";

                $str = $postData['P_UserId'].'|'.$postData['P_ServiceName'].'|'.$postData['P_TimesTamp'].'|'.$cards[$card_id]['mer_key'];
                $postData['P_PostKey'] = md5($str);

                $info = array();

                $url = $apiUrl."?P_UserId=".$postData['P_UserId'];
                $url.= "&P_ServiceName=".$postData['P_ServiceName'];
                $url.= "&P_TimesTamp=".$postData['P_TimesTamp'];
                $url.= "&P_PostKey=".$postData['P_PostKey'];

                $jsonResponse = $this->curlGetData($url, $info);
                $jsonResponse = json_decode($jsonResponse,true);
                //dd($jsonResponse['P_SubmitUrl']);
                if(!isset($jsonResponse['P_SubmitUrl'])){
                    showMSG("返回值为空!");
                }

                $postData['P_UserId'] = $cards[$card_id]['mer_no'];
                $postData['P_OrderId'] = $shop_order_num;
                $postData['P_CardId'] = "";
                $postData['P_CardPass'] = "";
                $postData['P_FaceValue'] = $deposit_amount;
                $postData['P_ChannelId'] = $service_type;
                $postData['P_Result_URL'] = $callbackurl;//不参与签名
                $postData['P_Price'] = "1.01";
                $postData['P_Quantity'] = "1";
                $postData['P_Description'] = @$bankId;

                $str = $postData['P_UserId'].'|'.$postData['P_OrderId'].'|'.$postData['P_CardId'].'|'.$postData['P_CardPass'].'|'.$postData['P_FaceValue'].'|'.$postData['P_ChannelId'].'|'.$cards[$card_id]['mer_key'];
                //dd($str);
                $postData['P_PostKey'] = md5($str);

                $url = $jsonResponse['P_SubmitUrl']."?P_UserId=".$postData['P_UserId'];
                $url.= "&P_OrderId=".$postData['P_OrderId'];
                $url.= "&P_CardId=".$postData['P_CardId'];
                $url.= "&P_CardPass=".$postData['P_CardPass'];
                $url.= "&P_FaceValue=".$postData['P_FaceValue'];
                $url.= "&P_ChannelId=".$postData['P_ChannelId'];
                $url.= "&P_Result_URL=".$postData['P_Result_URL'];
                $url.= "&P_Price=".$postData['P_Price'];
                $url.= "&P_Quantity=".$postData['P_Quantity'];
                $url.= "&P_Description=".$postData['P_Description'];
                $url.= "&P_PostKey=".$postData['P_PostKey'];
                //dd($url);

                /*$postFields = array(
                    'url' => $url,
                );*/


                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


                $data = array(
                    'order_number' => $postData['P_OrderId'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    //self::$view->setVar('postFields', $postFields);
                    //self::$view->render('pay_zf32');
                    header("location:$url");
                } else {
                    log2file('zf32Pay.log', $data);
                    die('生成订单失败');
                }

                die();

            }
            $parameter = array();
            $parameter['TradeType'] = "bis.pay.submit";
            $parameter['PayType'] = $service_type;
            $mernoarr = explode("|",$cards[$card_id]['mer_no']);
            $countno = count($mernoarr);
            $i = rand(0,$countno-1);
            $parameter['MerchantID'] = $mernoarr["$i"];
            $mernokey = array_search($mernoarr["$i"],$mernoarr);
            $parameter['OrderID'] = $shop_order_num;
            $parameter['Subject'] = "lucky";
            $parameter['MachineIP'] = $this->getClientIp();
            $parameter['NotifyUrl'] = $callbackurl;
            $parameter['ReturnUrl'] = $returnurl;
            $parameter['SubmitTime'] = date("Ymdhis");
            $parameter['Amt'] = $deposit_amount*100;

            $merkey = explode("|",$cards[$card_id]['mer_key']);
            $parameter = $this->bsparaFilter($parameter);
            $parameter = $this->bsargSort($parameter);
            $prestr = $this->bscreateLinkstring($parameter);
            $mysign = $this->bsmd5Sign($prestr,$merkey["$mernokey"]);
            $parameter['Sign'] = $mysign;
            $data = $this->bspost($apiUrl, $parameter);

            $result_arr = explode("&",$data);
            $ret_parameter =array();
            foreach ($result_arr as $value) {
                $postion = strpos($value,"=");
                $paramkey = substr($value,0,$postion);
                $paramvalue = substr($value,$postion+1);
                $ret_parameter[$paramkey]=$paramvalue;
            }
            //$RetCode = $ret_parameter['RetCode'];
            //$RetMsg = $ret_parameter['RetMsg'];
            if(!isset($ret_parameter['CodeImgUrl'])){
                showMSG("返回值为空");
            }
            $CodeImgUrl = $ret_parameter['CodeImgUrl'];

            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            $data = array(
                'order_number' => $parameter['OrderID'],
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (pay::addItem($data)) {
                if($CodeImgUrl != '') {
                    //self::$view->setVar('postFields', $postFields);
                    //self::$view->render('pay_zf32');
                    header("location:$CodeImgUrl");
                }
            } else {
                log2file('baishiPay.log', $parameter);
                die('生成订单失败');
            }

            die();



        }
    }

 public function bsparaFilter($para) {
        $para_filter = array();
        while (list ($key, $val) = each ($para)) {
            if($key == "sign" || $key == "sign_type" || $val == "")continue;
            else	$para_filter[$key] = $para[$key];
        }
        return $para_filter;
    }

public function bsargSort($para) {
    ksort($para);
    reset($para);
    return $para;
}

public function bscreateLinkstring($para) {
    $arg  = "";
    while (list ($key, $val) = each ($para)) {
        $arg.=$key."=".$val."&";
    }
    //去掉最后一个&字符
    $arg = substr($arg,0,count($arg)-2);

    //如果存在转义字符，那么去掉转义
    if(get_magic_quotes_gpc()){$arg = stripslashes($arg);}

    return $arg;
}

public function bsmd5Sign($prestr, $key) {
        $prestr = $prestr ."&Key=".$key;
        return strtoupper(md5($prestr));
    }

public function bspost($url, $data){//file_get_content



    $postdata = http_build_query(

        $data

    );



    $opts = array('http' =>

        array(

            'method'  => 'POST',

            'header'  => 'Content-type: application/x-www-form-urlencoded',

            'content' => $postdata

        )

    );



    $context = stream_context_create($opts);


    $result = @file_get_contents($url, false, $context);

    return $result;


}

    public function yitongPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            if ($card_id == '') {
                die('系统出错！(错误码：6003)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');
            if($deposit_amount > '5000'){
                showMSG("充值金额不能大于5000元");
            }

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $payType = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['yitong_api'];

            if ($cards[$card_id]["netway"] == "WX") {
                $payType = "WAY_TYPE_WEBCAT";
            } else if ($cards[$card_id]['netway'] == "WX_WAP") {
                $payType = "WAY_TYPE_WEBCAT_PHONE";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $payType = "WAY_TYPE_ALIPAY";
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $payType = "WAY_TYPE_ALIPAY_PHONE";
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $payType = "WAY_TYPE_QQ";
            } else if ($cards[$card_id]['netway'] == "WY") {
                $payType = "1";
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');

                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bankId = '967';
                        break;
                    // 农业银行
                    case '2':
                        $bankId = '964';
                        break;
                    // 建设银行
                    case '3':
                        $bankId = '965';
                        break;
                    // 招商银行
                    case '4':
                        $bankId = '970';
                        break;
                    // 交通银行
                    case '5':
                        $bankId = '981';
                        break;
                    // 中信银行
                    case '6':
                        $bankId = '962';
                        break;
                    // 邮政储蓄
                    case '7':
                        $bankId = '971';
                        break;
                    // 中国光大银行
                    case '8':
                        $bankId = '986';
                        break;
                    // 民生银行
                    case '9':
                        $bankId = '980';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bankId = '977';
                        break;
                    // 兴业银行
                    case '11':
                        $bankId = '972';
                        break;
                    // 广发银行
                    case '12':
                        $bankId = '985';
                        break;
                    // 平安银行
                    /*case '13':
                        $bankId = 'SPABANK';
                        break;
                    // 华夏银行
                    case '15':
                        $bankId = 'HXB';
                        break;*/
                    // 东莞银行
                    /*case '16':
                        break;*/
                    // 渤海银行
                    /*case '17':
                        $bankId = '03180000';
                        break;*/
                    // 浙商银行
                    /*case '19':
                        $bankId = '968';
                        break;*/
                    // 北京银行
                    case '20':
                        $bankId = '989';
                        break;
                    // 广州银行
                    /*case '21':
                        break;*/
                    // 中国银行
                    case '22':
                        $bankId = '963';
                        break;
                    //上海银行
                    /*case '23':
                        $bankId = 'SHB';
                        break;
                    case '24':
                        $bankId = 'NBB';
                        break;
                    case '25':
                        $bankId = 'HZB';
                        break;*/

                }
                $postData = array();
                $postData['version'] = "1.0.0";
                $postData['transCode'] = "8888";
                $postData['merchantId'] = $cards[$card_id]['mer_no'];
                $postData['merOrderNum'] = $shop_order_num;
                $postData['bussId'] = "881887";
                $postData['tranAmt'] = $deposit_amount*100;
                $postData['sysTraceNum'] = date('YmdHis').floor(microtime()*100);
                $postData['tranDateTime'] = date('YmdHis');
                $postData['currencyType'] = "156";
                $postData['merURL'] = $returnurl;
                $postData['backURL'] = $callbackurl;
                $postData['entryType'] = $payType;
                $postData['orderInfo'] = "";
                $postData['userId'] = "13250242422";
                $postData['userPhoneHF'] = "";
                $postData['userAcctNo'] = "";
                $postData['userNameHF'] = "";
                $postData['userIp'] = "";
                $postData['bankId'] = "888880170122900";
                $postData['stlmId'] = "";
                $postData['attach'] = "";
                $postData['reserver1'] = "";
                $postData['reserver2'] = "";
                $postData['reserver3'] = "";
                $postData['reserver4'] = "7";

                $txnString = $postData['version']."|".$postData['transCode']."|".$postData['merchantId']."|".$postData['merOrderNum']."|".$postData['bussId']."|".$postData['tranAmt']."|".$postData['sysTraceNum']."|".$postData['tranDateTime']."|".$postData['currencyType']."|".$postData['merURL']."|".$postData['backURL']."|".$postData['orderInfo']."|".$postData['userId'];

                $signValue = md5($txnString.$cards[$card_id]['mer_key']);
                $postData['signValue'] = $signValue;

                $postFields = array(
                    'url' => $apiUrl,
                    'version' => $postData['version'],
                    'transCode' => $postData['transCode'],
                    'merchantId' => $postData['merchantId'],
                    'merOrderNum' => $postData['merOrderNum'],
                    'bussId' => $postData['bussId'],
                    'tranAmt' => $postData['tranAmt'],
                    'sysTraceNum' => $postData['sysTraceNum'],
                    'tranDateTime' => $postData['tranDateTime'],
                    'currencyType' => $postData['currencyType'],
                    'merURL' => $postData['merURL'],
                    'backURL' => $postData['backURL'],
                    'entryType' => $postData['entryType'],
                    'orderInfo' => $postData['orderInfo'],
                    'userId' => $postData['userId'],
                    'userPhoneHF' => $postData['userPhoneHF'],
                    'userAcctNo' => $postData['userAcctNo'],
                    'userNameHF' => $postData['userNameHF'],
                    'userIp' => $postData['userIp'],
                    'bankId' => $postData['bankId'],
                    'stlmId' => $postData['stlmId'],
                    'attach' => $postData['attach'],
                    'reserver1' => $postData['reserver1'],
                    'reserver2' => $postData['reserver2'],
                    'reserver3' => $postData['reserver3'],
                    'reserver4' => $postData['reserver4'],
                    'signValue' => $postData['signValue'],
                );

                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


                $data = array(
                    'order_number' => $postData['merOrderNum'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    self::$view->setVar('postFields', $postFields);
                    self::$view->render('pay_yitong');
                } else {
                    log2file('yitongPay.log', $postFields);
                    die('生成订单失败');
                }

                die();

            }

            $postData = array();
            $postData['pname'] = $cards[$card_id]['mer_no'];
            $postData['ptype'] = $payType;
            $postData['poid'] = $shop_order_num;
            $postData['pmoney'] = $deposit_amount;
            //$postData['pbank'] = @$bankId;
            $postData['purl'] = $callbackurl;
            $postData['premarks'] = "luckys";
            $postData['psyspwd'] = "123123";///////在999最后面
            /// psyspwd是什么
            /// 加博士群
            /// desKey：c5PxoSKp  ,$cards[$card_id]['ukeypwd']
            ////md5Key：ds9XiqHf   $cards[$card_id]['mer_key']

            $postData['uname'] = $cards[$card_id]['mer_no'];

            $params ="pname=".$postData['pname']."!ptype=".$postData['ptype']."!poid=".$postData['poid']."!pmoney=".$postData['pmoney']."!purl=".$postData['purl']."!premarks=".$postData['premarks']."!psyspwd=".MD5($postData['psyspwd'].$cards[$card_id]['mer_key']);
            //dd($params);

            $enparams = $this->newencrypt($params,$cards[$card_id]['ukeypwd']);


            $url=$apiUrl."?params=".$enparams."&uname=".$postData['uname'];
            $postFields = array(
                'url' => $url
            );


            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            $data = array(
                'order_number' => $postData['poid'],
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (pay::addItem($data)) {
                self::$view->setVar('postFields', $postFields);
                self::$view->render('pay_boshi_wy');
            } else {
                log2file('dingyiPay.log', $postFields);
                die('生成订单失败');
            }

            die();

        }
    }

    public function huihePay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            if ($card_id == '') {
                die('系统出错！(错误码：6003)');
            }

            $cards = cards::getItemsById(array($card_id));

            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');
            if($deposit_amount < '2'){
                showMSG("充值金额不能小于2元");
            }
            if($deposit_amount > '3000'){
                showMSG("充值金额不能大于3000元");
            }

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $payType = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['huihe_api'];

            if ($cards[$card_id]["netway"] == "QQ") {
                $payType = "3";
            } else if ($cards[$card_id]['netway'] == "JD") {
                $payType = "9";
            } else if ($cards[$card_id]['netway'] == "WY") {
                $payType = "1";
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');

                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bankId = '967';
                        break;
                    // 农业银行
                    case '2':
                        $bankId = '964';
                        break;
                    // 建设银行
                    case '3':
                        $bankId = '965';
                        break;
                    // 招商银行
                    case '4':
                        $bankId = '970';
                        break;
                    // 交通银行
                    case '5':
                        $bankId = '981';
                        break;
                    // 中信银行
                    case '6':
                        $bankId = '962';
                        break;
                    // 邮政储蓄
                    case '7':
                        $bankId = '971';
                        break;
                    // 中国光大银行
                    case '8':
                        $bankId = '986';
                        break;
                    // 民生银行
                    case '9':
                        $bankId = '980';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bankId = '977';
                        break;
                    // 兴业银行
                    case '11':
                        $bankId = '972';
                        break;
                    // 广发银行
                    case '12':
                        $bankId = '985';
                        break;
                    // 平安银行
                    /*case '13':
                        $bankId = 'SPABANK';
                        break;
                    // 华夏银行
                    case '15':
                        $bankId = 'HXB';
                        break;*/
                    // 东莞银行
                    /*case '16':
                        break;*/
                    // 渤海银行
                    /*case '17':
                        $bankId = '03180000';
                        break;*/
                    // 浙商银行
                    /*case '19':
                        $bankId = '968';
                        break;*/
                    // 北京银行
                    case '20':
                        $bankId = '989';
                        break;
                    // 广州银行
                    /*case '21':
                        break;*/
                    // 中国银行
                    case '22':
                        $bankId = '963';
                        break;
                    //上海银行
                    /*case '23':
                        $bankId = 'SHB';
                        break;
                    case '24':
                        $bankId = 'NBB';
                        break;
                    case '25':
                        $bankId = 'HZB';
                        break;*/

                }
                $postData = array();
                $postData['version'] = "1.0.0";
                $postData['transCode'] = "8888";
                $postData['merchantId'] = $cards[$card_id]['mer_no'];
                $postData['merOrderNum'] = $shop_order_num;
                $postData['bussId'] = "100000";
                $postData['tranAmt'] = $deposit_amount*100;
                $postData['sysTraceNum'] = date('YmdHis').floor(microtime()*1000);
                $postData['tranDateTime'] = date('YmdHis');
                $postData['currencyType'] = "156";
                $postData['merURL'] = $returnurl;
                $postData['backURL'] = $callbackurl;
                $postData['entryType'] = $payType;

                $postData['orderInfo'] = "lucky";
                $postData['userId'] = "";
                $postData['userIp'] = "";
                $postData['bankId'] = "";
                $postData['stlmId'] = "";
                $postData['attach'] = "";
                $postData['reserver1'] = "";
                $postData['reserver2'] = "";
                $postData['reserver3'] = "";
                $postData['reserver4'] = "";

                $txnString = $postData['version']."|".$postData['transCode']."|".$postData['merchantId']."|".$postData['merOrderNum']."|".$postData['bussId']."|".$postData['tranAmt']."|".$postData['sysTraceNum']."|".$postData['tranDateTime']."|".$postData['currencyType']."|".$postData['merURL']."|".$postData['backURL']."|".$postData['entryType'];
                $signValue = md5($txnString.$cards[$card_id]['mer_key']);
                $postData['signValue'] = $signValue;

                $postFields = array(
                    'url' => $apiUrl,
                    'version' => $postData['version'],
                    'transCode' => $postData['transCode'],
                    'merchantId' => $postData['merchantId'],
                    'merOrderNum' => $postData['merOrderNum'],
                    'bussId' => $postData['bussId'],
                    'tranAmt' => $postData['tranAmt'],
                    'sysTraceNum' => $postData['sysTraceNum'],
                    'tranDateTime' => $postData['tranDateTime'],
                    'currencyType' => $postData['currencyType'],
                    'merURL' => $postData['merURL'],
                    'backURL' => $postData['backURL'],
                    'entryType' => $postData['entryType'],
                    'orderInfo' => $postData['orderInfo'],
                    'userId' => $postData['userId'],
                    'userIp' => $postData['userIp'],
                    'bankId' => $postData['bankId'],
                    'stlmId' => $postData['stlmId'],
                    'attach' => $postData['attach'],
                    'reserver1' => $postData['reserver1'],
                    'reserver2' => $postData['reserver2'],
                    'reserver3' => $postData['reserver3'],
                    'reserver4' => $postData['reserver4'],
                    'signValue' => $postData['signValue'],
                );

                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


                $data = array(
                    'order_number' => $postData['merOrderNum'],
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    self::$view->setVar('postFields', $postFields);
                    self::$view->render('pay_yitong');
                } else {
                    log2file('yitongPay.log', $postFields);
                    die('生成订单失败');
                }

                die();

            }

            $postData = array();
            $postData['AppId'] = $cards[$card_id]['mer_no'];
            $postData['Method'] = "trade.page.pay";
            $postData['Format'] = "JSON";
            $postData['Charset'] = "UTF-8";
            $postData['Version'] = "1.0";
            $postData['SignType'] = "MD5";
            $postData['Timestamp'] = date("Y-m-d H:i:s");//2017-07-24 03:07:50
            $postData['PayType'] = $payType;
            $postData['OutTradeNo'] = $shop_order_num;
            $postData['TotalAmount'] = $deposit_amount;
            $postData['Subject'] = "lucky";
            $postData['Body'] = "lucky";
            $postData['NotifyUrl'] = $callbackurl;

            $waitLink = "AppId=".$postData["AppId"]
                ."&Body=".$postData["Body"]
                ."&Charset=".$postData["Charset"]
                ."&Format=".$postData["Format"]
                ."&Method=".$postData["Method"]
                ."&NotifyUrl=".$postData["NotifyUrl"]
                ."&OutTradeNo=".$postData["OutTradeNo"]
                ."&PayType=".$postData["PayType"]
                ."&Subject=".$postData["Subject"]
                ."&Timestamp=".$postData["Timestamp"]
                ."&TotalAmount=".$postData["TotalAmount"]
                ."&Version=".$postData["Version"];

            $postData["Sign"] = md5($waitLink . $cards[$card_id]['mer_key']);

            $response = $this->hhcurlpost($apiUrl,$postData);
            $response = json_decode($response,true);
            if(!isset($response['QrCode'])){
                showMSG("返回值为空!");
            }



            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            $data = array(
                'order_number' => $postData['OutTradeNo'],
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (pay::addItem($data)) {
                header("location:" . '../pay/qrcode.php?code=' . $response['QrCode'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $postData['TotalAmount'] ."&cdn=" . parent::$PublicImgCdn);
                die();
            } else {
                log2file('huihePay.log', $postData);
                die('生成订单失败');
            }

            die();

        }
    }

    public function hhcurlpost($apiUrl,$postData){

        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $apiUrl);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);
        curl_setopt($ch, CURLOPT_POST, true);
        curl_setopt($ch, CURLOPT_HEADER, false);
        curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($postData));
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        $response=curl_exec($ch);

        return $response;
    }

    public function tongsaoPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
$card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash,0,5);
        $timePart2 = substr($hash,5 + 32,5);
        $time = $timePart1 . $timePart2;

        if(time() > intval($time)){
            die('交易超时，请刷新充值页面重新充值');
        }

        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_'. $username . '_' . date('Ymd'));

        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $cards = cards::getItemsById(array($card_id));

        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
$shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');
            if($deposit_amount > '5000'){
                showMSG("充值金额不能大于5000元");
            }
            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            //$amount = number_format(floatval($deposit_amount), 2, '.', '');
            $bank = '';
            if ($cards[$card_id]["netway"] == "ZFB") {
                $bank = '1';
                $apiUrl = $GLOBALS['cfg']['pay_url']['tongsao_api'];
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $bank = '1';
                $apiUrl = $GLOBALS['cfg']['pay_url']['tongsao_wapapi'];
            } else if ($cards[$card_id]['netway'] == "WX") {
                $bank = '2';
                $apiUrl = $GLOBALS['cfg']['pay_url']['tongsao_api'];
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $bank = '4';
                $apiUrl = $GLOBALS['cfg']['pay_url']['tongsao_api'];
            } else if ($cards[$card_id]['netway'] == "QQ_WAP") {
                $bank = '4';
                $apiUrl = $GLOBALS['cfg']['pay_url']['tongsao_wapapi'];
            } else if ($cards[$card_id]['netway'] == "JD") {
                $bank = '5';
                $apiUrl = $GLOBALS['cfg']['pay_url']['tongsao_api'];
            } else if ($cards[$card_id]['netway'] == "JD_WAP") {
                $bank = '5';
                $apiUrl = $GLOBALS['cfg']['pay_url']['tongsao_wapapi'];
            } else if ($cards[$card_id]['netway'] == "WY") {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                $banktype = '';

                switch ($third_party_bank_id){
                    // 工商银行
                    case '1':
                        $banktype = 'ICBC';
                        break;
                    // 农业银行
                    case '2':
                        $banktype = 'ABC';
                        break;
                    // 建设银行
                    case '3':
                        $banktype = 'CCB';
                        break;
                    // 招商银行
                    case '4':
                        $banktype = 'CMB';
                        break;
                    // 交通银行
                    case '5':
                        $banktype = 'BCOM';
                        break;
                    // 中信银行
                    case '6':
                        $banktype = 'ECITIC';
                        break;
                    // 邮政储蓄
                    case '7':
                        $banktype = 'PSBC';
                        break;
                    // 中国光大银行
                    case '8':
                        $banktype = 'CEBB';
                        break;
                    // 民生银行
                    case '9':
                        $banktype = 'CMBC';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $banktype = 'SPDB';
                        break;
                    // 兴业银行
                    case '11':
                        $banktype = 'CIB';
                        break;
                    // 广发银行
                    case '12':
                        $banktype = 'GDB';
                        break;
                    // 平安银行
                    case '13':
                        $banktype = 'SPABANK';
                        break;
                    // 华夏银行
                    case '15':
                        $banktype = 'HXB';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        break;
                    // 浙商银行
                    case '19':
                        break;
                    // 北京银行
                    case '20':
                        $banktype = 'BOB';
                        break;
                    // 广州银行
                    case '21':
                        break;
                    // 中国银行
                    case '22':
                        $banktype = 'BOC';
                        break;
                }

                $merInfos = explode('|', $cards[$card_id]["mer_no"]);
                $merchant_code = $merInfos[0];
                $service_type = "direct_pay";
                $notify_url = $callbackurl;
                $interface_version = "V3.0";
                $input_charset = "UTF-8";
                $sign_type = "RSA-S";
                $return_url = $returnurl;
                $pay_type = "b2c";
                $order_no = $shop_order_num;
                $order_time = date('Y-m-d H:i:s');
                $order_amount = $amount;
                $product_name = "充值";

                $signStr= "";
                $bank_code = $banktype;

                if($bank_code != ""){
                    $signStr = $signStr."bank_code=".$bank_code."&";
                }

                $signStr = $signStr."input_charset=".$input_charset."&";
                $signStr = $signStr."interface_version=".$interface_version."&";
                $signStr = $signStr."merchant_code=".$merchant_code."&";
                $signStr = $signStr."notify_url=".$notify_url."&";
                $signStr = $signStr."order_amount=".$order_amount."&";
                $signStr = $signStr."order_no=".$order_no."&";
                $signStr = $signStr."order_time=".$order_time."&";

                if($pay_type != ""){
                    $signStr = $signStr."pay_type=".$pay_type."&";
                }

                $signStr = $signStr."product_name=".$product_name."&";

                if($return_url != ""){
                    $signStr = $signStr."return_url=".$return_url."&";
                }

                $signStr = $signStr."service_type=".$service_type;

                $merchant_private_key= openssl_get_privatekey($this->formatKey($cards[$card_id]['mer_key'], "private"));
                openssl_sign($signStr,$sign_info,$merchant_private_key,OPENSSL_ALGO_MD5);
                $sign = base64_encode($sign_info);

                $postFields = array(
                    'url' => config::getConfig('duodebao_wy_api'),
                    'sign' => $sign,
                    'merchant_code' => $merchant_code,
                    'bank_code' => $bank_code,
                    'order_no' => $order_no,
                    'order_amount' => $order_amount,
                    'service_type' => $service_type,
                    'input_charset' => $input_charset,
                    'notify_url' => $notify_url,
                    'interface_version' => $interface_version,
                    'sign_type' => $sign_type,
                    'order_time' => $order_time,
                    'product_name' => $product_name,
                    'pay_type' => $pay_type,
                    'return_url' => $return_url,
                );

                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    self::$view->setVar('postFields', $postFields);
                    self::$view->render('pay_zhifu');
                } else {
                    log2file('duodebaoPay.log', $postFields);
                    die('生成订单失败');
                }

                die();
            }

            /*$merInfos = explode('|', $cards[$card_id]["mer_no"]);
            $merchant_code = $merInfos[0];
            $service_type = $bank; //微信：weixin_scan 支付宝：alipay_scan 智汇宝：zhb_scan
            $notify_url = $callbackurl;
            $interface_version = 'V3.3';
            $client_ip = $this->getClientIp();
            $sign_type = 'RSA-S';
            $order_no = $shop_order_num;
            $order_time = date('Y-m-d H:i:s');
            $order_amount = $amount;
            $product_name = '充值';

            $signStr = '';
            $signStr = $signStr."client_ip=".$client_ip."&";
            $signStr = $signStr."interface_version=".$interface_version."&";
            $signStr = $signStr."merchant_code=".$merchant_code."&";
            $signStr = $signStr."notify_url=".$notify_url."&";
            $signStr = $signStr."order_amount=".$order_amount."&";
            $signStr = $signStr."order_no=".$order_no."&";
            $signStr = $signStr."order_time=".$order_time."&";
            $signStr = $signStr."product_name=".$product_name."&";
            $signStr = $signStr."service_type=".$service_type;
            $key = $this->formatKey($cards[$card_id]['mer_key'], "private");
            $merchant_private_key= openssl_get_privatekey($key);
            openssl_sign($signStr,$sign_info,$merchant_private_key,OPENSSL_ALGO_MD5);
            $sign = base64_encode($sign_info);*/

            $postdata=array(
                'merchno'=>$cards[$card_id]["mer_no"],
                'amount'=>$deposit_amount,
                'traceno'=>$shop_order_num,
                'payType'=>$bank,
                'notifyUrl'=>$callbackurl,
                'goodsName'=>"lucky",
                'remark'=>"lucky",
                'settleType'=>"1",
            );
            $signstr = "amount=".$postdata['amount']."&goodsName=".$postdata['goodsName']."&merchno=".$postdata['merchno']." &notifyUrl=".$postdata['notifyUrl']."&payType=".$postdata['payType']."&remark=".$postdata['remark']."&settleType=".$postdata['settleType']."&traceno=".$postdata['traceno']."&".$cards[$card_id]['mer_key'];
            $postdata['signature'] = md5($signstr);
                //dd($signstr);
            $info = array();
            $response = $this->curlPostData($apiUrl, $postdata, $info);
            dd($response);
            $response = $this->xmlToArray($response);

            if (isset($response['response']) && isset($response['response']['resp_desc']) && $response['response']['result_code'] === '0') {
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
$bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (strstr($cards[$card_id]['netway'], "QQ") > -1) {
                    $response['response']['qrcode'] = urldecode($response['response']['qrcode']);
                }

                if (pay::addItem($data)) {
                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        header("location:" . $response['response']['qrcode']);
                        die();
                    } else {
                        header("location:" . '../pay/qrcode.php?code=' . $response['response']['qrcode'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                        die();
                    }
                } else {
                    log2file('duodebaoPay.log', $data);
                    die('生成订单失败');
                }
            } else {
                if (isset($response['response']) && isset($response['response']['resp_desc'])) {
                    echo $response['response']['resp_desc'];
                }

                log2file('duodebaoPay.log', $postdata);
                log2file('duodebaoPay.log', $response);
            }
        } else {
            die();
        }
    }


    public function qiqiPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
        $card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
        $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }



        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');;

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $cards = cards::getItemsById(array($card_id));


            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
            $shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' :
                'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $payType = '';

            if ($cards[$card_id]["netway"] == "WX") {
                $payType = "1";
            } elseif ($cards[$card_id]["netway"] == "ZFB") {
                $payType = "2";
            } elseif ($cards[$card_id]["netway"] == "QQ") {
                $payType = "3";
            }elseif ($cards[$card_id]["netway"] == "JD") {
                $payType = "4";
            }

            $postData = array();
            $postData['UId'] = $cards[$card_id]["mer_no"];
            $postData['Amount'] = $deposit_amount;
            $postData['Sh_OrderNo'] = $shop_order_num;
            $postData['Type'] = $payType;
            $postData['Msg'] = $shop_order_num;
            $postData['ip'] = $this->getClientIp();//不参加签验

            $body = "Amount=" . $postData['Amount'];
            $body .= "&Msg=" . $postData['Msg'];
            $body .= "&Sh_OrderNo=" . $postData['Sh_OrderNo'];
            $body .= "&Type=" . $postData['Type'];
            $body .= "&UId=" . $postData['UId'];
            $signkey = $body . "&key=" . $cards[$card_id]["mer_key"];
            $postData['sign'] = strtoupper(md5($signkey));

            $apiUrl = $GLOBALS['cfg']['pay_url']['qiqi_api'];
            $info = array();
            $response = $this->curlPostData($apiUrl, http_build_query($postData), $info);
            $response = json_decode($response, true);

            if ($response != null && isset($response['Qrcode'])) {
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
                $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        header("location:" . $response['Qrcode']);
                        die();
                    } else {
                        header("location:" . '../pay/qrcode.php?code=' . $response['Qrcode'] .
                            '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount . "&cdn=" . parent::
                            $PublicImgCdn);
                        die();
                    }
                } else {
                    log2file('qiqiPay.log', $postData);
                    log2file('qiqiPay.log', $response);
                    echo '生成订单失败';
                }

                die();
            } else {
                log2file('qiqiPay.log', $postData);
                echo '返回值为空';

            }
        }

    }

    public function jinyangPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
        $card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
        $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }



        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');;

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $cards = cards::getItemsById(array($card_id));


            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
            $shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $trade_type = '';
            $banktype = '';

            if ($cards[$card_id]["netway"] == "WX") {
                $trade_type = "WEIXIN";
            } else if ($cards[$card_id]['netway'] == "WX_WAP") {
                $trade_type = "WEIXINWAP";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $trade_type = "ALIPAY";
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $trade_type = "ALIPAYWAP";
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $trade_type = "QQPAY";
            } else if ($cards[$card_id]['netway'] == "QQ_WAP") {
                $trade_type = "QQPAYWAP";
            } else if ($cards[$card_id]['netway'] == "JD") {
                $trade_type = "JDPAY";
            } else if ($cards[$card_id]['netway'] == "JD_WAP") {
                $trade_type = "JDPAYWAP";
            } else if ($cards[$card_id]['netway'] == "WY") {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                switch ($third_party_bank_id){
                    // 工商银行
                    case '1':
                        $banktype = 'ICBC';
                        break;
                    // 农业银行
                    case '2':
                        $banktype = 'ABC';
                        break;
                    // 建设银行
                    case '3':
                        $banktype = 'CCB';
                        break;
                    // 招商银行
                    case '4':
                        $banktype = 'CMB';
                        break;
                    // 交通银行
                    case '5':
                        $banktype = 'BOCO';
                        break;
                    // 中信银行
                    case '6':
                        $banktype = 'CTTIC';
                        break;
                    // 邮政储蓄
                    case '7':
                        $banktype = 'PSBS';
                        break;
                    // 中国光大银行
                    case '8':
                        $banktype = 'CEB';
                        break;
                    // 民生银行
                    case '9':
                        $banktype = 'CMBC';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $banktype = 'SPDB';
                        break;
                    // 兴业银行
                    case '11':
                        $banktype = 'CIB';
                        break;
                    // 广发银行
                    case '12':
                        $banktype = 'GDB';
                        break;
                    // 平安银行
                    case '13':
                        $banktype = 'PINGANBANK';
                        break;
                    // 华夏银行
                    case '15':
                        $banktype = 'HXB';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        $banktype = 'CBHB';
                        break;
                    // 浙商银行
                    case '19':
                        break;
                    // 北京银行
                    case '20':
                        $banktype = 'BCCB';
                        break;
                    // 广州银行
                    case '21':
                        $banktype = '';
                        break;
                    // 中国银行
                    case '22':
                        $banktype = 'BOC';
                        break;
                    // 南京银行
                    case '23':
                        $banktype = 'NJCB';
                        break;
                    // 东亚银行
                    case '24':
                        $banktype = 'HKBEA';
                        break;
                    // 宁波银行
                    case '25':
                        $banktype = 'NBCB';
                        break;
                    //上海银行
                    case '26':
                        $banktype = 'SHB';
                        break;
                    //深圳发展银行
                    case '27':
                        $banktype = 'SDB';
                        break;

                }

                $postData = array();
                $postData['p1_mchtid'] = $cards[$card_id]["mer_no"];
                $postData['p2_paytype'] = $banktype;
                $postData['p3_paymoney'] = $deposit_amount;
                $postData['p4_orderno'] = $shop_order_num;
                $postData['p5_callbackurl'] = $callbackurl;
                $postData['p6_notifyurl'] = $returnurl;
                $postData['p7_version'] = "v2.8";
                $postData['p8_signtype'] = 1;
                $postData['p9_attach'] = "";
                $postData['p10_appname'] = "";
                $postData['p11_isshow'] = 0;
                $postData['p12_orderip'] = $this->getClientIp();

                $postData['sign'] = $this->jySign($postData, $cards[$card_id]["mer_key"]);

                $postData['url'] = $GLOBALS['cfg']['pay_url']['jinyang_api'];

                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
                $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    self::$view->setVar('postFields', $postData);
                    self::$view->render('pay_jinyang');
                } else {
                    log2file('jinyangPay.log', $postData);
                    echo '生成订单失败';
                }

                die();
            }

            $postData = array();
            $postData['p1_mchtid'] = $cards[$card_id]["mer_no"];
            $postData['p2_paytype'] = $trade_type;
            $postData['p3_paymoney'] = $deposit_amount;
            $postData['p4_orderno'] = $shop_order_num;
            $postData['p5_callbackurl'] = $callbackurl;
            $postData['p6_notifyurl'] = $returnurl;
            $postData['p7_version'] = "v2.8";
            $postData['p8_signtype'] = 1;
            $postData['p9_attach'] = "";
            $postData['p10_appname'] = "";
            $postData['p11_isshow'] = 0;
            $postData['p12_orderip'] = $this->getClientIp();

            $postData['sign'] = $this->jySign($postData, $cards[$card_id]["mer_key"]);

            $apiUrl = $GLOBALS['cfg']['pay_url']['jinyang_api'];

            $response = $this->jycurlPost($postData, $apiUrl, 2, 60);
            if(!isset($response['data'])){
                showMSG("返回值为空!");
            }
            if ($response != null && $response['rspCode'] == 1) {

                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
                $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        $postData['url'] = $GLOBALS['cfg']['pay_url']['jinyang_api'];
                        self::$view->setVar('postFields', $postData);
                        self::$view->render('pay_jinyang');
                        die();
                    } else {
                        self::$view->setVar('imgCdnUrl',parent::$PublicImgCdn);
                        self::$view->setVar('Amt',$deposit_amount);
                        self::$view->setVar('postFields',$response['data']['r6_qrcode']);
                        self::$view->render('pay_jinyangscan');
                        die();
                    }
                } else {
                    log2file('jinyangPay.log', $postData);
                    log2file('jinyangPay.log', $response);
                    echo '生成订单失败';
                }
            } else {
                if ($response != null && $response['rspMsg'] != null) {
                    echo $response['rspMsg'];
                }

                log2file('jinyangPay.log', $postData);
                log2file('jinyangPay.log', $response);
            }
        } else {
            die();
        }
    }

    public function jySign($param, $key) {
        $string = '';
        foreach($param as $k => $value) {
            $string .= $k . '=' . $value . '&';
        }
        $string = rtrim($string, '&');
        // echo $string . $key;echo '<br>';
        // echo md5($string . $key);echo '<br>';
        return md5($string . $key);
    }

    public function jycurlPost($aPostData, $sUrl, $respondType = 1, $timeout = 5) {
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $sUrl);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);
        curl_setopt($ch, CURLOPT_POST, true);
        curl_setopt($ch, CURLOPT_HEADER, false);
        curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($aPostData));
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_TIMEOUT, (int)$timeout);
        curl_setopt($ch, CURLOPT_USERAGENT,
            'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11');// 添加浏览器内核信息，解决403问题 add by ben 2017/10/25

        $response = curl_exec($ch);

        if (1 === $respondType) {
            $res = $this->xmlToArray($response);
        } elseif (2 === $respondType) {
            // echo $response;echo '<br>';
            $res = json_decode($response, true);
            // 如果没有decode成功，也许是因为三方用的是GB2312
            if (is_null($res)) {
                $res = json_decode(iconv('GB2312', 'UTF-8', $response), true);
            }
        } else {
            $res = $response;
        }
        curl_close($ch);

        return $res;
    }

    public function F86Pay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
        $card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
        $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }



        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');;

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $cards = cards::getItemsById(array($card_id));


            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
            $shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $trade_type = '';
            $banktype = '';

            if ($cards[$card_id]["netway"] == "WX") {
                $trade_type = "WECHAT_QRCODE_PAY";
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $trade_type = "QQ_QRCODE_PAY";
            } else if ($cards[$card_id]['netway'] == "QQ_WAP") {
                $trade_type = "QQ_WAP_PAY";
            } else if ($cards[$card_id]['netway'] == "KJ") {
                $trade_type = "UNION_PAY";
            } else if ($cards[$card_id]['netway'] == "WY") {
                $trade_type = "ONLINE_BANK_PAY";
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $banktype = 'ICBC';
                        break;
                    // 农业银行
                    case '2':
                        $banktype = 'ABC';
                        break;
                    // 建设银行
                    case '3':
                        $banktype = 'CCB';
                        break;
                    // 招商银行
                    case '4':
                        $banktype = 'CMB';
                        break;
                    // 交通银行
                    case '5':
                        $banktype = 'BOCO';
                        break;
                    // 中信银行
                    case '6':
                        $banktype = 'CTTIC';
                        break;
                    // 邮政储蓄
                    case '7':
                        break;
                    // 中国光大银行
                    case '8':
                        $banktype = 'CEB';
                        break;
                    // 民生银行
                    case '9':
                        $banktype = 'CMBC';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $banktype = 'SPDB';
                        break;
                    // 兴业银行
                    case '11':
                        $banktype = 'CIB';
                        break;
                    // 广发银行
                    case '12':
                        $banktype = 'GDB';
                        break;
                    // 平安银行
                    case '13':
                        $banktype = 'PINGANBANK';
                        break;
                    // 华夏银行
                    case '15':
                        $banktype = 'HXB';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        break;
                    // 浙商银行
                    case '19':
                        break;
                    // 北京银行
                    case '20':
                        break;
                    // 广州银行
                    case '21':
                        $banktype = '';
                        break;
                    // 中国银行
                    case '22':
                        $banktype = 'BOC';
                        break;
                }

                $postData = array();
                $postData['merchantNo'] = $cards[$card_id]["mer_no"];
                $postData['outTradeNo'] = $shop_order_num;
                $postData['amount'] = $deposit_amount * 100;
                $postData['content'] = 'lucky';
                $postData['payType'] = $trade_type;
                $postData['returnURL'] = $returnurl;
                $postData['callbackURL'] = $callbackurl;

                $apiUrl = $GLOBALS['cfg']['pay_url']['F86_api'];
                $cerno = $cards[$card_id]['ukeypwd'];
                $signMethod = "MD5";
                $response = $this->F86request("com.opentech.cloud.easypay.trade.create", "0.0.1", $postData, $files = NULL, $apiUrl, $cerno, $cards[$card_id]['mer_key'], $signMethod);
                $responseqrcode = json_decode($response['data'], true);
                if (!isset($responseqrcode['paymentInfo'])) {
                    showMSG("返回值为空!");
                }

                if ($response != null && $response['errorCode'] == 'SUCCEED') {
                    $requestURI = $this->request->getPost('requestURI', 'trim');
                    $bank_id = $this->request->getPost('bank_id', 'trim');
                    $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                    $data = array(
                        'order_number' => $shop_order_num,
                        'user_id' => $user_id,
                        'username' => $username,
                        'amount' => $deposit_amount,
                        'pay_time' => date('Y-m-d H:i:s'),
                        'source' => $_SERVER['HTTP_HOST'],
                        'requestURI' => $requestURI,
                        'card_id' => $card_id,
                        'bank_id' => $bank_id,
                    );


                    if (pay::addItem($data)) {
                        header("location:" . $responseqrcode['paymentInfo']);
                        die();
                    } else {
                        log2file('F86Pay.log', $postData);
                        echo '生成订单失败';
                    }

                    die();
                }
            }

            $postData = array();
            $postData['merchantNo'] = $cards[$card_id]["mer_no"];
            $postData['outTradeNo'] = $shop_order_num;
            $postData['amount'] = $deposit_amount * 100;
            $postData['content'] = 'lucky';
            $postData['payType'] = $trade_type;
            $postData['returnURL'] = $returnurl;
            $postData['callbackURL'] = $callbackurl;

            $apiUrl = $GLOBALS['cfg']['pay_url']['F86_api'];
            $cerno = $cards[$card_id]['ukeypwd'];
            $signMethod = "MD5";
            $response = $this->F86request("com.opentech.cloud.easypay.trade.create", "0.0.1", $postData,$files = NULL,$apiUrl,$cerno,$cards[$card_id]['mer_key'],$signMethod);
            $responseqrcode = json_decode($response['data'],true);
            if(!isset($responseqrcode['paymentInfo'])){
                showMSG("返回值为空!");
            }

            if ($response != null && $response['errorCode'] == 'SUCCEED') {
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
                $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    if (strstr($cards[$card_id]['netway'], "WAP") > -1 || $cards[$card_id]['netway'] == "KJ") {
                        header("location:" . $responseqrcode['paymentInfo']);
                        die();
                    } else {
                        header("location:" . '../pay/qrcode.php?code=' . $responseqrcode['paymentInfo'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                        die();
                    }
                } else {
                    log2file('F86Pay.log', $postData);
                    log2file('F86Pay.log', $response);
                    echo '生成订单失败';
                }
            } else {
                if ($response != null && $response['msg'] != null) {
                    echo $response['msg'];
                }

                log2file('F86Pay.log', $postData);
                log2file('F86Pay.log', $response);
            }
        } else {
            die();
        }
    }

    public 	function F86request($apiName, $apiVersion, $parameters, $files = NULL,$gateway,$certNo,$privkey,$signMethod) {
        $url = $gateway . $apiName . "/" . $apiVersion;
        $httpHeaders = array();
        $headers = array();
        $headers["x-oapi-pv"] = "x-oapi-pv";
        $headers["x-oapi-sdkv"] = "x-oapi-sdkv";
        $headers["x-oapi-sk"] = $certNo;
        $headers["x-oapi-sm"] = $signMethod;

        $ch = curl_init($url);

        //curl_setopt($ch, CURLOPT_PROXY, '127.0.0.1:7777');
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_HEADER, true);

        $body = NULL;
        if(!isset($files) || count($files) == 0) {
            $body = json_encode($parameters);
            $headers["x-oapi-sign"] = $this->F86sign($url, $headers, $body,$privkey);
            array_push($httpHeaders, "Content-Type:application/json;charset=utf-8");
        } else {
            $headers["x-oapi-sign"] = $this->F86sign($url, $headers, null,$privkey);

            $boundary = '-------------' . md5(time());
            array_push($httpHeaders, 'Content-Type: multipart/form-data; boundary=' . $boundary);

            // 参数
            $body = '';
            foreach ($parameters as $key => $value) {
                $body .= "--" . $boundary . "\r\n"
                    . 'Content-Disposition: form-data; name="' . $key . "\"\r\n\r\n"
                    . $value . "\r\n";
            }

            // 文件
            foreach ($files as $key => $file) {
                $body .= "--" . $boundary . "\r\n";
                $body .= 'Content-Disposition: form-data; name="' . $key . '"; filename="' . $file['fileName'] . "\" \r\n";
                $contentType = isset($file['contentType']) ? $file['contentType'] : 'application/octet-stream';
                $body .= 'Content-Type: ' . $contentType . "\r\n\r\n";
                $body .= $file['content'] . "\r\n";
            }

            $body .= "--" . $boundary . "--";
        }

        foreach ($headers as $key => $value) {
            array_push($httpHeaders, $key . ':' . $value);
        }

        curl_setopt($ch, CURLOPT_HTTPHEADER, $httpHeaders);
        curl_setopt($ch, CURLOPT_POSTFIELDS, $body);


        $response = curl_exec($ch);

        if (curl_errno($ch)) {
            //echo 'HTTP Request Error: ' . curl_error($ch);
            return;
        }


        $parsedResponse = $this->parse_http_response($ch, $response);
        $httpStatus = @$parsedResponse["httpStatus"];
        $headers = $parsedResponse["headers"];
        $body = $parsedResponse["body"];

        //print_r($parsedResponse);

        curl_close($ch);


        //printf("url: %s\n", $url);
        //print_r($headers);
        //printf("body: %s\n", $body);
        //print_r($parameters);

        $result = array(
            "errorCode" => $headers["x-oapi-error-code"],
            "msg" => $headers["x-oapi-msg"],
            "data" => $body
        );

        return $result;
    }

    public function parse_http_response($ch, $response) {
        $headers = array();

        $header_size = curl_getinfo($ch, CURLINFO_HEADER_SIZE);

        $header_text = substr($response, 0, $header_size);
        $body = substr($response, $header_size);

        //printf("header_text: %s\n", $header_text);

        $status = 0;

        foreach (explode("\r\n", $header_text) as $i => $line) {
            if(!$line) {
                continue;
            }
            if ($i === 0) {
                list ($protocol, $status) = explode(' ', $line);
                $status = $status;
            } else {
                list ($key, $value) = explode(': ', $line);
                $headers[strtolower($key)] = urldecode($value);
            }
        }

        //print_r($headers);

        return array("status" => $status, "headers" => $headers, "body" => $body);
    }


    public function F86sign($url, $headers, $body,$privateKey) {

        ksort($headers);

        $str = $url;
        foreach ($headers as $key => $value) {
            if(strpos($key, "x-oapi-") === 0) {
                $str = $str . "&" . $key . "=" . $value ;
            }
        }

        if(isset($body)) {
            $str = $str . "&" . $body;
        }

        $str = $str . "&" . $privateKey;

        return strtoupper(md5($str));

    }

    public function sftPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
        $card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
        $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }



        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');;

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $cards = cards::getItemsById(array($card_id));


            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
            $shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $trade_type = '';
            $banktype = '';

            if ($cards[$card_id]["netway"] == "QQ") {
                $trade_type = "3";
            } else if ($cards[$card_id]['netway'] == "QQ_WAP") {
                $trade_type = "3";
            } else if ($cards[$card_id]['netway'] == "WX") {
                $trade_type = "2";
            } else if ($cards[$card_id]['netway'] == "WX_WAP") {
                $trade_type = "2";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $trade_type = "1";
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $trade_type = "1";
            } else if ($cards[$card_id]['netway'] == "WY") {
                $trade_type = "UNIONPAY";
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                switch ($third_party_bank_id){
                    // 工商银行
                    case '1':
                        $banktype = 'ICBC';
                        break;
                    // 农业银行
                    case '2':
                        $banktype = 'ABC';
                        break;
                    // 建设银行
                    case '3':
                        $banktype = 'CCB';
                        break;
                    // 招商银行
                    case '4':
                        $banktype = 'CMB';
                        break;
                    // 交通银行
                    case '5':
                        $banktype = 'COMM';
                        break;
                    // 中信银行
                    case '6':
                        $banktype = 'CNCB';
                        break;
                    // 邮政储蓄
                        $banktype = 'PSBC';
                    case '7':
                        break;
                    // 中国光大银行
                    case '8':
                        $banktype = 'CEB';
                        break;
                    // 民生银行
                    case '9':
                        $banktype = 'CMBC';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $banktype = 'SPDB';
                        break;
                    // 兴业银行
                    case '11':
                        $banktype = 'CIB';
                        break;
                    // 广发银行
                    case '12':
                        $banktype = 'GDB';
                        break;
                    // 平安银行
                    case '13':
                        $banktype = 'PAB';
                        break;
                    // 华夏银行
                    case '15':
                        $banktype = 'HXB';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        $banktype = 'CBHB';
                        break;
                    // 浙商银行
                    case '19':
                        break;
                    // 北京银行
                    case '20':
                        break;
                    // 广州银行
                    case '21':
                        $banktype = '';
                        break;
                    // 中国银行
                    case '22':
                        $banktype = 'BOC';
                        break;
                }

                $postData = array();
                $postData['service'] = 'TRADE.B2C';
                $postData['version'] = '1.0.0.0';
                $postData['merId'] = $cards[$card_id]["mer_no"];
                $postData['tradeNo'] = $shop_order_num;
                $postData['tradeDate'] = date('Ymd');
                $postData['amount'] = $deposit_amount;
                $postData['notifyUrl'] = $callbackurl;
                $postData['summary'] = 'lucky';
                $postData['clientIp'] = $this->getClientIp();
                $postData['bankId'] = $banktype;

                $signstr = $this->readysign($postData);
                $postData['sign'] = md5($signstr.$cards[$card_id]["mer_key"]);
                $postData['url'] = $apiUrl = $GLOBALS['cfg']['pay_url']['sft_api'];

                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
                $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    self::$view->setVar('postFields', $postData);
                    self::$view->render('pay_sft');
                } else {
                    log2file('sftPay.log', $postData);
                    echo '生成订单失败';
                }

                die();
            }

            $postData = array();
            $postData['version'] = '1.0.0.0';
            $postData['merId'] = $cards[$card_id]["mer_no"];
            $postData['typeId'] = $trade_type;
            $postData['tradeNo'] = $shop_order_num;
            $postData['tradeDate'] = date('Ymd');
            $postData['amount'] = $deposit_amount;
            $postData['notifyUrl'] = $callbackurl;
            $postData['summary'] = 'lucky';
            $postData['clientIp'] = $this->getClientIp();

                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
                $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                        $postData['service'] = 'TRADE.H5PAY';
                        $signstr = $this->h5readysign($postData);
                        $postData['sign'] = md5($signstr.$cards[$card_id]["mer_key"]);
                        $postData['url'] = $GLOBALS['cfg']['pay_url']['sft_api'];
                        self::$view->setVar('postFields', $postData);
                        self::$view->render('pay_sft');
                        die();
                    } else {
                        $postData['service'] = 'TRADE.SCANPAY';
                        $signstr = $this->scanreadysign($postData);
                        $postData['sign'] = md5($signstr.$cards[$card_id]["mer_key"]);
                        $apiUrl = $GLOBALS['cfg']['pay_url']['sft_api'];
                        $info = array();
                        $response = $this->curlPostDataNew($apiUrl, http_build_query($postData), $info);
                        $rearray = $this->xmlToArray($response);
                        if (!isset($rearray['detail']['qrCode'])) {
                            showMSG("返回值为空!");
                        }
                        if ($rearray != null && $rearray['detail']['code'] == "00"){
                        $qrcode = $rearray['detail']['qrCode'];
                        $qrcode = base64_decode($qrcode);
                        header("location:" . '../pay/qrcode.php?code=' . $qrcode . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount ."&cdn=" . parent::$PublicImgCdn);
                        die();}
                    }
                } else {
                    log2file('sftPay.log', $postData);
                    echo '生成订单失败';
                }
            }
        }


    public function readysign($data){
        $result = sprintf(
            "service=%s&version=%s&merId=%s&tradeNo=%s&tradeDate=%s&amount=%s&notifyUrl=%s&summary=%s&clientIp=%s&bankId=%s",
            $data['service'],
            $data['version'],
            $data['merId'],
            $data['tradeNo'],
            $data['tradeDate'],
            $data['amount'],
            $data['notifyUrl'],
            $data['summary'],
            $data['clientIp'],
            $data['bankId']
        );

        return $result;
    }

    public function scanreadysign($data){
        $result = sprintf(
            "service=%s&version=%s&merId=%s&typeId=%s&tradeNo=%s&tradeDate=%s&amount=%s&notifyUrl=%s&summary=%s&clientIp=%s",
            $data['service'],
            $data['version'],
            $data['merId'],
            $data['typeId'],
            $data['tradeNo'],
            $data['tradeDate'],
            $data['amount'],
            $data['notifyUrl'],
            $data['summary'],
            $data['clientIp']


        );

        return $result;
    }

    public function h5readysign($data){
        $result = sprintf(
            "service=%s&version=%s&merId=%s&typeId=%s&tradeNo=%s&tradeDate=%s&amount=%s&notifyUrl=%s&summary=%s&clientIp=%s",
            $data['service'],
            $data['version'],
            $data['merId'],
            $data['typeId'],
            $data['tradeNo'],
            $data['tradeDate'],
            $data['amount'],
            $data['notifyUrl'],
            $data['summary'],
            $data['clientIp']


        );
        return $result;
    }

    public function qianlongtongPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
        $card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
        $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }



        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');;

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $cards = cards::getItemsById(array($card_id));


            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
            $shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $trade_type = '';
            $banktype = '';

            if ($cards[$card_id]["netway"] == "WX") {
                $trade_type = "2";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $trade_type = "1";
            } else if ($cards[$card_id]['netway'] == "JD") {
                $trade_type = "4";
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $trade_type = "3";
            } else if ($cards[$card_id]['netway'] == "QQ_WAP") {
                $trade_type = "6";
            } else if ($cards[$card_id]['netway'] == "WY") {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $banktype = 'ICBC';
                        break;
                    // 农业银行
                    case '2':
                        $banktype = 'ABC';
                        break;
                    // 建设银行
                    case '3':
                        $banktype = 'CCB';
                        break;
                    // 招商银行
                    case '4':
                        $banktype = 'CMB';
                        break;
                    // 交通银行
                    case '5':
                        $banktype = 'BOCO';
                        break;
                    // 中信银行
                    case '6':
                        $banktype = 'CTTIC';
                        break;
                    case '7':
                        break;
                    // 中国光大银行
                    case '8':
                        $banktype = 'CEB';
                        break;
                    // 民生银行
                    case '9':
                        $banktype = 'CMBC';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $banktype = 'SPDB';
                        break;
                    // 兴业银行
                    case '11':
                        $banktype = 'CIB';
                        break;
                    // 广发银行
                    case '12':
                        $banktype = 'GDB';
                        break;
                    // 平安银行
                    case '13':
                        $banktype = 'PINGANBANK';
                        break;
                    // 华夏银行
                    case '15':
                        $banktype = 'HXB';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        $banktype = 'CBHB';
                        break;
                    // 浙商银行
                    case '19':
                        break;
                    // 北京银行
                    case '20':
                        $banktype = 'BCCB';
                        break;
                    // 广州银行
                    case '21':
                        $banktype = '';
                        break;
                    // 中国银行
                    case '22':
                        $banktype = 'BOC';
                        break;
                    // 邮政储蓄
                    case '23':
                        $banktype = 'PSBS';
                        break;
                }

                $postData = array();
                $postData['appid'] = $cards[$card_id]["mer_no"];
                $postData['paytype'] = $banktype;
                $postData['paymoney'] = $deposit_amount;
                $postData['ordernumber'] = $shop_order_num;
                $postData['callbackurl'] = $callbackurl;

                $signSource = sprintf("appid=%s&paytype=%s&paymoney=%s&ordernumber=%s&callbackurl=%s%s", $postData['appid'], $postData['paytype'], $postData['paymoney'], $postData['ordernumber'], $postData['callbackurl'], $cards[$card_id]["mer_key"]);
                $postData['sign'] = md5($signSource);
                $apiUrl = $GLOBALS['cfg']['pay_url']['qianlongtong_api'];

                $postUrl = $apiUrl . "?paytype=" . $postData['paytype'];
                $postUrl .= "&appid=" . $postData['appid'];
                $postUrl .= "&paymoney=" . $postData['paymoney'];
                $postUrl .= "&ordernumber=" . $postData['ordernumber'];
                $postUrl .= "&callbackurl=" . $postData['callbackurl'];
                $postUrl .= "&sign=" . $postData['sign'];

                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
                $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    header("location:$postUrl");
                } else {
                    log2file('qianlongtongPay.log', $postData);
                    echo '生成订单失败';
                }

                die();
            }

            $postData = array();
            $postData['appid'] = $cards[$card_id]["mer_no"];
            $postData['paytype'] = $trade_type;
            $postData['paymoney'] = $deposit_amount;
            $postData['ordernumber'] = $shop_order_num;
            $postData['callbackurl'] = $callbackurl;

            $signSource = sprintf("appid=%s&paytype=%s&paymoney=%s&ordernumber=%s&callbackurl=%s%s", $postData['appid'], $postData['paytype'], $postData['paymoney'], $postData['ordernumber'], $postData['callbackurl'], $cards[$card_id]["mer_key"]);
            $postData['sign'] = md5($signSource);
            $apiUrl = $GLOBALS['cfg']['pay_url']['qianlongtong_api'];

            $postUrl = $apiUrl . "?paytype=" . $postData['paytype'];
            $postUrl .= "&appid=" . $postData['appid'];
            $postUrl .= "&paymoney=" . $postData['paymoney'];
            $postUrl .= "&ordernumber=" . $postData['ordernumber'];
            $postUrl .= "&callbackurl=" . $postData['callbackurl'];
            $postUrl .= "&sign=" . $postData['sign'];

            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
            $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            $data = array(
                'order_number' => $shop_order_num,
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (pay::addItem($data)) {
                header("location:$postUrl");
            } else {
                log2file('qianlongtongPay.log', $postData);
                echo '生成订单失败';
            }

            die();
        }

    }

    public function zhidebaoPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
        $card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
        $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }



        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');;

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $cards = cards::getItemsById(array($card_id));


            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
            $shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $trade_type = '';
            $banktype = '';

            if ($cards[$card_id]["netway"] == "QQ") {
                $trade_type = "tenpay_scan";
            } else if ($cards[$card_id]['netway'] == "QQ_WAP") {
                $trade_type = "qq_h5api";
            } else if ($cards[$card_id]['netway'] == "WX") {
                $trade_type = "weixin";
            } else if ($cards[$card_id]['netway'] == "WX_WAP") {
                $trade_type = "weixin_h5api";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $trade_type = "alipay_scan";
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $trade_type = "aliapi_h5api";
            } else if ($cards[$card_id]['netway'] == "WY") {
                $trade_type = "b2c";
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                switch ($third_party_bank_id){
                    // 工商银行
                    case '1':
                        $banktype = 'ICBC';
                        break;
                    // 农业银行
                    case '2':
                        $banktype = 'ABC';
                        break;
                    // 建设银行
                    case '3':
                        $banktype = 'CCB';
                        break;
                    // 招商银行
                    case '4':
                        $banktype = 'CMB';
                        break;
                    // 交通银行
                    case '5':
                        $banktype = 'BCOM';
                        break;
                    // 中信银行
                    case '6':
                        $banktype = 'ECITIC';
                        break;
                    case '7':
                        // 中国光大银行
                    case '8':
                        break;
                        $banktype = 'CEBB';
                        break;
                    // 民生银行
                    case '9':
                        $banktype = 'CMBC';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $banktype = 'SPDB';
                        break;
                    // 兴业银行
                    case '11':
                        $banktype = 'CIB';
                        break;
                    // 广发银行
                    case '12':
                        $banktype = 'GDB';
                        break;
                    // 平安银行
                    case '13':
                        $banktype = 'SPABANK';
                        break;
                    // 华夏银行
                    case '15':
                        $banktype = 'HXB';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        $banktype = 'CBHB';
                        break;
                    // 杭州银行
                    case '18':
                        $banktype = 'HZB';
                        break;
                    case '19':
                        break;
                    // 北京银行
                    case '20':
                        $banktype = 'BOB';
                        break;
                    // 广发银行
                    case '21':
                        $banktype = 'GDB';
                        break;
                    // 中国银行
                    case '22':
                        $banktype = 'BOC';
                        break;
                    //上海银行
                    case '23':
                        $banktype = 'SHB';
                        break;
                    //宁波银行
                    case '23':
                        $banktype = 'NBB';
                        break;
                    //邮政银行
                    case '24':
                        $banktype = 'PSBC';
                        break;
                }

                $postData = array();
                $postData['merchant_code'] = $cards[$card_id]["mer_no"];//
                $postData['service_type'] = 'direct_pay';//
                $postData['notify_url'] = $callbackurl;//
                $postData['interface_version'] = 'V3.0';//
                $postData['input_charset'] = 'UTF-8';//
                $postData['sign_type'] = 'RSA-S';
                $postData['return_url'] = $returnurl;//
                $postData['pay_type'] = $trade_type;//
                $postData['order_no'] = $shop_order_num;//
                $postData['order_time'] = date('Y-m-d h:i:s');//
                $postData['order_amount'] = $deposit_amount;//
                $postData['product_name'] = 'lucky';//
                $postData['extend_param'] = 'ship_to_name^ZhangSan|ship_to_email^Mal@sina.com|customer_phone^13498980909';//

                $merchant_private_key= openssl_get_privatekey($this->formatKey($cards[$card_id]['mer_key'], "private"));

                $signStr= "";
                $signStr = $signStr."extend_param=".$postData['extend_param']."&";//
                $signStr = $signStr."input_charset=".$postData['input_charset']."&";//
                $signStr = $signStr."interface_version=".$postData['interface_version']."&";//
                $signStr = $signStr."merchant_code=".$postData['merchant_code']."&";//
                $signStr = $signStr."notify_url=".$postData['notify_url']."&";//
                $signStr = $signStr."order_amount=".$postData['order_amount']."&";//
                $signStr = $signStr."order_no=".$postData['order_no']."&";//
                $signStr = $signStr."order_time=".$postData['order_time']."&";//
                $signStr = $signStr."pay_type=".$postData['pay_type']."&";//
                $signStr = $signStr."product_name=".$postData['product_name']."&";//
                $signStr = $signStr."return_url=".$postData['return_url']."&";//
                $signStr = $signStr."service_type=".$postData['service_type'];//

                @openssl_sign($signStr,$sign_info,$merchant_private_key,OPENSSL_ALGO_MD5);
                $postData['sign'] = base64_encode($sign_info);
                $postData['url'] = $GLOBALS['cfg']['pay_url']['zhidebao_api'];

                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
                $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    self::$view->setVar('postFields', $postData);
                    self::$view->render('pay_zhidebao');
                } else {
                    log2file('zhidebaoPay.log', $postData);
                    echo '生成订单失败';
                }

                die();
            }

            $postData = array();
            $postData['merchant_code'] = $cards[$card_id]["mer_no"];//
            $postData['service_type'] = 'direct_pay';//
            $postData['notify_url'] = $callbackurl;//
            $postData['interface_version'] = 'V3.0';//
            $postData['input_charset'] = 'UTF-8';//
            $postData['sign_type'] = 'RSA-S';
            $postData['return_url'] = $returnurl;//
            $postData['pay_type'] = $trade_type;//
            $postData['order_no'] = $shop_order_num;//
            $postData['order_time'] = date('Y-m-d h:i:s');//
            $postData['order_amount'] = $deposit_amount;//
            $postData['product_name'] = 'lucky';//
            $postData['extend_param'] = 'ship_to_name^ZhangSan|ship_to_email^Mal@sina.com|customer_phone^13498980909';//

            $merchant_private_key= openssl_get_privatekey($this->formatKey($cards[$card_id]['mer_key'], "private"));

            $signStr= "";
            $signStr = $signStr."extend_param=".$postData['extend_param']."&";//
            $signStr = $signStr."input_charset=".$postData['input_charset']."&";//
            $signStr = $signStr."interface_version=".$postData['interface_version']."&";//
            $signStr = $signStr."merchant_code=".$postData['merchant_code']."&";//
            $signStr = $signStr."notify_url=".$postData['notify_url']."&";//
            $signStr = $signStr."order_amount=".$postData['order_amount']."&";//
            $signStr = $signStr."order_no=".$postData['order_no']."&";//
            $signStr = $signStr."order_time=".$postData['order_time']."&";//
            $signStr = $signStr."pay_type=".$postData['pay_type']."&";//
            $signStr = $signStr."product_name=".$postData['product_name']."&";//
            $signStr = $signStr."return_url=".$postData['return_url']."&";//
            $signStr = $signStr."service_type=".$postData['service_type'];//

            @openssl_sign($signStr,$sign_info,$merchant_private_key,OPENSSL_ALGO_MD5);
            $postData['sign'] = base64_encode($sign_info);
            $postData['url'] = $GLOBALS['cfg']['pay_url']['zhidebao_api'];

            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
            $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            $data = array(
                'order_number' => $shop_order_num,
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (pay::addItem($data)) {
                self::$view->setVar('postFields', $postData);
                self::$view->render('pay_zhidebao');
            } else {
                log2file('zhidebaoPay.log', $postData);
                echo '生成订单失败';
            }

            die();
        }
    }

    public function quanyuPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
        $card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
        $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }


        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');;

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $cards = cards::getItemsById(array($card_id));


            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
            $shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $trade_type = '';

            if ($cards[$card_id]["netway"] == "QQ") {
                $trade_type = "4";
            } else if ($cards[$card_id]['netway'] == "KJ") {
                $trade_type = "5";
            } else if ($cards[$card_id]['netway'] == "WX") {
                $trade_type = "6";
            } else if ($cards[$card_id]['netway'] == "WX_WAP") {
                $trade_type = "7";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $trade_type = "1";
            }
            $postData = array();
            $postData['userId'] = $cards[$card_id]["mer_no"];
            $postData['amount'] = $deposit_amount;
            $postData['outOrderNo'] = $shop_order_num;
            $postData['notifyUrl'] = $callbackurl;
            $postData['frontUrl'] = $returnurl;
            $postData['body'] = 'lucky';
            $postData['payType'] = $trade_type;
            $qusign = $this->qypackageParams($postData);
            $postData['sign'] = md5($qusign . '&key=' . $cards[$card_id]['mer_key']);
            $body = $this->qypackageParams($postData);
            $apiurl = $GLOBALS['cfg']['pay_url']['quanyu_api'];
            $qyresult = $this->qycurlpost($apiurl, $body);

            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
            $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            $data = array(
                'order_number' => $shop_order_num,
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (pay::addItem($data)) {
                self::$view->setVar('postFields', $qyresult);
                self::$view->render('pay_quanyu');
                die();

            } else {
                log2file('quanyuPay.log', $postData);
                echo '生成订单失败';
            }

            die();
        }
    }


    public function qypackageParams($params){
        ksort($params);
        $index = 0;
        $body = '';
        foreach($params as $key => $value ){
            if($index != 0){
                $body .= "&";
            }
            $body .= $key . '=' . $value;
            $index++;
        }
        return $body;
    }

    public function qycurlpost($url,$post_data){
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch,CURLOPT_POST,1);
        curl_setopt($ch,CURLOPT_POSTFIELDS,$post_data);
        $output = curl_exec($ch);
        return $output;
    }

    public function kexunPay()
    {

        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
        $card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
        $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;


        if (time() > intval($time)) {
            die('交易超时，请刷新充值页面重新充值');
        }

        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));


        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }

        $cards = cards::getItemsById(array($card_id));


        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');


            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
            $card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
            $shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');


            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];


            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }


            $service_type = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['kexun_api'];

            if ($cards[$card_id]["netway"] == "WX") {
                $service_type = "1004";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $service_type = "101";
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $service_type = "1003";
            } else if ($cards[$card_id]['netway'] == "WX_WAP") {
                $service_type = "1005";
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $service_type = "1006";
            } else if ($cards[$card_id]['netway'] == "JD") {
                $service_type = "1010";
            } else if ($cards[$card_id]['netway'] == "QQ_WAP") {
                $service_type = "1007";
            } else if ($cards[$card_id]['netway'] === 'WY') {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bankId = '967';
                        break;
                    // 农业银行
                    case '2':
                        $bankId = '964';
                        break;
                    // 建设银行
                    case '3':
                        $bankId = '965';
                        break;
                    // 招商银行
                    case '4':
                        $bankId = '970';
                        break;
                    // 交通银行
                    case '5':
                        $bankId = '981';
                        break;
                    // 中信银行
                    case '6':
                        $bankId = '962';
                        break;
                    // 邮政储蓄
                    case '7':
                        $bankId = '971';
                        break;
                    // 中国光大银行
                    case '8':
                        $bankId = '986';
                        break;
                    // 民生银行
                    case '9':
                        $bankId = '980';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bankId = '977';
                        break;
                    // 兴业银行
                    case '11':
                        $bankId = '972';
                        break;
                    // 广发银行
                    case '12':
                        $bankId = '985';
                        break;
                    // 平安银行
                    case '13':
                        $bankId = '978';
                        break;
                    // 华夏银行
                    case '15':
                        $bankId = '982';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        break;
                    // 浙商银行
                    case '19':
                    $bankId = '968';
                        break;
                    // 北京银行
                    case '20':
                        $bankId = '989';
                        break;
                    // 广州银行
                    case '21':
                        break;
                    // 中国银行
                    case '22':
                        $bankId = '963';
                        break;
                    // 深圳发展银行
                    case '23':
                        $bankId = '974';
                        break;
                }
                $postData = array();
                $postData['parter'] = $cards[$card_id]['mer_no'];
                $postData['type'] = @$bankId;
                $postData['value'] = $deposit_amount;
                $postData['orderid'] = $shop_order_num;
                $postData['callbackurl'] = $callbackurl;
                $postData['hrefbackurl'] = $returnurl;

                $postData['sign'] = md5("parter=".$postData['parter'] ."&type=".$postData['type'] ."&value=". $postData['value']."&orderid=".$postData['orderid']."&callbackurl=".$postData['callbackurl'].$cards[$card_id]['mer_key']);

                $postData['url'] = $apiUrl;
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
                $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    self::$view->setVar('postFields', $postData);
                    self::$view->render('pay_kexun');
                } else {
                    log2file('kexunPay.log', $postData);
                    die('生成订单失败');
                }

                die();

            }

            $postData = array();
            $postData['parter'] = $cards[$card_id]['mer_no'];
            $postData['type'] = $service_type;
            $postData['value'] = $deposit_amount;
            $postData['orderid'] = $shop_order_num;
            $postData['callbackurl'] = $callbackurl;
            $postData['hrefbackurl'] = $returnurl;

            $postData['sign'] = md5("parter=".$postData['parter'] ."&type=".$postData['type'] ."&value=". $postData['value']."&orderid=".$postData['orderid']."&callbackurl=".$postData['callbackurl'].$cards[$card_id]['mer_key']);

            $postData['url'] = $apiUrl;
            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
            $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            $data = array(
                'order_number' => $shop_order_num,
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (pay::addItem($data)) {
                self::$view->setVar('postFields', $postData);
                self::$view->render('pay_kexun');
            } else {
                log2file('kexunPay.log', $postData);
                die('生成订单失败');
            }

            die();


        }
    }

    public function yafuPay()
    {

        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
        $card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
        $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');


        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }

        $hash = $this->request->getPost('hash', 'trim');
        $timePart1 = substr($hash, 0, 5);
        $timePart2 = substr($hash, 5 + 32, 5);
        $time = $timePart1 . $timePart2;


        if (time() > intval($time)) {
            die('交易超时，请刷新充值页面重新充值');
        }

        $new_hash = generateEnPwd($username . '_' . $user_id . '_' . $user_id . '_' . $username . '_' . date('Ymd'));


        if ($hash != $timePart1 . $new_hash . $timePart2) {
            die('系统出错！(错误码：6002)');
        }

        $cards = cards::getItemsById(array($card_id));


        if (count($cards) == 0) {
            die('系统出错！(错误码：6004)');
        }

        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');


            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $card_id = $this->request->getPost('card_id', 'trim');
            $card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');


            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
            $shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');


            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
            $domain = $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];


            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }


            $service_type = '';
            $apiUrl = $GLOBALS['cfg']['pay_url']['yafu_api'];

            if ($cards[$card_id]["netway"] == "QQ") {
                $service_type = "0502";
            } else if ($cards[$card_id]['netway'] == "QQ_WAP") {
                $service_type = "0503";
            } else if ($cards[$card_id]['netway'] == "YL") {
                $service_type = "0702";
            } else if ($cards[$card_id]['netway'] == "WX_WAP") {
                $service_type = "0901";
            } else if ($cards[$card_id]['netway'] == "WX") {
                $service_type = "0202";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $service_type = "0302";
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $service_type = "0303";
            } else if ($cards[$card_id]['netway'] == "JD") {
                $service_type = "0802";
            } else if ($cards[$card_id]['netway'] == "JD_WAP") {
                $service_type = "0803";
            } else if ($cards[$card_id]['netway'] === 'WY') {
                $service_type = "0101";
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                switch ($third_party_bank_id) {
                    // 工商银行
                    case '1':
                        $bankId = 'ICBC';
                        break;
                    // 农业银行
                    case '2':
                        $bankId = 'ABC';
                        break;
                    // 建设银行
                    case '3':
                        $bankId = 'CCB';
                        break;
                    // 招商银行
                    case '4':
                        $bankId = 'CMB';
                        break;
                    // 交通银行
                    case '5':
                        $bankId = 'BOCOM';
                        break;
                    // 中信银行
                    case '6':
                        $bankId = 'CITIC';
                        break;
                    // 邮政储蓄
                    case '7':
                        $bankId = 'PSBC';
                        break;
                    // 中国光大银行
                    case '8':
                        $bankId = 'CEB';
                        break;
                    // 民生银行
                    case '9':
                        $bankId = 'CMBC';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $bankId = 'SPDB';
                        break;
                    // 兴业银行
                    case '11':
                        $bankId = 'CIB';
                        break;
                    // 广发银行
                    case '12':
                        $bankId = 'GDB';
                        break;
                    // 平安银行
                    case '13':
                        $bankId = 'PAB';
                        break;
                    // 华夏银行
                    case '15':
                        $bankId = 'HXBC';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        $bankId = 'CBHB';
                        break;
                    // 浙商银行
                    case '19':
                        $bankId = '968';
                        break;
                    // 北京银行
                    case '20':
                        $bankId = 'BOBJ';
                        break;
                    // 广州银行
                    case '21':
                        break;
                    // 中国银行
                    case '22':
                        $bankId = 'BOC';
                        break;
                    // 深圳发展银行
                    case '23':
                        $bankId = '974';
                        break;
                }
                /*$postData = array();
                $postData['parter'] = $cards[$card_id]['mer_no'];
                $postData['type'] = @$bankId;
                $postData['value'] = $deposit_amount;
                $postData['orderid'] = $shop_order_num;
                $postData['callbackurl'] = $callbackurl;
                $postData['hrefbackurl'] = $returnurl;

                $postData['sign'] = md5("parter=".$postData['parter'] ."&type=".$postData['type'] ."&value=". $postData['value']."&orderid=".$postData['orderid']."&callbackurl=".$postData['callbackurl'].$cards[$card_id]['mer_key']);

                $postData['url'] = $apiUrl;
                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
                $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    self::$view->setVar('postFields', $postData);
                    self::$view->render('pay_kexun');
                } else {
                    log2file('kexunPay.log', $postData);
                    die('生成订单失败');
                }

                die();*/

            }

            $postData = array();
            $postData['version'] = "3.0";
            $postData['consumerNo'] = $cards[$card_id]['mer_no'];
            $postData['merOrderNo'] = $shop_order_num;
            $postData['transAmt'] = $deposit_amount;
            $postData['backUrl'] = $callbackurl;
            $postData['frontUrl'] = $returnurl;
            $postData['payType'] = $service_type;
            $postData['goodsName'] = "lucky";
            $postData['merRemark'] = 'thisisotherthings';//
            $postData['sign'] = $this->yfsignstr($postData,$cards[$card_id]['mer_key']);

            $jsonResponse = $this->curlPostData($apiUrl, http_build_query($postData), $info);
            $yfarray = json_decode($jsonResponse,true);
            if(!isset($yfarray['busContent'])){
               showMSG("返回值为空!");
          }
            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
            $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            $data = array(
                'order_number' => $shop_order_num,
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (pay::addItem($data)) {
                if (strstr($cards[$card_id]['netway'], "WAP") > -1) {
                    header("location:" . $yfarray['busContent']);
                    die();
                } else {
                        header("location:" . '../pay/qrcode.php?code=' . $yfarray['busContent'] . '&netway=' . $cards[$card_id]['netway'] . '&amount=' . $deposit_amount . "&cdn=" . parent::$PublicImgCdn);

                }
            } else {
                log2file('yafuPay.log', $postData);
                die('生成订单失败');
            }

            die();
        }
    }

    public function yfsignstr($paramers,$md5Key){
        ksort($paramers);

        //组装签名串
        $signstr = '';
        foreach ($paramers as $key=>$param){
            if(!empty($param))
                $signstr .= $key.'='.$param.'&';
        }

        //加上签名KEY
        $signstr .= 'key='.$md5Key;
        $yfsign = md5($signstr);
        return $yfsign;
    }

    public function fukatongPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
        $card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
        $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }



        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');;

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $cards = cards::getItemsById(array($card_id));


            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
            $shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $trade_type = '';
            $banktype = '';

            if ($cards[$card_id]["netway"] == "JD") {
                $trade_type = "6";
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $trade_type = "5";
            } else if ($cards[$card_id]['netway'] == "WX") {
                $trade_type = "2";
            } else if ($cards[$card_id]['netway'] == "KJ") {
                $trade_type = "1";
            } else if ($cards[$card_id]['netway'] == "WY") {
                $trade_type = "1";
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                switch ($third_party_bank_id){
                    // 工商银行
                    case '1':
                        $banktype = 'ICBC';
                        break;
                    // 农业银行
                    case '2':
                        $banktype = 'ABC';
                        break;
                    // 建设银行
                    case '3':
                        $banktype = 'CCB';
                        break;
                    // 招商银行
                    case '4':
                        $banktype = 'CMBC';
                        break;
                    // 交通银行
                    case '5':
                        $banktype = 'BOCOM';
                        break;
                    // 中信银行
                    case '6':
                        $banktype = 'ECITIC';
                        break;
                    // 邮政储蓄
                    case '7':
                        $banktype = 'PSBC';
                        break;
                    // 中国光大银行
                    case '8':
                        $banktype = 'CEBBANK';
                        break;
                    // 民生银行
                    case '9':
                        $banktype = 'CMBCS';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $banktype = 'SPDB';
                        break;
                    // 兴业银行
                    case '11':
                        $banktype = 'CIB';
                        break;
                    // 广发银行
                    case '12':
                        $banktype = 'CGB';
                        break;
                    // 平安银行
                    case '13':
                        $banktype = 'PINGAN';
                        break;
                    // 华夏银行
                    case '15':
                        $banktype = 'HXB';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        $banktype = 'CBHB';
                        break;
                    // 浙商银行
                    case '19':
                        break;
                    // 北京银行
                    case '20':
                        $banktype = 'BCCB';
                        break;
                    // 广州银行
                    case '21':
                        $banktype = '';
                        break;
                    // 中国银行
                    case '22':
                        $banktype = 'BOC';
                        break;
                    // 南京银行
                    case '23':
                        $banktype = 'NJCB';
                        break;
                    // 东亚银行
                    case '24':
                        $banktype = 'HKBEA';
                        break;
                    // 宁波银行
                    case '25':
                        $banktype = 'NBCB';
                        break;
                    //上海银行
                    case '26':
                        $banktype = 'BOS';
                        break;
                    //深圳发展银行
                    case '27':
                        $banktype = 'SDB';
                        break;

                }

                $postData = array();
                $postData['input_charset'] = "UTF-8";//
                $postData['inform_url'] = $callbackurl;//
                $postData['return_url'] = $returnurl;//
                $postData['pay_type'] = $trade_type;//
                $postData['bank_code'] = $banktype;//
                $postData['merchant_code'] = $cards[$card_id]["mer_no"];//
                $postData['order_no'] = $shop_order_num;//
                $encrypted = openssl_encrypt($deposit_amount,'aes-128-ecb',hex2bin($cards[$card_id]["mer_key"]),OPENSSL_RAW_DATA);
                $postData['order_amount'] = strtoupper(bin2hex($encrypted));//
                $postData['order_time'] = date('Y-m-d H:i:s', time());
                $postData['customer_ip'] = $this->getClientIp();//
                $postData['sign'] = MD5("bank_code=".$postData['bank_code']."&customer_ip=".$postData['customer_ip']."&inform_url=".$postData['inform_url']."&input_charset=".$postData['input_charset']."&merchant_code=".$postData['merchant_code']."&order_amount=".$postData['order_amount']."&order_no=".$postData['order_no']."&order_time=".$postData['order_time']."&pay_type=".$postData['pay_type']."&return_url=".$postData['return_url']."&key=".$cards[$card_id]["mer_key"]);

                $postData['url'] = $GLOBALS['cfg']['pay_url']['fukatong_api'];

                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
                $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    self::$view->setVar('postFields', $postData);
                    self::$view->render('pay_fukatong');
                } else {
                    log2file('fukatongPay.log', $postData);
                    echo '生成订单失败';
                }

                die();
            }

            $postData = array();
            $postData['input_charset'] = "UTF-8";//
            $postData['inform_url'] = $callbackurl;//
            $postData['return_url'] = $returnurl;//
            $postData['pay_type'] = $trade_type;//
            $postData['merchant_code'] = $cards[$card_id]["mer_no"];//
            $postData['order_no'] = $shop_order_num;//
            $encrypted = openssl_encrypt($deposit_amount,'aes-128-ecb',hex2bin($cards[$card_id]["mer_key"]),OPENSSL_RAW_DATA);
            $postData['order_amount'] = strtoupper(bin2hex($encrypted));//
            $postData['order_time'] = date('Y-m-d H:i:s', time());
            $postData['customer_ip'] = $this->getClientIp();//
            $postData['sign'] = MD5("customer_ip=".$postData['customer_ip']."&inform_url=".$postData['inform_url']."&input_charset=".$postData['input_charset']."&merchant_code=".$postData['merchant_code']."&order_amount=".$postData['order_amount']."&order_no=".$postData['order_no']."&order_time=".$postData['order_time']."&pay_type=".$postData['pay_type']."&return_url=".$postData['return_url']."&key=".$cards[$card_id]["mer_key"]);

            $postData['url'] = $GLOBALS['cfg']['pay_url']['fukatong_api'];

            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
            $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            $data = array(
                'order_number' => $shop_order_num,
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (pay::addItem($data)) {
                self::$view->setVar('postFields', $postData);
                self::$view->render('pay_fukatong');
            } else {
                log2file('fukatongPay.log', $postData);
                echo '生成订单失败';
            }

            die();

        }
    }

    public function hufuPay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
        $card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
        $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }



        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');;

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $cards = cards::getItemsById(array($card_id));


            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
            $shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $trade_type = '';
            $banktype = '';

            if ($cards[$card_id]["netway"] == "KJ") {
                $trade_type = "1005";
            } else if ($cards[$card_id]['netway'] == "WX") {
                $trade_type = "1004";
            } else if ($cards[$card_id]['netway'] == "WX_WAP") {
                $trade_type = "1007";
            } else if ($cards[$card_id]['netway'] == "QQ") {
                $trade_type = "1009";
            } else if ($cards[$card_id]['netway'] == "QQ_WAP") {
                $trade_type = "1008";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $trade_type = "1003";
            } else if ($cards[$card_id]['netway'] == "ZFB_WAP") {
                $trade_type = "1006";
            } else if ($cards[$card_id]['netway'] == "WY") {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                switch ($third_party_bank_id){
                    // 工商银行
                    case '1':
                        $banktype = '967';
                        break;
                    // 农业银行
                    case '2':
                        $banktype = '964';
                        break;
                    // 建设银行
                    case '3':
                        $banktype = '965';
                        break;
                    // 招商银行
                    case '4':
                        $banktype = '970';
                        break;
                    // 交通银行
                    case '5':
                        $banktype = '981';
                        break;
                    // 中信银行
                    case '6':
                        $banktype = '962';
                        break;
                    // 邮政储蓄
                    case '7':
                        $banktype = '971';
                        break;
                    // 中国光大银行
                    case '8':
                        $banktype = '986';
                        break;
                    // 民生银行
                    case '9':
                        $banktype = '980';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $banktype = '977';
                        break;
                    // 兴业银行
                    case '11':
                        $banktype = '972';
                        break;
                    // 广发银行
                    case '12':
                        $banktype = '985';
                        break;
                    // 平安银行
                    case '13':
                        $banktype = '978';
                        break;
                    // 华夏银行
                    case '15':
                        $banktype = '982';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        $banktype = '988';
                        break;
                    // 浙商银行
                    case '19':
                        $banktype = '968';
                        break;
                    // 北京银行
                    case '20':
                        $banktype = '989';
                        break;
                    // 广州银行
                    case '21':
                        $banktype = '';
                        break;
                    // 中国银行
                    case '22':
                        $banktype = '963';
                        break;
                    // 南京银行
                    case '23':
                        $banktype = '979';
                        break;
                    // 东亚银行
                    case '24':
                        $banktype = '987';
                        break;
                    // 宁波银行
                    case '25':
                        $banktype = 'NBCB';
                        break;
                    //上海银行
                    case '26':
                        $banktype = '975';
                        break;
                    //深圳发展银行
                    case '27':
                        $banktype = '974';
                        break;

                }

                $postData = array();
                $postData['parter'] = $cards[$card_id]["mer_no"];
                $postData['type'] = $banktype;
                $postData['value'] = $deposit_amount;//
                $postData['orderid'] = $shop_order_num;//
                $postData['callbackurl'] = $callbackurl;//
                $postData['hrefbackurl'] = $returnurl;//

                $postData['sign'] = md5("parter={$postData['parter']}&type={$postData['type']}&value={$postData['value']}&orderid={$postData['orderid']}&callbackurl={$postData['callbackurl']}{$cards[$card_id]["mer_key"]}");
                $apiurl = $GLOBALS['cfg']['pay_url']['hufu_api'];
                $hfurl = $apiurl."?parter=".$postData['parter']."&type=".$postData['type']."&value=".$postData['value']."&orderid=".$postData['orderid']."&callbackurl=".$postData['callbackurl']."&hrefbackurl=".$postData['hrefbackurl']."&sign=".$postData['sign'];

                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
                $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    header("location:$hfurl");
                    die();
                } else {
                    log2file('hufuPay.log', $postData);
                    echo '生成订单失败';
                }

                die();
            }

            $postData = array();
            $postData['parter'] = $cards[$card_id]["mer_no"];
            $postData['type'] = $trade_type;
            $postData['value'] = $deposit_amount;//
            $postData['orderid'] = $shop_order_num;//
            $postData['callbackurl'] = $callbackurl;//
            $postData['hrefbackurl'] = $returnurl;//

            $postData['sign'] = md5("parter={$postData['parter']}&type={$postData['type']}&value={$postData['value']}&orderid={$postData['orderid']}&callbackurl={$postData['callbackurl']}{$cards[$card_id]["mer_key"]}");
            $apiurl = $GLOBALS['cfg']['pay_url']['hufu_api'];
            $hfurl = $apiurl."?parter=".$postData['parter']."&type=".$postData['type']."&value=".$postData['value']."&orderid=".$postData['orderid']."&callbackurl=".$postData['callbackurl']."&hrefbackurl=".$postData['hrefbackurl']."&sign=".$postData['sign'];

            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
            $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            $data = array(
                'order_number' => $shop_order_num,
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (pay::addItem($data)) {
                header("location:$hfurl");
                die();
            } else {
                log2file('hufuPay.log', $postData);
                echo '生成订单失败';
            }

            die();
        }
    }

    public function safePay()
    {
        $username = $this->request->getPost('username', 'trim');
        $user_id = $this->request->getPost('user_id', 'intval');
        $card_id = $this->request->getPost('card_id', 'trim');
        $card_id = authcode($card_id, 'DECODE', 'a6sbe!x4^5d_ghd');
        $bank_id = $this->request->getPost('bank_id', 'trim');
        $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

        if ($card_id == '') {
            die('系统出错！(错误码：6003)');
        }



        if ($username != '' && $user_id != '') {
            $codes = $this->request->getPost('codes', 'trim');;

            if (!$merchantSN = authcode($codes, 'DECODE', 'a6sbe!x4^5d_ghd')) {
                die('系统出错！(错误码：6000)');
            }

            if ($merchantSN != substr($username, -5) . substr($username, 0, 1) . $user_id) {
                die('系统出错！(错误码：6001)');
            }

            $cards = cards::getItemsById(array($card_id));


            if (count($cards) == 0) {
                die('系统出错！(错误码：6004)');
            }

            $shop_order_num = $this->request->getPost('shop_order_num', 'trim');
            $shop_order_num = authcode($shop_order_num, 'DECODE', 'a6sbe!x4^5d_ghd');
            $deposit_amount = $this->request->getPost('deposit_amount', 'floatval');

            $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']),'https') == false ? 'http' : 'https';
            $domain =  $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'] . '/';
            $payName = $GLOBALS['cfg']['pay_name'][$bank_id];
            $shop_url = $cards[$card_id]['shop_url'];
            $callbackurl = $cards[$card_id]['call_back_url'];
            $returnurl = $cards[$card_id]['return_url'];

            if ($shop_url == "") {
                $callbackurl = $domain . 'pay/' . $payName . 'Back.php';
                $returnurl = $domain . 'pay/hrefback.php';
            } else if (strpos($shop_url, '?c=pay') === 0) {

            } else if (strpos($shop_url, '?c=pay') > 0) {

            } else {
                $callbackurl = $shop_url . '/pay/' . $payName . 'Back.php';
                $returnurl = $shop_url . '/hrefback.php';
            }

            $trade_type = '';
            $banktype = '';

            if ($cards[$card_id]["netway"] == "WX") {
                $trade_type = "00";
            } else if ($cards[$card_id]['netway'] == "ZFB") {
                $trade_type = "04";
            } else if ($cards[$card_id]['netway'] == "WY") {
                $third_party_bank_id = $this->request->getPost('third_party_bank_id', 'intval');
                switch ($third_party_bank_id){
                    // 工商银行
                    case '1':
                        $banktype = 'R';
                        break;
                    // 农业银行
                    case '2':
                        $banktype = 'U';
                        break;
                    // 建设银行
                    case '3':
                        $banktype = 'T';
                        break;
                    // 招商银行
                    case '4':
                        $banktype = 'P';
                        break;
                    // 交通银行
                    case '5':
                        $banktype = 'F';
                        break;
                    // 中信银行
                    case '6':
                        $banktype = 'W';
                        break;
                    // 邮政储蓄
                    case '7':
                        $banktype = 'O';
                        break;
                    // 中国光大银行
                    case '8':
                        $banktype = 'S';
                        break;
                    // 民生银行
                    case '9':
                        $banktype = 'G';
                        break;
                    // 上海浦东发展银行
                    case '10':
                        $banktype = 'I';
                        break;
                    // 兴业银行
                    case '11':
                        $banktype = 'N';
                        break;
                    // 广发银行
                    case '12':
                        $banktype = 'B';
                        break;
                    // 平安银行
                    case '13':
                        $banktype = 'H';
                        break;
                    // 华夏银行
                    case '15':
                        $banktype = 'E';
                        break;
                    // 东莞银行
                    case '16':
                        break;
                    // 渤海银行
                    case '17':
                        $banktype = 'AC';
                        break;
                    // 浙商银行
                    case '19':
                        $banktype = '968';
                        break;
                    // 北京银行
                    case '20':
                        $banktype = 'A';
                        break;
                    // 广州银行
                    case '21':
                        $banktype = '';
                        break;
                    // 中国银行
                    case '22':
                        $banktype = 'V';
                        break;
                    // 南京银行
                    case '23':
                        $banktype = '979';
                        break;
                    // 东亚银行
                    case '24':
                        $banktype = 'AB';
                        break;
                    // 宁波银行
                    case '25':
                        $banktype = 'AA';
                        break;
                    //上海银行
                    case '26':
                        $banktype = 'Z';
                        break;
                    //深圳发展银行
                    case '27':
                        $banktype = 'K';
                        break;

                }

                $postData = array();
                $postData['userID'] = $cards[$card_id]["mer_no"];
                $postData['orderId'] = $shop_order_num;//
                $postData['amt'] = $deposit_amount;//
                $postData['bank'] = $banktype;
                $postData['name'] = $shop_order_num;//
                $postData['url'] = $callbackurl;//
                $postData['cur'] = "1";
                $postData['hmac'] = md5($postData['userID']."&".$postData['orderId']."&".$postData['amt']."&".$cards[$card_id]["mer_key"]);
                $postData['userip'] = $this->getClientIp();//获取IP
                $postData['agent'] = $_SERVER["HTTP_USER_AGENT"];

                $apiurl = $GLOBALS['cfg']['pay_url']['safe_api'];

                $strTemp = $apiurl."?userID=".$postData['userID']."&orderId=".$postData['orderId']."&amt=".$postData['amt']."&bank=".$postData['bank']."&name=".$postData['name']."&cur=".$postData['cur']."&userip=".$postData['userip']."&hmac=".$postData['hmac']."&url=".$postData['url'];

                $url = $this->spgetPageContent($strTemp,8000,$postData['agent']);

                if($url == "" || strpos($url,"error:") > 0){
                    showMSG("获取支付链接失败!");
                }else{
                    $murl =  substr($url,strpos($url,"[")+1,strpos($url,"]")-5);
                }

                $requestURI = $this->request->getPost('requestURI', 'trim');
                $bank_id = $this->request->getPost('bank_id', 'trim');
                $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

                $data = array(
                    'order_number' => $shop_order_num,
                    'user_id' => $user_id,
                    'username' => $username,
                    'amount' => $deposit_amount,
                    'pay_time' => date('Y-m-d H:i:s'),
                    'source' => $_SERVER['HTTP_HOST'],
                    'requestURI' => $requestURI,
                    'card_id' => $card_id,
                    'bank_id' => $bank_id,
                );

                if (pay::addItem($data)) {
                    header("location:$murl");
                    die();
                } else {
                    log2file('safePay.log', $postData);
                    echo '生成订单失败';
                }

                die();
            }

            $postData = array();
            $postData['userID'] = $cards[$card_id]["mer_no"];
            $postData['orderId'] = $shop_order_num;//
            $postData['amt'] = $deposit_amount;//
            $postData['bank'] = $trade_type;
            $postData['name'] = $shop_order_num;//
            $postData['url'] = $callbackurl;//
            $postData['cur'] = "1";
            $postData['hmac'] = md5($postData['userID']."&".$postData['orderId']."&".$postData['amt']."&".$cards[$card_id]["mer_key"]);
            $postData['userip'] = $this->getClientIp();//获取IP
            $postData['agent'] = $_SERVER["HTTP_USER_AGENT"];

            $apiurl = $GLOBALS['cfg']['pay_url']['safe_api'];

            $strTemp = $apiurl."?userID=".$postData['userID']."&orderId=".$postData['orderId']."&amt=".$postData['amt']."&bank=".$postData['bank']."&name=".$postData['name']."&cur=".$postData['cur']."&userip=".$postData['userip']."&hmac=".$postData['hmac']."&url=".$postData['url'];

            $url = $this->spgetPageContent($strTemp,8000,$postData['agent']);

            if($url == "" || strpos($url,"error:") > 0){
                showMSG("获取支付链接失败!");
            }else{
                $murl =  substr($url,strpos($url,"[")+1,strpos($url,"]")-5);
            }

            $requestURI = $this->request->getPost('requestURI', 'trim');
            $bank_id = $this->request->getPost('bank_id', 'trim');
            $bank_id = authcode($bank_id, 'DECODE', 'a6sbe!x4^5d_ghd');

            $data = array(
                'order_number' => $shop_order_num,
                'user_id' => $user_id,
                'username' => $username,
                'amount' => $deposit_amount,
                'pay_time' => date('Y-m-d H:i:s'),
                'source' => $_SERVER['HTTP_HOST'],
                'requestURI' => $requestURI,
                'card_id' => $card_id,
                'bank_id' => $bank_id,
            );

            if (pay::addItem($data)) {
                header("location:$murl");
                die();
            } else {
                log2file('safePay.log', $postData);
                echo '生成订单失败';
            }

            die();
        }
    }

    public function spgetPageContent($url,$stime,$agent){
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_HEADER, false);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_HTTPGET, true);
        curl_setopt($ch, CURLOPT_USERAGENT, $agent);
        curl_setopt($ch, CURLOPT_TIMEOUT, $stime);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
        curl_setopt($ch, CURLOPT_FAILONERROR, 0);
        $response = curl_exec($ch);
        return $response;
    }

    public function shunfuBack()
    {
        $response = str_replace('data=', '', file_get_contents('php://input'));

        if ($response ===  '') {
            die('参数错误1');
        }

        $response = json_decode($response, true);

        if ($response ===  null) {
            die('参数错误2');
        }

        if (!isset($response['amount'])) {
            die('参数错误3');
        }

        $orderAmount = (int)$response['amount'] / 100;

        if (!isset($response['orderNo'])) {
            die('参数错误4');
        }

        $orderNo = $response['orderNo'];
        $tradeNo = $response['orderNo'];
        $card_id = explode("_", $orderNo)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

        if ($this->shunfuCheckSign($response, $card['mer_key'])) {
            $order = pay::getItemByOrderNumber($orderNo);

            if ($response['resultCode'] == '00') {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', '000000', $orderAmount, $orderNo, $tradeNo, $order);
            } else {
                $this->logdump("failed!交易失败码:{$response['resultCode']},用户名{$order['username']} 交易订单{$tradeNo} 金额{$order['amount']} ");
                echo '-1';
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function xiongmaoBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            die('参数错误1');
        }

        $response = json_decode($response, true);

        if ($response ===  null) {
            die('参数错误2');
        }

        if (!isset($response['amount'])) {
            die('参数错误3');
        }

        $orderAmount = (int)$response['amount'] / 100;

        if(!isset($response['requestId'])) {
            die('参数错误4');
        }

        $orderNo = $response['requestId'] != null ? $response['requestId'] : '';

        if(!isset($response['payNo'])) {
            die('参数错误5');
        }

        $tradeNo = $response['payNo'] != null ? $response['payNo'] : '';
        $card_id = explode("_", $orderNo)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

        if ($this->xiongmaoCheckSign($response, $card['mer_key'])) {
            $order = pay::getItemByOrderNumber($orderNo);

            if ($response['ordersts'] == 'S') {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'ok', $orderAmount, $orderNo, $tradeNo, $order);
            } else {
                $this->logdump("failed!交易失败码:{$response['returnCode']},用户名{$order['username']} 交易订单{$tradeNo} 金额{$order['amount']} ");
                echo '-1';
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function renxinBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            $this->logdump('参数错误0');
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["paymoney"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $orderAmount = $response["paymoney"];

        if (!isset($response["ordernumber"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $orderNo = $response["ordernumber"];

        if (!isset($response["sysnumber"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $tradeNo = $response['sysnumber'];
        $card_id = explode("_", $orderNo)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

        if ($this->renxinCheckSign($response, $card['mer_key'])) {
            $order = pay::getItemByOrderNumber($orderNo);

            if ($response['orderstatus'] == '1') {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'ok', $orderAmount, $orderNo, $tradeNo, $order);
            } else {
                $this->logdump("failed!交易失败码:{$response['orderstatus']},用户名{$order['username']} 交易订单{$tradeNo} 金额{$order['amount']} ");
                echo '-1';
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function gaotongBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["partner"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $partner = $response["partner"];

        if (!isset($response["ordernumber"])) {
            die('参数错误2');
            $this->logdump('参数错误2');
        }

        $ordernumber = $response["ordernumber"];

        if (!isset($response["orderstatus"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $orderstatus = $response['orderstatus'];

        if (!isset($response["paymoney"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $paymoney = $response['paymoney'];

        if (!isset($response["sysnumber"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $sysnumber = $response['sysnumber'];

        if (!isset($response["attach"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $attach = $response['attach'];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }

        $sign = $response['sign'];

        $card_id = explode("_", $ordernumber)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

        if (empty($card)) {
            $this->logdump('非法数据');
            die('非法数据');
        }

        if ($this->gaotongCheckSign($response, $card['mer_key'])) {
            $order = pay::getItemByOrderNumber($ordernumber);

            if ($response['orderstatus'] == '1') {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'ok', $paymoney, $ordernumber, $sysnumber, $order);
            } else {
                $this->logdump("failed!交易失败码:{$response['orderstatus']},用户名{$order['username']} 交易订单{$sysnumber} 金额{$order['amount']} ");
                echo '-1';
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function luoboBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["orderid"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $orderid = $response["orderid"];

        if (!isset($response["opstate"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $opstate = $response["opstate"];

        if (!isset($response["ovalue"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $ovalue = $response['ovalue'];

        if (!isset($response["ekaorderid"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $ekaorderid = $response['ekaorderid'];

        if (!isset($response["ekatime"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $ekatime = $response['ekatime'];

        if (!isset($response["attach"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $attach = $response['attach'];

        if (!isset($response["msg"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }

        $msg = $response['msg'];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }

        $sign = $response['sign'];

        $card_id = explode("_", $orderid)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

        if ($this->checkLuoBoSign($response, $card['mer_key'])) {
            $order = pay::getItemByOrderNumber($orderid);

            if ($response['opstate'] == "0") {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'opstate=0', $ovalue, $orderid, $ekaorderid, $order);
            } else {
                $this->logdump("failed!交易失败码:{$response['orderstatus']},用户名{$order['username']} 交易订单{$ekaorderid} 金额{$order['amount']} ");
                echo 'opstate=-1';
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function jinfukaBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["sign"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $sign = $response["sign"];

        if (!isset($response["merId"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $merId = $response["merId"];

        if (!isset($response["encParam"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $encParam = $response['encParam'];

        if (!isset($response["orderId"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $orderId = $response['orderId'];

        if (!isset($response["version"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $version = $response['version'];
        $card_id = explode("_", $orderId)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['card_pass']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $merInfos = explode('|', $card['card_pass']);

        if ($this->jinfukaSign($response, $card['mer_key'], $card['card_pass'])) {
            $res = json_decode($this->decrypt($encParam, $card['mer_key']),true);
            $order = pay::getItemByOrderNumber($orderId);

            if ($res['order_state'] == "1003") {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'SUCCESS', $res['money'] / 100, $orderId, $res['payOrderId'], $order);
            } else {
                $this->logdump("failed!交易失败码:{$res['order_state']},用户名{$order['username']} 交易订单{$res['payOrderId']} 金额{$order['amount']} ");
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function zhifuBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["merchant_code"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $merchant_code = $response["merchant_code"];

        if (!isset($response["notify_type"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $notify_type = $response["notify_type"];

        if (!isset($response["notify_id"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $notify_id = $response['notify_id'];

        if (!isset($response["interface_version"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $interface_version = $response['interface_version'];

        if (!isset($response["sign_type"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $sign_type = $response['sign_type'];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $sign =  base64_decode($response['sign']);

        if (!isset($response["order_no"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }

        $order_no =  $response['order_no'];

        if (!isset($response["order_time"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }

        $order_time =  $response['order_time'];

        if (!isset($response["order_amount"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }

        $order_amount =  $response['order_amount'];

        if (!isset($response["trade_no"])) {
            $this->logdump('参数错误10');
            die('参数错误10');
        }

        $trade_no =  $response['trade_no'];

        if (!isset($response["trade_time"])) {
            $this->logdump('参数错误11');
            die('参数错误11');
        }

        $trade_time =  $response['trade_time'];

        if (!isset($response["trade_status"])) {
            $this->logdump('参数错误11');
            die('参数错误11');
        }

        $trade_status =  $response['trade_status'];
        $bank_seq_no = isset($response["bank_seq_no"]) ? $response["bank_seq_no"] : "";
        $signStr = "";

        if($bank_seq_no != ""){
            $signStr = $signStr."bank_seq_no=" . $bank_seq_no."&";
        }

        $signStr = $signStr . "interface_version=" . $interface_version . "&";
        $signStr = $signStr . "merchant_code=" . $merchant_code . "&";
        $signStr = $signStr . "notify_id=" . $notify_id . "&";
        $signStr = $signStr . "notify_type=" . $notify_type . "&";
        $signStr = $signStr . "order_amount=" . $order_amount . "&";
        $signStr = $signStr . "order_no=" . $order_no . "&";
        $signStr = $signStr . "order_time=" . $order_time . "&";
        $signStr = $signStr . "trade_no=" . $trade_no . "&";
        $signStr = $signStr . "trade_status=" . $trade_status . "&";
        $signStr = $signStr . "trade_time=" . $trade_time;

        $card_id = explode("_", $order_no)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['card_pass']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $dinpay_public_key = openssl_get_publickey($this->formatKey($card['card_pass']));
        $flag = openssl_verify($signStr, $sign, $dinpay_public_key, OPENSSL_ALGO_MD5);

        if ($flag) {
            $order = pay::getItemByOrderNumber($order_no);

            if ($trade_status == "SUCCESS") {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'SUCCESS', $order_amount, $order_no, $trade_no, $order);
            } else {
                $this->logdump("failed!交易失败码:{$trade_status},用户名{$order['username']} 交易订单{$trade_no} 金额{$order['amount']} ");
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function duodebaoBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["merchant_code"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $merchant_code = $response["merchant_code"];

        if (!isset($response["notify_type"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $notify_type = $response["notify_type"];

        if (!isset($response["notify_id"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $notify_id = $response['notify_id'];

        if (!isset($response["interface_version"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $interface_version = $response['interface_version'];

        if (!isset($response["sign_type"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $sign_type = $response['sign_type'];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $sign =  base64_decode($response['sign']);

        if (!isset($response["order_no"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }

        $order_no =  $response['order_no'];

        if (!isset($response["order_time"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }

        $order_time =  $response['order_time'];

        if (!isset($response["order_amount"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }

        $order_amount =  $response['order_amount'];

        if (!isset($response["trade_no"])) {
            $this->logdump('参数错误11');
            die('参数错误11');
        }

        $trade_no =  $response['trade_no'];

        if (!isset($response["trade_time"])) {
            $this->logdump('参数错误12');
            die('参数错误12');
        }

        $trade_time =  $response['trade_time'];

        if (!isset($response["trade_status"])) {
            $this->logdump('参数错误13');
            die('参数错误13');
        }

        $trade_status =  $response['trade_status'];

        $signStr = "";

        $bank_seq_no =  isset($response['bank_seq_no']) ? $response['bank_seq_no'] : '';

        if($bank_seq_no != ""){
            $signStr = $signStr."bank_seq_no=" . $bank_seq_no."&";
        }

        $signStr = $signStr . "interface_version=" . $interface_version . "&";
        $signStr = $signStr . "merchant_code=" . $merchant_code . "&";
        $signStr = $signStr . "notify_id=" . $notify_id . "&";
        $signStr = $signStr . "notify_type=" . $notify_type . "&";
        $signStr = $signStr . "order_amount=" . $order_amount . "&";
        $signStr = $signStr . "order_no=" . $order_no . "&";
        $signStr = $signStr . "order_time=" . $order_time . "&";

        $orginal_money =  isset($response["orginal_money"]) ? $response["orginal_money"]:"";

        if($orginal_money != ""){
            $signStr = $signStr."orginal_money=" . $orginal_money."&";
        }

        $signStr = $signStr . "trade_no=" . $trade_no . "&";
        $signStr = $signStr . "trade_status=" . $trade_status . "&";
        $signStr = $signStr . "trade_time=" . $trade_time;

        $card_id = explode("DDB", $order_no)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['card_pass']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $dinpay_public_key = openssl_get_publickey($this->formatKey($card['card_pass']));
        $flag = openssl_verify($signStr, $sign, $dinpay_public_key, OPENSSL_ALGO_MD5);

        if ($flag) {
            $order = pay::getItemByOrderNumber($order_no);

            if ($trade_status == "SUCCESS") {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'SUCCESS', $order_amount, $order_no, $trade_no, $order);
            } else {
                $this->logdump("failed!交易失败码:{$trade_status},用户名{$order['username']} 交易订单{$trade_no} 金额{$order['amount']} ");
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function qicaiBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["company_oid"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $company_oid = $response['company_oid'];

        if (!isset($response["order_id"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $order_id =  $response['order_id'];

        if (!isset($response["order_qhqc"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }

        $order_qhqc =  $response['order_qhqc'];

        if (!isset($response["money_sum"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }

        $money_sum =  $response['money_sum'];

        if (!isset($response["pay_type"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }

        $pay_type =  $response['pay_type'];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误10');
            die('参数错误10');
        }

        $sign =  $response['sign'];

        $status = isset($response['status']) ? isset($response['status']) : isset($response['order_status']);
        $card_id = explode("_", $order_id)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['card_pass']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $key = openssl_get_publickey($this->formatRSAKey($card['card_pass']));

        if ($this->checkQiCaiSign($_POST, $key)) {
            $order = pay::getItemByOrderNumber($order_id);

            if ($status == "ok" || $status =='success') {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'ok', $money_sum, $order_id, $order_qhqc, $order);
            } else {
                $this->logdump("failed!交易失败码:{$status},用户名{$order['username']} 交易订单{$order_qhqc} 金额{$order['amount']} ");
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function shunbaoBack()
    {
        if (file_get_contents('php://input') === '') {
            die("参数错误1");
        }

        $response = array();
        parse_str(file_get_contents('php://input'), $response);

        if(!isset($response["amount"])) {
            die('参数错误2');
        }

        $orderAmount = $response["amount"];

        if(!isset($response["orderNo"])) {
            die('参数错误3');
        }

        $orderNo = $response["orderNo"];

        if(!isset($response["transactionNo"])) {
            die('参数错误4');
        }

        $tradeNo = $response['transactionNo'];
        $card_id = explode("_", $orderNo)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

        if ($this->shunbaoCheckSign($response, $card['mer_key'])) {
            $order = pay::getItemByOrderNumber($orderNo);
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->bak('gs4fj@5f!sda*dfuf', 'SUCCESS', $orderAmount, $orderNo, $tradeNo, $order);
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function yifuBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["tradeNumber"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $tradeNumber = $response["tradeNumber"];

        if (!isset($response["timeStart"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $timeStart = $response["timeStart"];

        if (!isset($response["totalFee"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $totalFee = $response['totalFee'];

        if (!isset($response["payStatus"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $payStatus = $response['payStatus'];

        if (!isset($response["merchantNo"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $merchantNo = $response['merchantNo'];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $sign =  $response['sign'];

        $card_id = substr($tradeNumber,12,8);
        $card_id = (int)$card_id;
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $newSign = $this->getYiFuSign($response, $card['mer_key']);

        if ($sign == $newSign) {
            $order = pay::getItemByOrderNumber($tradeNumber);

            if ($payStatus == "1001") {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'SUCCESS', $totalFee, $tradeNumber, $tradeNumber, $order);
            } else {
                $this->logdump("failed!交易失败码:{$payStatus},用户名{$order['username']} 交易订单{$tradeNumber} 金额{$order['amount']} ");
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function yifutongdaoBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["merNo"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $merNo = $response["merNo"];

        if (!isset($response["orderNo"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $orderNo = $response["orderNo"];

        if (!isset($response["transAmt"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $transAmt = number_format(floatval($response['transAmt'] / 100), 2, '.', '');

        if (!isset($response["realRequestAmt"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $realRequestAmt = number_format(floatval($response['realRequestAmt'] / 100), 2, '.', '');

        if (!isset($response["orderDate"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $orderDate = $response['orderDate'];

        if (!isset($response["respCode"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $respCode =  $response['respCode'];

        if (!isset($response["respDesc"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $respDesc =  $response['respDesc'];

        if (!isset($response["payId"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $payId =  $response['payId'];

        if (!isset($response["payId"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $payId =  $response['payId'];

        if (!isset($response["signature"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $signature =  $response['signature'];

        $card_id = explode("_", $orderNo)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $newSign = $this->getYiFuTongDaoBackSign($response, $card['mer_key']);

        if ($signature == $newSign) {
            $order = pay::getItemByOrderNumber($orderNo);

            if ($respCode == "0000") {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'SUCCESS', $transAmt, $orderNo, $payId, $order);
            } else {
                $this->logdump("failed!交易失败码:{$respCode},用户名{$order['username']} 交易订单{$payId} 金额{$order['amount']} ");
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function kaolaBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["merno"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $merno = $response['merno'];

        if (!isset($response["version"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $version =  $response['version'];

        if (!isset($response["order_date"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $order_date =  $response['order_date'];

        if (!isset($response["out_trade_no"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $out_trade_no =  $response['out_trade_no'];

        if (!isset($response["order_id"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $order_id =  $response['order_id'];

        if (!isset($response["total_fee"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $total_fee =  $response['total_fee'] / 100;

        if (!isset($response["notify_url"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }

        $notify_url =  $response['notify_url'];

        if (!isset($response["return_url"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }

        $return_url =  $response['return_url'];

        if (!isset($response["trade_type"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }

        $trade_type =  $response['trade_type'];

        if (!isset($response["pay_status"])) {
            $this->logdump('参数错误10');
            die('参数错误10');
        }

        $pay_status =  $response['pay_status'];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误11');
            die('参数错误11');
        }

        $sign =  $response['sign'];
        $card_id = explode("KL", $out_trade_no)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['card_pass']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $key = openssl_get_publickey($this->formatKey($card['card_pass']));

        if ($this->checkKaoLaSign($response, $key)) {
            $order = pay::getItemByOrderNumber($out_trade_no);

            if ($pay_status == "1") {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'SUCCESS', $total_fee, $out_trade_no, $order_id, $order);
            } else {
                $this->logdump("failed!交易失败码:{$pay_status},用户名{$order['username']} 交易订单{$order_id} 金额{$order['amount']} ");
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function wangfutongBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["MerId"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $MerId = $response['MerId'];

        if (!isset($response["OrdId"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $OrdId =  $response['OrdId'];

        if (!isset($response["OrdAmt"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $OrdAmt =  $response['OrdAmt'];

        if (!isset($response["OrdNo"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $OrdNo =  $response['OrdNo'];

        if (!isset($response["ResultCode"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $ResultCode =  $response['ResultCode'];

        if (!isset($response["Remark"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $Remark =  $response['Remark'];

        if (!isset($response["SignType"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }

        $SignType =  $response['SignType'];

        if (!isset($response["SignInfo"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }

        $SignInfo =  $response['SignInfo'];
        $card_id = explode("_", $OrdId)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

        if ($this->checkWangFuTongSign($response, $card['mer_key'])) {
            $order = pay::getItemByOrderNumber($OrdId);

            if ($ResultCode == "success002") {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'success|9999', $OrdAmt, $OrdId, $OrdNo, $order);
            } else {
                $this->logdump("failed!交易失败码:{$ResultCode},用户名{$order['username']} 交易订单{$OrdNo} 金额{$order['amount']} ");
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function wanzhongyunBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["version"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $version =  $response['version'];

        if (!isset($response["charset"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $charset =  $response['charset'];

        if (!isset($response["sign_type"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $sign_type =  $response['sign_type'];

        if (!isset($response["status"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $status =  $response['status'];

        if($status != '0') {
            $this->logdump('失败');
            die('失败');
        }

        if (!isset($response["result_code"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $result_code =  $response['result_code'];

        if (!isset($response["mch_id"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }

        $mch_id =  $response['mch_id'];

        if (!isset($response["nonce_str"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }

        $nonce_str =  $response['nonce_str'];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }

        $sign =  $response['sign'];

        if ($result_code != "0") {
            $this->logdump('交易失败');
            die('交易失败');
        }

        if (!isset($response["openid"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }

        $openid =  $response['openid'];

        if (!isset($response["trade_type"])) {
            $this->logdump('参数错误10');
            die('参数错误10');
        }

        $trade_type =  $response['trade_type'];

        if (!isset($response["is_subscribe"])) {
            $this->logdump('参数错误11');
            die('参数错误11');
        }

        $is_subscribe=  $response['is_subscribe'];

        if (!isset($response["pay_result"])) {
            $this->logdump('参数错误12');
            die('参数错误12');
        }

        $pay_result =  $response['pay_result'];

        if (!isset($response["transaction_id"])) {
            $this->logdump('参数错误13');
            die('参数错误13');
        }

        $transaction_id =  $response['transaction_id'];

        if (!isset($response["out_transaction_id"])) {
            $this->logdump('参数错误14');
            die('参数错误14');
        }

        $out_transaction_id =  $response['out_transaction_id'];

        if (!isset($response["out_trade_no"])) {
            $this->logdump('参数错误15');
            die('参数错误15');
        }

        $out_trade_no =  $response['out_trade_no'];

        if (!isset($response["total_fee"])) {
            $this->logdump('参数错误16');
            die('参数错误16');
        }

        $total_fee =  $response['total_fee'] / 100;

        if (!isset($response["fee_type"])) {
            $this->logdump('参数错误17');
            die('参数错误17');
        }

        $fee_type =  $response['fee_type'];

        if (!isset($response["bank_type"])) {
            $this->logdump('参数错误18');
            die('参数错误18');
        }

        $bank_type =  $response['bank_type'];

        if (!isset($response["time_end"])) {
            $this->logdump('参数错误19');
            die('参数错误19');
        }

        $time_end =  $response['time_end'];

        $card_id = explode("_", $out_trade_no)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

        if (strtoupper($this->getYiFuSign($response, $card['mer_key'])) == $sign) {
            $order = pay::getItemByOrderNumber($out_trade_no);

            if ($pay_result == "0") {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'success', $total_fee, $out_trade_no, $transaction_id, $order);
            } else {
                $this->logdump("failed!交易失败码:{$pay_result},用户名{$order['username']} 交易订单{$transaction_id} 金额{$order['amount']} ");
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function yftBack()
    {
        $response = file_get_contents('php://input');

        if ($response === '') {
            die('参数错误0');
        }

        parse_str($response, $response);
        $responseData = array();

        if (!isset($response["merchantOutOrderNo"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $responseData['merchantOutOrderNo'] = $response['merchantOutOrderNo'];

        if (!isset($response["merid"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $responseData['merid'] = $response['merid'];

        if (!isset($response["msg"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $responseData['msg'] = $response['msg'];

        if (json_decode($response["msg"])->payMoney == null) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $responseData['payMoney'] = json_decode($response["msg"])->payMoney;

        if (!isset($response["noncestr"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $responseData['noncestr'] = $response['noncestr'];

        if (!isset($response["orderNo"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $responseData['orderNo'] = $response['orderNo'];

        if (!isset($response["payResult"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }

        $responseData['payResult'] = $response['payResult'];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }

        $responseData['sign'] = $response['sign'];
        $card_id = explode("2017", $responseData['merchantOutOrderNo'])[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

        if ($this->getSign($responseData, $card['mer_key']) == $responseData['sign']) {
            $order = pay::getItemByOrderNumber($responseData['merchantOutOrderNo']);

            if ($responseData['payResult'] == "1") {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'success', $responseData['payMoney'], $responseData['merchantOutOrderNo'], $responseData['orderNo'], $order);
            } else {
                $this->logdump("failed!交易失败码:{$responseData['payResult']},用户名{$order['username']} 交易订单{$responseData['orderNo']} 金额{$order['amount']} ");
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function huibaotongBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["reCode"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $reCode = $response['reCode'];

        if (!isset($response["merchantNo"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $merchantNo =  $response['merchantNo'];

        if (!isset($response["merchantOrderno"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $merchantOrderno =  $response['merchantOrderno'];

        if (!isset($response["result"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $result =  $response['result'];

        if (!isset($response["payType"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $payType =  $response['payType'];

        if (!isset($response["memberGoods"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $memberGoods =  $response['memberGoods'];

        if (!isset($response["amount"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }

        $amount =  $response['amount'];

        if (!isset($response["hmac"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }

        $hmac =  $response['hmac'];

        $card_id = explode("_", $merchantOrderno)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

        if ($this->checkHmac($reCode,$merchantNo,$merchantOrderno,$result,$payType,$memberGoods,$amount,$hmac,$card['mer_key'])) {
            $order = pay::getItemByOrderNumber($merchantOrderno);

            if ($result == "SUCCESS") {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'SUCCESS', $amount, $merchantOrderno, $merchantOrderno, $order);
            } else {
                $this->logdump("failed!交易失败码:{$result},用户名{$order['username']} 交易订单{$merchantOrderno} 金额{$order['amount']} ");
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function xiangjiaoBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["errcode"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $errcode = $response["errcode"];

        if (!isset($response["orderno"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $orderno = $response["orderno"];

        if (!isset($response["total_fee"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $total_fee = $response['total_fee'] / 100;

        if (!isset($response["attach"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $attach = $response['attach'];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $sign = $response['sign'];
        $card_id = explode("_", $orderno)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $localSign = strtoupper(md5($attach . $errcode . $orderno. intval($response['total_fee']) . $card['mer_key']));

        if ($localSign == $sign) {
            $order = pay::getItemByOrderNumber($orderno);

            if ($response['errcode'] == '0') {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'success', $total_fee, $orderno, $orderno, $order);
            } else {
                $this->logdump("failed!交易失败码:{$response['errcode']},用户名{$order['username']} 交易订单{$orderno} 金额{$order['amount']} ");
                echo '-1';
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function yibaozhifuBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["p1_MerId"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $p1_MerId = $response["p1_MerId"];

        if (!isset($response["r0_Cmd"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $r0_Cmd = $response["r0_Cmd"];

        if (!isset($response["r1_Code"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $r1_Code = $response['r1_Code'];

        if (!isset($response["r2_TrxId"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $r2_TrxId = $response['r2_TrxId'];

        if (!isset($response["r3_Amt"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $r3_Amt = $response['r3_Amt'];

        if (!isset($response["r4_Cur"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $r4_Cur = $response['r4_Cur'];

        if (!isset($response["r5_Pid"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $r5_Pid = $response['r5_Pid'];

        if (!isset($response["r6_Order"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $r6_Order = $response['r6_Order'];

        if (!isset($response["r7_Uid"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $r7_Uid = $response['r7_Uid'];

        if (!isset($response["r8_MP"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $r8_MP = $response['r8_MP'];

        if (!isset($response["r9_BType"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $r9_BType = $response['r9_BType'];

        if (!isset($response["hmac"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $hmac = $response['hmac'];

        if (!isset($response["hmac_safe"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $hmac_safe = $response['hmac_safe'];

        $card_id = explode("_", $r6_Order)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $hmacLocal = $this->HmacLocal($response,$card['mer_key']);
        $safeLocal= $this->gethamc_safe($response,$card['mer_key'],$card['mer_no']);

        if ($response['hmac'] != $hmacLocal && $response['hmac_safe'] != $safeLocal) {
            $order = pay::getItemByOrderNumber($r6_Order);

            if ($response['r1_Code'] == '1' && $response['r9_BType'] == '2') {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'SUCCESS', $r3_Amt, $r6_Order, $r6_Order, $order);
            } else {
                $this->logdump("failed!交易失败码:{$response['r1_Code']},用户名{$order['username']} 交易订单{$r6_Order} 金额{$order['amount']} ");
                echo '-1';
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function yunanfuBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            $this->logdump('参数错误0');
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["orderstatus"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $orderstatus = $response["orderstatus"];

        if (!isset($response["ordernumber"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $ordernumber = $response["ordernumber"];

        if (!isset($response["paymoney"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $paymoney = $response['paymoney'];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $sign = $response['sign'];

        if (!isset($response["attach"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $attach = $response['attach'];

        $card_id = explode("_", $ordernumber)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $signSource = sprintf("partner=%s&ordernumber=%s&orderstatus=%s&paymoney=%s%s", $card['mer_no'], $ordernumber, $orderstatus, $paymoney, $card['mer_key']);

        if ($sign == md5($signSource)) {
            $order = pay::getItemByOrderNumber($ordernumber);

            if ($response['orderstatus'] == '1') {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'ok', $paymoney, $ordernumber, $ordernumber, $order);
            } else {
                $this->logdump("failed!交易失败码:{$response['orderstatus']},用户名{$order['username']} 交易订单{$ordernumber} 金额{$order['amount']} ");
                echo '-1';
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function haiouBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            $this->logdump('参数错误0');
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["orderid"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $orderid = $response["orderid"];

        if (!isset($response["billno"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $billno = $response["billno"];

        if (!isset($response["price"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $price = $response['price'];

        if (!isset($response["state"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $state = $response['state'];

        if (!isset($response["payvia"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $payvia = $response['payvia'];

        if (!isset($response["timespan"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $timespan = $response['timespan'];

        if (!isset($response["custom"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $custom = $response['custom'];

        if (!isset($response["ext"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $ext = $response['ext'];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $sign = $response['sign'];

        $card_id = explode("_", $orderid)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $signSource = sprintf("userid=%s&orderid=%s&billno=%s&price=%s&payvia=%s&state=%s&timespan=%s&key=%s", $card['mer_no'], $orderid, $billno, $price, $payvia, $state, $timespan, $card['mer_key']);

        if ($sign == md5(md5($signSource) . $card['mer_key'])) {
            $order = pay::getItemByOrderNumber($orderid);

            if ($response['state'] == '1') {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'success', $price, $orderid, $billno, $order);
            } else {
                $this->logdump("failed!交易失败码:{$response['state']},用户名{$order['username']} 交易订单{$billno} 金额{$order['amount']} ");
                echo '-1';
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function sankBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            $this->logdump('参数错误0');
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["return_code"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $return_code = $response["return_code"];

        if (!isset($response["totalFee"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $totalFee = $response["totalFee"];

        if (!isset($response["channelOrderId"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $channelOrderId = $response['channelOrderId'];

        if (!isset($response["orderId"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $orderId = $response['orderId'];

        if (!isset($response["timeStamp"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $timeStamp = $response['timeStamp'];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $sign = $response['sign'];

        if (!isset($response["transactionId"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $transactionId = $response['transactionId'];

        $card_id = explode("_", $channelOrderId)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $signSource = sprintf("channelOrderId=%s&key=%s&orderId=%s&timeStamp=%s&totalFee=%s", $channelOrderId, explode('_', $card['mer_key'])[1], $orderId, $timeStamp, $totalFee);

        if ($sign == md5($signSource)) {
            $order = pay::getItemByOrderNumber($channelOrderId);

            if ($response['return_code'] == '0') {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'ok', $totalFee, $channelOrderId, $orderId, $order);
            } else {
                $this->logdump("failed!交易失败码:{$response['return_code']},用户名{$order['username']} 交易订单{$orderId} 金额{$order['amount']} ");
                echo '-1';
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function qingyifuBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            $this->logdump('参数错误0');
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["amount"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $amount =  ((int)$response["amount"]) / 100;

        if (!isset($response["goodsName"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $goodsName = $response["goodsName"];

        if (!isset($response["merNo"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $merNo = $response['merNo'];

        if (!isset($response["netway"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $netway = $response['netway'];

        if (!isset($response["orderNum"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $orderNum = $response['orderNum'];

        if (!isset($response["payDate"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $payDate = $response['payDate'];

        if (!isset($response["payResult"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $payResult = $response['payResult'];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $sign = $response['sign'];

        $card_id = explode("_", $orderNum)[1];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

        if ($this->checkQingYiFuSign($response, $card['mer_key'])) {
            $order = pay::getItemByOrderNumber($orderNum);

            if ($response['payResult'] == '00') {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', '0', $amount, $orderNum, $orderNum, $order);
            } else {
                $this->logdump("failed!交易失败码:{$response['payResult']},用户名{$order['username']} 交易订单{$orderNum} 金额{$order['amount']} ");
                echo '-1';
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function zhitongbaoBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            $this->logdump('参数错误0');
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["merchant_code"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $merchant_code = $response["merchant_code"];

        if (!isset($response["notify_type"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $notify_type = $response["notify_type"];

        if (!isset($response["notify_id"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $notify_id = $response['notify_id'];

        if (!isset($response["interface_version"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $interface_version = $response['interface_version'];

        if (!isset($response["sign_type"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $sign_type = $response['sign_type'];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $sign = base64_decode($response['sign']);

        if (!isset($response["order_no"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $order_no = $response['order_no'];

        if (!isset($response["order_time"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $order_time = $response['order_time'];

        if (!isset($response["order_amount"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $order_amount = $response['order_amount'];

        if (!isset($response["trade_no"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $trade_no = $response['trade_no'];

        if (!isset($response["trade_time"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $trade_time = $response['trade_time'];

        if (!isset($response["trade_status"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $trade_status = $response['trade_status'];

        $card_id = explode('ZTB', $order_no)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['card_pass']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

        if ($this->checkZhiTongBaoSign($response, $this->formatKey($card['card_pass']), $sign)) {
            $order = pay::getItemByOrderNumber($order_no);

            if ($response['trade_status'] == 'SUCCESS') {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'SUCCESS', $order_amount, $order_no, $trade_no, $order);
            } else {
                $this->logdump("failed!交易失败码:{$response['trade_status']},用户名{$order['username']} 交易订单{$trade_no} 金额{$order['amount']} ");
                echo '-1';
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function ludeBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            $this->logdump('参数错误0');
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["service"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $service = $response["service"];

        if (!isset($response["merId"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $merId = $response["merId"];

        if (!isset($response["tradeNo"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $tradeNo = $response['tradeNo'];

        if (!isset($response["tradeDate"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $tradeDate = $response['tradeDate'];

        if (!isset($response["opeNo"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $opeNo = $response['opeNo'];

        if (!isset($response["opeDate"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $opeDate = $response['opeDate'];

        if (!isset($response["amount"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $amount = $response['amount'];

        if (!isset($response["status"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $status = $response['status'];

        if (!isset($response["extra"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $extra = $response['extra'];

        if (!isset($response["payTime"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $payTime = $response['payTime'];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $sign = $response['sign'];

        if (!isset($response["notifyType"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $notifyType = $response['notifyType'];

        $card_id = explode('_', $tradeNo)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $str_to_sign=$this->prepareSign($response);
        $resultVerify=$this->ludeVerify($str_to_sign,$sign,$card['mer_key']);

        if ($resultVerify) {
            $order = pay::getItemByOrderNumber($tradeNo);

            if ($response['status'] === '1') {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'SUCCESS', $amount, $tradeNo, $tradeNo, $order);
            } else {
                $this->logdump("failed!交易失败码:{$response['status']},用户名{$order['username']} 交易订单{$tradeNo} 金额{$order['amount']} ");
                echo '-1';
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump('签名验证失败，程序中止。');
            die;
        }
    }

    public function yuyingBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            $this->logdump('参数错误0');
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["status"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $status = $response["status"];

        if (!isset($response["payType"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $payType = $response["payType"];

        if (!isset($response["orderNo"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $orderNo = $response['orderNo'];

        if (!isset($response["orderStatus"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $orderStatus = $response['orderStatus'];

        if (!isset($response["orderAmount"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $orderAmount = $response['orderAmount'];

        if (!isset($response["payoverTime"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $payoverTime = $response['payoverTime'];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }

        $sign = $response['sign'];

        $card_id = explode('_', $orderNo)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $paramStr = "status=" . $response['status'] . "&payType=" . $response['payType'] . "&orderNo=" . $response['orderNo'] . "&orderStatus=" . $response['orderStatus'] . "&orderAmount=" . $response['orderAmount'] . "&payoverTime=" . $response['payoverTime'] . "merSecret=" . $card['mer_key'];

        if (md5($paramStr) === $sign) {
            $order = pay::getItemByOrderNumber($orderNo);

            if ($response['status'] === '200' && $response['orderStatus'] === 'SUCCESS') {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'SUCCESS', $orderAmount, $orderNo, $orderNo, $order);
            } else {
                $this->logdump("failed!交易失败码:{$response['orderStatus']},用户名{$order['username']} 交易订单{$orderNo} 金额{$order['amount']} ");
                echo '-1';
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump('签名验证失败，程序中止。');
            die;
        }
    }


    public function weifutongBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            die('参数错误0');
        }

        //parse_str($response, $response);
        $response = $this->parseXML($response);

        if (!isset($response["version"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $version = $response["version"];
        if (!isset($response["charset"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $charset = $response["charset"];
        if (!isset($response["status"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $status = $response["status"];
        if (!isset($response["result_code"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $result_code = $response["result_code"];
        if (!isset($response["mch_id"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $mch_id = $response["mch_id"];

        if (!isset($response["nonce_str"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $nonce_str = $response['nonce_str'];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }

        $sign = $response['sign'];

        if (!isset($response["trade_type"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }

        $trade_type = $response['trade_type'];

        if (!isset($response["pay_result"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }

        $pay_result = $response['pay_result'];

        if (!isset($response["transaction_id"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }

        $transaction_id = $response['transaction_id'];

        if (!isset($response["out_trade_no"])) {
            $this->logdump('参数错误10');
            die('参数错误10');
        }

        $out_trade_no = $response['out_trade_no'];

        if (!isset($response["total_fee"])) {
            $this->logdump('参数错误10');
            die('参数错误10');
        }

        $total_fee = $response['total_fee'];

        if (!isset($response["bank_type"])) {
            $this->logdump('参数错误11');
            die('参数错误11');
        }

        $bank_type = $response['bank_type'];

        if (!isset($response["time_end"])) {
            $this->logdump('参数错误12');
            die('参数错误12');
        }

        $time_end = $response['time_end'];
        unset($response['sign']);


        $card_id = explode("_", $out_trade_no)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        //dd($this->isTenpaySign($response,$sign,$card['mer_key']));

        //$localSign = strtoupper(md5($trade_type.$pay_result.$transaction_id.$out_trade_no.$total_fee.$bank_type.$time_end) . $card['mer_key']);


        if ($this->isTenpaySign($response,$sign,$card['mer_key'])) {

            $order = pay::getItemByOrderNumber($out_trade_no);

            if ($response['status'] == '0' && $response['result_code'] == '0' ) {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'success', $total_fee, $out_trade_no, $out_trade_no, $order);
            } else {
                $this->logdump("failed!交易失败码:{$response['result_code']},用户名{$order['username']} 交易订单{$out_trade_no} 金额{$order['amount']} ");
                echo '-1';
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function ufuBack(){
        die();
        $response = file_get_contents('php://input');



        if ($response ===  '') {
            die('参数错误0');
        }


        parse_str($response, $response);
        //$response = $this->parseXML($response);
        if (!isset($response["sign"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $sign = $response["sign"];
        if (!isset($response["outOrderId"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $outOrderId = $response["outOrderId"];
        if (!isset($response["transAmt"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $transAmt = $response["transAmt"];

        if (!isset($response["merchantId"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $merchantId = $response["merchantId"];
        if (!isset($response["localOrderId"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $localOrderId = $response["localOrderId"];

        if (!isset($response["transTime"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $transTime = $response['transTime'];



        if (!isset($response["respType"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }

        $respType = $response['respType'];

        if (!isset($response["respCode"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }

        $respCode = trim($response['respCode']);


        if (!isset($response["respMsg"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }

        $respMsg = $response['respMsg'];




        $card_id = explode("_", $outOrderId)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        //dd($this->isTenpaySign($response,$sign,$card['mer_key']));

        //$localSign = strtoupper(md5($trade_type.$pay_result.$transaction_id.$out_trade_no.$total_fee.$bank_type.$time_end) . $card['mer_key']);


        if ($merchantId == $card['mer_no']) {


            $order = pay::getItemByOrderNumber($outOrderId);




            if ($response['respType'] == 'S' && $respCode == '00' ) {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                //dd('successcallback');
                $this->bak('gs4fj@5f!sda*dfuf', 'success', $transAmt, $outOrderId, $outOrderId,$order);


            } else {
                $this->logdump("failed!交易失败码:{$response['respCode']},用户名{$order['username']} 交易订单{$outOrderId} 金额{$order['amount']} ");
                echo '-1';
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }
    public function dingfengBack(){

        $response = file_get_contents('php://input');


        if ($response ===  '') {
            die('参数错误0');
        }
        parse_str($response,$response);



        //$response = $this->parseXML($response);


        if (!isset($response["req"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $req = $response["req"];
        //dd($req);


        if (!isset($response["sign"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $sign = $response["sign"];



        /*if (!isset($response["mRespCode"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $mRespCode = $response["mRespCode"];
        if (!isset($response["mRespMsg"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $mRespMsg = $response["mRespMsg"];
        if (!isset($response["mAmount"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $mAmount = $response["mAmount"];
        if (!isset($response["mGUId"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $mGUId = $response["mGUId"];
        if (!isset($response["mOrderId"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $mOrderId = $response["mOrderId"];

        if (!isset($response["mQueryId"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $mQueryId = $response['mQueryId'];

        if (!isset($response["mUrl"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }

        $mUrl = $response['mUrl'];

        if (!isset($response["mAddTime"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }

        $mAddTime = $response['mAddTime'];

        if (!isset($response["mOutPayId"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }

        $mOutPayId = $response['mOutPayId'];*/
        $mOrderId = json_decode(base64_decode($req),true)['mOrderId'];
        $card_id = explode("_", $mOrderId)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        //unset($response['sign']);
        $mNewSign = strtolower(md5($req.$card['mer_key']));

        //6c56ad577f0ecef824c373fd9366e481length=40)32)


        $sign = trim(strtolower($sign));




        //dd($this->isTenpaySign($response,$sign,$card['mer_key']));

        //$localSign = strtoupper(md5($trade_type.$pay_result.$transaction_id.$out_trade_no.$total_fee.$bank_type.$time_end) . $card['mer_key']);


        if ($mNewSign == $sign) {

            $mDataObjJson =  json_decode(base64_decode($req));
            $order = pay::getItemByOrderNumber($mDataObjJson->mOrderId);



            if ($mDataObjJson->mPayState == "2") {
                $mDataObjJson->mOrderId = (substr($mDataObjJson->mOrderId,0,32));
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', '0000', $mDataObjJson->mAmount, $mDataObjJson->mOrderId, $mDataObjJson->mOrderId, $order);

            } else {
                $this->logdump("failed!交易失败码:{$mDataObjJson->mRespCode},用户名{$order['username']} 交易订单{$mDataObjJson->mOrderId} 金额{$order['amount']} ");
                echo '-1';
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }


    public function zshBack()//泽圣回调
    {
    	$response = file_get_contents('php://input');
    	$response1 = parse_str($response,$resArr);
    	//dd($response);
    	if ($resArr ===  '') {
    		die('参数错误1');
    	}
    	if ($response ===  null) {
    		die('参数错误2');
    	}
    	if (!isset($resArr['totalAmount'])) {//金额
    		die('参数错误3');
    	}
    	$orderAmount = $resArr['totalAmount'] / 100;
    	if(!isset($resArr['outOrderId'])) {//商户生成订单
    		die('参数错误4');
    	}
    	$orderNo = $resArr['outOrderId'] != null ? $resArr['outOrderId'] : '';
    	if (!isset($resArr['merchantCode'])){
    		die('参数错误5');
    	}
    	if(!isset($resArr['instructCode'])){//第三方订单
    		die('参数错误6');
    	}
    	$tradeNo = $resArr['instructCode'] != null ? $resArr['instructCode'] : '';
    	if (!isset($resArr['transTime'])){
    		die('参数错误7');
    	}
    	if (!isset($resArr['transType'])){
    		die('参数错误8');
    	}
    	if (!isset($resArr['sign'])){
    		die('参数错误9');
    	}
    	$resArr['sign'] = trim($resArr['sign']);
    	$card_id = explode("-", $orderNo)[0];
    	$card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
    	//echo 1;die('到这儿了');
    	if ($this->zshCheckSign($resArr, $card['mer_key'])) {
    		$order = pay::getItemByOrderNumber($orderNo);
    		//dd($order['requestURI']);
    			$this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
    			$this->bak('gs4fj@5f!sda*dfuf', '00', $orderAmount, $orderNo, $tradeNo, $order);
    	} else {
    		echo '不合法数据';
    		$this->logdump("签名验证失败，程序中止。");
    		die;
    	}
    }

    public function xdfBack()//新鼎峰回调
    {
    	$response = file_get_contents('php://input');
        if ($response ===  '') {
            die('参数错误0');
        }
        parse_str($response,$response);
        if (!isset($response["req"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $reqJson = $response["req"];
        if (!isset($response["sign"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $sign = $response["sign"];//签名
       	$req = json_decode($reqJson,true);
        $card_id = explode("_", $req['orderid'])[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $mNewSign = strtolower(md5($reqJson.$card['mer_key']));
        $sign = trim(strtolower($sign));
        if ($mNewSign == $sign) {
            	$order = pay::getItemByOrderNumber($req['orderid']);
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', '0000', $req['amount'], $req['orderid'], $req['orderid'], $order);
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }



    public function isTenpaySign($replyarr,$signn,$prikey) {
        $signPars = "";
        ksort($replyarr);
        foreach($replyarr as $k => $v) {
            $signPars .= $k . "=" . $v . "&";

        }
        $signPars .= "key=" . $prikey;



        $tenpaySign = strtoupper(md5($signPars));



        return $signn == $tenpaySign;

    }
    public function yzBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            $this->logdump('参数错误0');
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["merchantOutOrderNo"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $merchantOutOrderNo = $response["merchantOutOrderNo"];

        if (!isset($response["merid"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $merid = $response["merid"];

        if (!isset($response["msg"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $msg = $response['msg'];


        $payMoney = json_decode($response['msg'])->payMoney;
        $response['payMoney'] = $payMoney;

        if (!isset($response["noncestr"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $noncestrnoncestr = $response['noncestr'];

        if (!isset($response["orderNo"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $orderNo = $response['orderNo'];

        if (!isset($response["payResult"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $payResult = $response['payResult'];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }

        $sign = $response['sign'];
        $card_id = substr($merchantOutOrderNo, 14, 4);
        $card_id = (int)$card_id;
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $signstr = 'merchantOutOrderNo='.$response['merchantOutOrderNo'].'&merid='.$response['merid'].'&msg='.$response['msg'].'&noncestr='.$response['noncestr'].'&orderNo='.$response['orderNo'].'&payResult='.$response['payResult'];
        $signstr .= '&key=' . $card['mer_key'];
        $localSign = md5($signstr);

        if ($localSign === $sign) {
            $order = pay::getItemByOrderNumber($merchantOutOrderNo);

            if ($response['payResult'] === '1') {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'success', $payMoney, $merchantOutOrderNo, $orderNo, $order);
            } else {
                $this->logdump("failed!交易失败码:{$response['payResult']},用户名{$order['username']} 交易订单{$orderNo} 金额{$order['amount']} ");
                echo '-1';
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump('签名验证失败，程序中止。');
            die;
        }
    }

    public function dingyiBack(){
        $response = file_get_contents('php://input');


        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);


        //$response = $this->parseXML($response);
        if (!isset($response["orderid"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $orderid = $response["orderid"];



        if (!isset($response["opstate"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $opstate = $response["opstate"];

        if (!isset($response["ovalue"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $ovalue = $response["ovalue"];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $sign = $response["sign"];

        $card_id = explode("_", $orderid)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

        //dd($this->isTenpaySign($response,$sign,$card['mer_key']));

        //$localSign = strtoupper(md5($trade_type.$pay_result.$transaction_id.$out_trade_no.$total_fee.$bank_type.$time_end) . $card['mer_key']);
        $bRet = $this->CheckSign($orderid,$opstate,$ovalue,$sign,$card);


        if ($bRet) {

            $order = pay::getItemByOrderNumber($orderid);
            if ($opstate == "0" && $ovalue == $order['amount'] ) {

                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                //dd('successcallback');
                $this->bak('gs4fj@5f!sda*dfuf', 'success', $ovalue, $orderid, $orderid,$order);


            } else {
                $this->logdump("failed!交易失败码:{$response['respCode']},用户名{$order['username']} 交易订单{$orderid} 金额{$order['amount']} ");
                echo '-1';
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function CheckSign($orderid,$opstate,$ovalue,$sign,$card)
    {
        if($sign==$this->getCallbackSignString($orderid,$opstate,$ovalue,$sign,$card))
            return true;
        else
            return false;
    }

    public function getCallbackSignString($orderid,$opstate,$ovalue,$sign,$card)
    {


        $sign_text	= "orderid=$orderid&opstate=$opstate&ovalue=$ovalue".$card['mer_key'];
        $sign_md5 = md5($sign_text);

        return $sign_md5;

    }

    public function zaixianbaoBack(){

        $response = file_get_contents('php://input');



        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);




        //$response = $this->parseXML($response);

        if (!isset($response["merchno"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $merchno = $response["merchno"];




        if (!isset($response["status"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $status = $response["status"];


        if (!isset($response["traceno"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $traceno = $response["traceno"];
        //dd($traceno);




        if (!isset($response["orderno"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $orderno = $response["orderno"];



        if (!isset($response["merchName"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }
        $merchName = $response["merchName"];



        if (!isset($response["amount"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }
        $amount = $response["amount"];


        if (!isset($response["transDate"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }
        $transDate = $response["transDate"];


        if (!isset($response["transTime"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }
        $transTime = $response["transTime"];


        if (!isset($response["payType"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }
        $payType = $response["payType"];


        if (!isset($response["openId"])) {
            $this->logdump('参数错误10');
            die('参数错误10');
        }
        $response["openId"] = trim($response["openId"]);
        $openId = $response["openId"];


        //unset($response["openId"]);


        if (!isset($response["signature"])) {
            $this->logdump('参数错误11');
            die('参数错误11');
        }
        $signature = $response["signature"];

        unset($response["signature"]);
        unset($response["channelOrderno"]);
        unset($response["channelTraceno"]);


        //dd($response);
        ksort($response);

        $a = '';
        foreach ($response as $x => $x_value) {
            if ($x_value) {
                $a = $a . $x . "=" . $x_value . "&";
            }
        }


        $card_id = explode("_", $traceno)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $b = md5($a . $card['mer_key']);
        $d = strtoupper($b);







        //dd($this->isTenpaySign($response,$sign,$card['mer_key']));

        //$localSign = strtoupper(md5($trade_type.$pay_result.$transaction_id.$out_trade_no.$total_fee.$bank_type.$time_end) . $card['mer_key']);
        //$bRet = $this->CheckSign($orderid,$opstate,$ovalue,$sign,$card);

        $order = pay::getItemByOrderNumber($traceno);
        if ($d == $signature) {


            //if ($opstate == "0" && $ovalue == $order['amount'] ) {

                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                //dd('successcallback');
                $this->bak('gs4fj@5f!sda*dfuf', 'success', $amount, $traceno, $traceno,$order);


            } else {
                $this->logdump("failed!交易失败码:{$response['status']},用户名{$order['username']} 交易订单{$traceno} 金额{$order['amount']} ");
                echo '-1';
                die;
            }
        }

    public function tianfubaoBack()
    {

        $response = file_get_contents('php://input');


        if ($response === '') {
            die('参数错误0');
        }
        parse_str($response, $response);
        //dd($response);
        //$response = $this->parseXML($response);

        if (!isset($response["item_name"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $item_name = $response["item_name"];


        if (!isset($response["listid"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $listid = $response["listid"];


        if (!isset($response["notify_type"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $notify_type = $response["notify_type"];


        if (!isset($response["pay_type"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $pay_type = $response["pay_type"];


        if (!isset($response["retcode"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }
        $retcode = $response["retcode"];
        unset($response["retcode"]);


        if (!isset($response["retmsg"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }
        $retmsg = $response["retmsg"];
        unset($response["retmsg"]);


        if (!isset($response["sign"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }
        $sign = $response["sign"];
        //dd($response["sign"]);


        if (!isset($response["sign_type"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }
        $sign_type = $response["sign_type"];
        unset($response["sign_type"]);


        if (!isset($response["sp_billno"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }
        $sp_billno = $response["sp_billno"];


        if (!isset($response["sysd_time"])) {
            $this->logdump('参数错误10');
            die('参数错误10');
        }
        $response["sysd_time"] = trim($response["sysd_time"]);

        if (!isset($response["tran_amt"])) {
            $this->logdump('参数错误11');
            die('参数错误11');
        }
        $tran_amt = $response["tran_amt"];

        if (!isset($response["tran_state"])) {
            $this->logdump('参数错误12');
            die('参数错误12');
        }
        $tran_state = $response["tran_state"];

        if (!isset($response["tran_time"])) {
            $this->logdump('参数错误13');
            die('参数错误13');
        }
        $tran_time = $response["tran_time"];
        $response["tran_time"] = trim($response["tran_time"]);
        unset($response["sign"]);
        //dd($response);
        $card_id = explode("_", $sp_billno)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

        $order = pay::getItemByOrderNumber($sp_billno);

        if ($this->isGcSign($response, $card['mer_key'], $sign)) {

            if ($response['notify_type'] == "1" && $response['tran_state'] == "1") {

                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'success', $tran_amt, $sp_billno, $sp_billno, $order);


            } else {
                $this->logdump("failed!交易失败码:{$response['tran_state']},用户名{$order['username']} 交易订单{$sp_billno} 金额{$order['amount']} ");
                echo '-1';
                die;
            }
        }
    }

    public function isGcSign($rarray,$pkey,$rsign) {
        $signPars = "";
        ksort($rarray);
        foreach($rarray as $k => $v) {
            if("sign" != $k && "" != $v) {
                $signPars .= $k . "=" . $v ."&";
            }
        }

        $signPars .= "key=" . $pkey;

        $sign = strtolower(md5($signPars));

        $gcpaySign = strtolower($rsign);

        return $sign == $gcpaySign;

    }

    public function caimaoBack()
    {

        $response = file_get_contents('php://input');
        //dd($response);

        if ($response === '') {
            die('参数错误0');
        }
        parse_str($response, $response);
        $response["trade_time"] = trim($response["trade_time"]);

        //$response = $this->parseXML($response);


        if (!isset($response["trade_no"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $trade_no = $response["trade_no"];


        if (!isset($response["sign_type"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $sign_type = $response["sign_type"];


        if (!isset($response["notify_type"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $notify_type = $response["notify_type"];


        if (!isset($response["merchant_code"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $merchant_code = $response["merchant_code"];


        if (!isset($response["order_no"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }
        $order_no = $response["order_no"];
        //unset($response["retcode"]);


        if (!isset($response["trade_status"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }
        $trade_status = $response["trade_status"];
        //dd($trade_status);
        //unset($response["retmsg"]);


        if (!isset($response["sign"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }
        $sign = $response["sign"];

        //dd($response["sign"]);


        if (!isset($response["order_amount"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }
        $order_amount = $response["order_amount"];

        //unset($response["sign_type"]);


        if (!isset($response["interface_version"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }
        $interface_version = $response["interface_version"];



        if (!isset($response["bank_seq_no"])) {
            $this->logdump('参数错误10');
            die('参数错误10');
        }
        $bank_seq_no = $response["bank_seq_no"];


        if (!isset($response["order_time"])) {
            $this->logdump('参数错误11');
            die('参数错误11');
        }
        $order_time = $response["order_time"];


        if (!isset($response["notify_id"])) {
            $this->logdump('参数错误12');
            die('参数错误12');
        }
        $notify_id = $response["notify_id"];


        if (!isset($response["trade_time"])) {
            $this->logdump('参数错误13');
            die('参数错误13');
        }
        $trade_time = $response["trade_time"];


        $dinpaySign = base64_decode($sign);

        $signStr = "";
        $signStr = $signStr."bank_seq_no=".$bank_seq_no."&";

        $signStr = $signStr."interface_version=".$interface_version."&";

        $signStr = $signStr."merchant_code=".$merchant_code."&";

        $signStr = $signStr."notify_id=".$notify_id."&";

        $signStr = $signStr."notify_type=".$notify_type."&";

        $signStr = $signStr."order_amount=".$order_amount."&";

        $signStr = $signStr."order_no=".$order_no."&";

        $signStr = $signStr."order_time=".$order_time."&";

        $signStr = $signStr."trade_no=".$trade_no."&";


        $signStr = $signStr."trade_status=".$trade_status."&";

        $signStr = $signStr."trade_time=".$trade_time;
        //dd($signStr);

        $card_id = intval(substr($order_no,0,5));
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['card_pass']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $order = pay::getItemByOrderNumber($order_no);


        $dinpay_public_key = openssl_get_publickey($card['card_pass']);
        $flag = openssl_verify($signStr,$dinpaySign,$dinpay_public_key,OPENSSL_ALGO_MD5);
        //dd($flag);


        if ($flag) {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'SUCCESS', $order_amount, $order_no, $order_no, $order);


            } else {
                $this->logdump("failed!交易失败码:{$trade_status},用户名{$order['username']} 交易订单{$order_no} 金额{$order['amount']} ");
                echo '-1';
                die;
            }
        }

    public function xinfubaoBack()
    {
        $response = file_get_contents('php://input');


        if ($response === '') {
            die('参数错误0');
        }

        parse_str($response, $response);
        $response["prdOrdNo"] = trim($response["prdOrdNo"]);
        //dd($response);


        //$response = $this->parseXML($response);
        if (!isset($response["signData"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $signData = $response["signData"];


        if (!isset($response["versionId"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $versionId = $response["versionId"];

        if (!isset($response["orderAmount"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $orderAmount = $response["orderAmount"];

        if (!isset($response["transType"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $transType = $response["transType"];

        if (!isset($response["asynNotifyUrl"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }
        $asynNotifyUrl = $response["asynNotifyUrl"];

        if (!isset($response["payTime"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }
        $payTime = $response["payTime"];

        if (!isset($response["synNotifyUrl"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }
        $synNotifyUrl = $response["synNotifyUrl"];

        if (!isset($response["orderStatus"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }
        $orderStatus = $response["orderStatus"];

        if (!isset($response["signType"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }
        $signType = $response["signType"];

        if (!isset($response["merId"])) {
            $this->logdump('参数错误10');
            die('参数错误10');
        }
        $merId = $response["merId"];

        if (!isset($response["payId"])) {
            $this->logdump('参数错误11');
            die('参数错误11');
        }
        $payId = $response["payId"];

        if (!isset($response["prdOrdNo"])) {
            $this->logdump('参数错误12');
            die('参数错误12');
        }
        $prdOrdNo = $response["prdOrdNo"];

        $card_id = explode("_", $prdOrdNo)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $ansign = $this->getxfbSign($response, $card['mer_key']);

        //dd($this->isTenpaySign($response,$sign,$card['mer_key']));


        //$localSign = strtoupper(md5($trade_type.$pay_result.$transaction_id.$out_trade_no.$total_fee.$bank_type.$time_end) . $card['mer_key']);
        //$bRet = $this->CheckSign($orderid,$opstate,$ovalue,$sign,$card);

        $order = pay::getItemByOrderNumber($prdOrdNo);
        //dd($order);
        if ($ansign == strtolower($signData)) {

            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->bak('gs4fj@5f!sda*dfuf', 'SUCCESS', $orderAmount, $prdOrdNo, $prdOrdNo, $order);

        } else {
            $this->logdump("failed!交易失败码:{$response['orderStatus']},用户名{$order['username']} 交易订单{$prdOrdNo} 金额{$order['amount']} ");
            echo '-1';
            die;
        }
    }


    public function getxfbSign($signData, $merKey)
    {
        ksort($signData);
        $str = '';

        foreach ($signData as $key => $row) {
            if ($key != 'signData') {
                if ($str != '') {
                    $str = $str . '&';
                }

                $str .= $key . '=' . $row;
            }
        }

        $sign = md5($str . '&key=' . $merKey);

        return $sign;
    }

    public function yuanbaoBack()
    {
        $response = file_get_contents('php://input');
        //dd($response);

        if ($response === '') {
            die('参数错误0');
        }

        parse_str($response, $response);
        //dd($response);


        //$response = $this->parseXML($response);
        if (!isset($response["sign"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $sign = trim($response["sign"]);
        //dd($sign);


        if (!isset($response["partner"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $partner = $response["partner"];

        if (!isset($response["ordernumber"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $ordernumber = $response["ordernumber"];

        if (!isset($response["orderstatus"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $orderstatus = $response["orderstatus"];

        if (!isset($response["paymoney"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }
        $paymoney = $response["paymoney"];

        $card_id = explode("_", $ordernumber)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $ansign = md5("partner=" . $partner . "&ordernumber=" . $ordernumber . "&orderstatus=" . $orderstatus . "&paymoney=" . $paymoney . $card['mer_key']);
        $order = pay::getItemByOrderNumber($ordernumber);

        if ($ansign == $sign) {
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->bak('gs4fj@5f!sda*dfuf', 'ok', $paymoney, $ordernumber, $ordernumber, $order);

        } else {
            $this->logdump("failed!交易失败码:{$response['orderstatus']},用户名{$order['username']} 交易订单{$ordernumber} 金额{$order['amount']} ");
            echo '-1';
            die;
        }
    }

    public function boshiBack()
    {

        $response = file_get_contents('php://input');

        if ($response === '') {
            die('参数错误0');
        }
        parse_str($response, $response);

        if (!isset($response["MerchantCode"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $MerchantCode = $response["MerchantCode"];


        if (!isset($response["OrderId"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $OrderId = $response["OrderId"];


        if (!isset($response["OrderDate"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $OrderDate = $response["OrderDate"];


        if (!isset($response["OutTradeNo"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $OutTradeNo = $response["OutTradeNo"];


        if (!isset($response["BankCode"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }
        $BankCode = $response["BankCode"];


        if (!isset($response["Amount"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }
        $Amount = $response["Amount"];

        if (!isset($response["Status"])) {
            $this->logdump('参数错误7');
            die('参数错误6');
        }
        $Status = $response["Status"];

        if (!isset($response["Time"])) {
            $this->logdump('参数错误8');
            die('参数错误6');
        }
        $Time = $response["Time"];

        if (!isset($response["Sign"])) {
            $this->logdump('参数错误9');
            die('参数错误6');
        }
        $Sign = $response["Sign"];
        $Remark = $response["Remark"];
        unset($response["Sign"]);

        $card_id = intval(substr($OrderId,0,5));
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $signText = 'MerchantCode=['.$response['MerchantCode'].']OrderId=['.$response['OrderId'].']OutTradeNo=['.$response['OutTradeNo'].']Amount=['.$response['Amount'].']OrderDate=['.$response['OrderDate'].']BankCode=['.$response['BankCode'].']Remark=['.$response['Remark'].']Status=['.$response['Status'].']Time=['.$response['Time'].']TokenKey=['.$card['mer_key'].']';
        $SignLocal = strtoupper(md5($signText));

        $order = pay::getItemByOrderNumber($OrderId);

        if ($SignLocal == $Sign && $Status == "1") {
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->bak('gs4fj@5f!sda*dfuf', 'success', $Amount, $OrderId, $OrderId, $order);


        } else {
            $this->logdump("failed!交易失败码:{$Status},用户名{$order['username']} 交易订单{$OrderId} 金额{$order['amount']} ");
            echo '-1';
            die;
        }
    }



    public function yuebaoBack()
    {
        $response = file_get_contents('php://input');



        if ($response === '') {
            die('参数错误0');
        }
        parse_str($response, $response);

        if (!isset($response["partner"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $partner = $response["partner"];


        if (!isset($response["ordernumber"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $ordernumber = $response["ordernumber"];


        if (!isset($response["orderstatus"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $orderstatus = $response["orderstatus"];


        if (!isset($response["paymoney"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $paymoney = $response["paymoney"];


        if (!isset($response["sysnumber"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }
        $sysnumber = $response["sysnumber"];


        if (!isset($response["sign"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }
        $sign = $response["sign"];

        $card_id = explode("_", $ordernumber)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $order = pay::getItemByOrderNumber($ordernumber);



        $signSource = sprintf("partner=%s&ordernumber=%s&orderstatus=%s&paymoney=%s%s", $partner, $ordernumber, $orderstatus, $paymoney, $card['mer_key']);

        if ($sign == md5($signSource)&&$orderstatus=="1") {
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->bak('gs4fj@5f!sda*dfuf', 'ok', $paymoney, $ordernumber, $ordernumber, $order);


        } else {
            $this->logdump("failed!交易失败码:{$orderstatus},用户名{$order['username']} 交易订单{$ordernumber} 金额{$order['amount']} ");
            echo '-1';
            die;
        }
    }

    public function zhifuhuiBack(){

        $response = file_get_contents('php://input');



        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);


        //$response = $this->parseXML($response);

        if (!isset($response["trade_no"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $trade_no = $response["trade_no"];




        if (!isset($response["sign_type"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $sign_type = $response["sign_type"];


        if (!isset($response["notify_type"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $notify_type = $response["notify_type"];
        //dd($traceno);




        if (!isset($response["merchant_code"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $merchant_code = $response["merchant_code"];



        if (!isset($response["order_no"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }
        $order_no = $response["order_no"];



        if (!isset($response["trade_status"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }
        $trade_status = $response["trade_status"];


        if (!isset($response["sign"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }
        $sign = $response["sign"];


        if (!isset($response["order_amount"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }
        $order_amount = $response["order_amount"];


        if (!isset($response["interface_version"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }
        $interface_version = $response["interface_version"];


        if (!isset($response["bank_seq_no"])) {
            $this->logdump('参数错误10');
            die('参数错误10');
        }
        $bank_seq_no = $response["bank_seq_no"];

        if (!isset($response["order_time"])) {
            $this->logdump('参数错误11');
            die('参数错误11');
        }
        $order_time = $response["order_time"];

        if (!isset($response["notify_id"])) {
            $this->logdump('参数错误12');
            die('参数错误12');
        }
        $notify_id = $response["notify_id"];

        if (!isset($response["trade_time"])) {
            $this->logdump('参数错误13');
            die('参数错误13');
        }
        $trade_time = trim($response["trade_time"]);


        unset($response["sign"]);
        unset($response["sign_type"]);
        unset($response["bank_seq_no"]);

        $signStr = "";
        $signStr = $signStr."interface_version=".$interface_version."&";

        $signStr = $signStr."merchant_code=".$merchant_code."&";

        $signStr = $signStr."notify_id=".$notify_id."&";

        $signStr = $signStr."notify_type=".$notify_type."&";

        $signStr = $signStr."order_amount=".$order_amount."&";

        $signStr = $signStr."order_no=".$order_no."&";

        $signStr = $signStr."order_time=".$order_time."&";

        $signStr = $signStr."trade_no=".$trade_no."&";


        $signStr = $signStr."trade_status=".$trade_status."&";

        $signStr = $signStr."trade_time=".$trade_time;

        $card_id = substr($order_no,0,3);
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['card_pass']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $order = pay::getItemByOrderNumber($order_no);

        $dinpay_public_key = openssl_get_publickey($this->formatKey($card['card_pass']));

        $dinpaySign = base64_decode($sign);


        $flag = openssl_verify($signStr,$dinpaySign,$dinpay_public_key,OPENSSL_ALGO_MD5);
        //dd($this->isTenpaySign($response,$sign,$card['mer_key']));
        if ($flag) {
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->bak('gs4fj@5f!sda*dfuf', 'SUCCESS', $order_amount, $order_no, $order_no,$order);
        } else {
            $this->logdump("failed!交易失败码:{$trade_status},用户名{$order['username']} 交易订单{$order_no} 金额{$order['amount']} ");
            echo '-1';
            die;
        }
    }



    public function shiguangfuBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["P_UserId"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $P_UserId = $response["P_UserId"];
        if (!isset($response["P_OrderId"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $P_OrderId = $response["P_OrderId"];
        if (!isset($response["P_SMPayId"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $P_SMPayId = $response["P_SMPayId"];
        if (!isset($response["P_FaceValue"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $P_FaceValue = $response["P_FaceValue"];
        if (!isset($response["P_ChannelId"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $P_ChannelId = $response["P_ChannelId"];

        if (!isset($response["P_PayMoney"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $P_PayMoney = $response['P_PayMoney'];

        if (!isset($response["P_Subject"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }

        $P_Subject = $response['P_Subject'];

        if (!isset($response["P_Price"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }

        $P_Price = $response['P_Price'];

        if (!isset($response["P_Quantity"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }

        $P_Quantity = $response['P_Quantity'];

        if (!isset($response["P_Description"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }

        $P_Description = $response['P_Description'];

        if (!isset($response["P_Notic"])) {
            $this->logdump('参数错误10');
            die('参数错误10');
        }

        $P_Notic = $response['P_Notic'];

        if (!isset($response["P_ErrCode"])) {
            $this->logdump('参数错误10');
            die('参数错误10');
        }

        $P_ErrCode = $response['P_ErrCode'];

        if (!isset($response["P_ErrMsg"])) {
            $this->logdump('参数错误11');
            die('参数错误11');
        }

        $P_ErrMsg = $response['P_ErrMsg'];

        if (!isset($response["P_PostKey"])) {
            $this->logdump('参数错误12');
            die('参数错误12');
        }

        $P_PostKey = $response['P_PostKey'];

        if (!isset($response["attach"])) {
            $this->logdump('参数错误13');
            die('参数错误12');
        }

        $attach = $response['attach'];

        if (!isset($response["P_Type"])) {
            $this->logdump('参数错误14');
            die('参数错误12');
        }
        $response['P_Type'] = trim($response['P_Type']);
        $P_Type = $response['P_Type'];
        $card_id = explode("_", $P_OrderId)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

        $signcheck = md5($P_UserId.'|'.$P_OrderId.'|'.$P_SMPayId.'|'.$P_FaceValue.'|'.$P_ChannelId.'|'.$card['mer_key']);

        $order = pay::getItemByOrderNumber($P_OrderId);

            if ($P_PostKey == $signcheck) {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'success', $P_PayMoney, $P_OrderId, $P_OrderId, $order);
            } else {
                $this->logdump("failed!交易失败码:{$response['P_ErrCode']},用户名{$order['username']} 交易订单{$P_OrderId} 金额{$order['amount']} ");
                echo '-1';
                die;
            }

    }


    public function ouchuangBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["P_UserId"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $P_UserId = $response["P_UserId"];
        if (!isset($response["P_OrderId"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $P_OrderId = $response["P_OrderId"];
        if (!isset($response["P_SMPayId"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $P_SMPayId = $response["P_SMPayId"];
        if (!isset($response["P_FaceValue"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $P_FaceValue = $response["P_FaceValue"];
        if (!isset($response["P_ChannelId"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $P_ChannelId = $response["P_ChannelId"];

        if (!isset($response["P_PayMoney"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $P_PayMoney = $response['P_PayMoney'];

        if (!isset($response["P_Subject"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }

        $P_Subject = $response['P_Subject'];

        if (!isset($response["P_Price"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }

        $P_Price = $response['P_Price'];

        if (!isset($response["P_Quantity"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }

        $P_Quantity = $response['P_Quantity'];

        if (!isset($response["P_Description"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }

        $P_Description = $response['P_Description'];

        if (!isset($response["P_Notic"])) {
            $this->logdump('参数错误10');
            die('参数错误10');
        }

        $P_Notic = $response['P_Notic'];

        if (!isset($response["P_ErrCode"])) {
            $this->logdump('参数错误10');
            die('参数错误10');
        }

        $P_ErrCode = $response['P_ErrCode'];

        if (!isset($response["P_ErrMsg"])) {
            $this->logdump('参数错误11');
            die('参数错误11');
        }

        $P_ErrMsg = $response['P_ErrMsg'];

        if (!isset($response["P_PostKey"])) {
            $this->logdump('参数错误12');
            die('参数错误12');
        }

        $P_PostKey = $response['P_PostKey'];

        if (!isset($response["attach"])) {
            $this->logdump('参数错误13');
            die('参数错误12');
        }

        $attach = $response['attach'];

        if (!isset($response["P_Type"])) {
            $this->logdump('参数错误14');
            die('参数错误12');
        }
        $response['P_Type'] = trim($response['P_Type']);
        $P_Type = $response['P_Type'];
        $card_id = explode("_", $P_OrderId)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

        $signcheck = md5($P_UserId.'|'.$P_OrderId.'|'.$P_SMPayId.'|'.$P_FaceValue.'|'.$P_ChannelId.'|'.$card['mer_key']);

        $order = pay::getItemByOrderNumber($P_OrderId);

        if ($P_PostKey == $signcheck) {
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->bak('gs4fj@5f!sda*dfuf', 'success', $P_PayMoney, $P_OrderId, $P_OrderId, $order);
        } else {
            $this->logdump("failed!交易失败码:{$response['P_ErrCode']},用户名{$order['username']} 交易订单{$P_OrderId} 金额{$order['amount']} ");
            echo '-1';
            die;
        }

    }


    public function mifuBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            $this->logdump('参数错误0');
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["code"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $code = $response["code"];

        if (!isset($response["merchant"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $merchant = $response["merchant"];

        if (!isset($response["bank"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $bank = $response['bank'];

        if (!isset($response["status"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $status = $response['status'];

        if (!isset($response["billno"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $billno = $response['billno'];

        if (!isset($response["amount"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $amount =  $response['amount'];

        if (!isset($response["pay_time"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }

        $pay_time =  $response['pay_time'];

        if (!isset($response["sign_type"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }

        $sign_type =  $response['sign_type'];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }

        $sign =  $response['sign'];

        $card_id = explode('_', $billno)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $newSign = $this->getYiFuSign($response, $card['mer_key']);

        if ($sign === $newSign) {
            $order = pay::getItemByOrderNumber($billno);

            if ($code === '1000' && $status === '110') {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'SUCCESS', $amount, $billno, $billno, $order);
            } else {
                $this->logdump("failed!交易失败码:{$status},用户名{$order['username']} 交易订单{$billno} 金额{$order['amount']} ");
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function alaBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);


        if (!isset($response["amount"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $amount = $response["amount"];
        if (!isset($response["merchName"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $merchName = $response["merchName"];
        if (!isset($response["merchno"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $merchno = $response["merchno"];
        if (!isset($response["orderno"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $orderno = $response["orderno"];
        if (!isset($response["payType"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $payType = $response["payType"];

        if (!isset($response["signature"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $signature = $response['signature'];

        if (!isset($response["status"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }

        $status = $response['status'];

        if (!isset($response["traceno"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }

        $traceno = $response['traceno'];

        if (!isset($response["transDate"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }

        $transDate = $response['transDate'];

        if (!isset($response["transTime"])) {
            $this->logdump('参数错误10');
            die('参数错误10');
        }
        $response['transTime'] = trim($response['transTime']);
        $transTime = $response['transTime'];

        $card_id = explode("_", $traceno)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

        $post_data = array('merchno'=>$response['merchno']);
        foreach ($response as $key=>$value){
            $post_data = array_merge($post_data,array(iconv('GBK//IGNORE','UTF-8',$key)=>iconv('GBK//IGNORE','UTF-8',$value)));
        }
        $temp='';
        //dd($post_data);
        ksort($post_data);//对数组进行排序
//遍历数组进行字符串的拼接
        foreach ($post_data as $x=>$x_value){
            if ($x != 'signature'&& $x_value != null){
                $temp = $temp.$x."=".iconv('UTF-8','GBK//IGNORE',$x_value)."&";
            }
        }
        $md5=md5($temp.$card['mer_key']);

        $order = pay::getItemByOrderNumber($traceno);
        //dd($md5."|".$signature);
        if (strcasecmp($md5,$signature)==0) {
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->bak('gs4fj@5f!sda*dfuf', 'success', $amount, $traceno, $traceno, $order);
        } else {
            $this->logdump("failed!交易失败码:{$response['status']},用户名{$order['username']} 交易订单{$traceno} 金额{$order['amount']} ");
            echo '-1';
            die;
        }

    }

    public function zunBack(){
        $response = file_get_contents('php://input');


        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);


        //$response = $this->parseXML($response);
        if (!isset($response["orderid"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $orderid = $response["orderid"];



        if (!isset($response["opstate"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $opstate = $response["opstate"];

        if (!isset($response["ovalue"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $ovalue = $response["ovalue"];

        if (!isset($response["systime"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $systime = $response["systime"];

        if (!isset($response["sysorderid"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }
        $sysorderid = $response["sysorderid"];

        if (!isset($response["completiontime"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }
        $completiontime = $response["completiontime"];

        if (!isset($response["msg"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }
        $msg = $response["msg"];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }
        $sign = $response["sign"];


        $card_id = explode("_", $orderid)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

        $signstr = md5("orderid={$orderid}&opstate={$opstate}&ovalue={$ovalue}{$card['mer_key']}");

        if ($sign == $signstr) {

            $order = pay::getItemByOrderNumber($orderid);
            if ($opstate == "0" && $ovalue == $order['amount'] ) {

                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                //dd('successcallback');
                $this->bak('gs4fj@5f!sda*dfuf', 'opstate=0', $ovalue, $orderid, $orderid,$order);


            } else {
                $this->logdump("failed!交易失败码:{$response['opstate']},用户名{$order['username']} 交易订单{$orderid} 金额{$order['amount']} ");
                echo '-1';
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function xunBack(){
        $response = file_get_contents('php://input');


        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);


        //$response = $this->parseXML($response);
        if (!isset($response["memberid"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $memberid = $response["memberid"];



        if (!isset($response["orderid"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $orderid = $response["orderid"];

        if (!isset($response["amount"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $amount = $response["amount"];

        if (!isset($response["datetime"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $datetime = $response["datetime"];

        if (!isset($response["returncode"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }
        $returncode = $response["returncode"];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }
        $sign = $response["sign"];

        $card_id = substr($orderid,0,5);
        $card_id = intval($card_id);
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

        $hmacstr = "amount=>".$amount."&datetime=>".$datetime."&memberid=>".$memberid."&orderid=>".$orderid."&returncode=>".$returncode."&key=".$card['mer_key'];
        $aSign = md5($hmacstr);
        $aSign = strtoupper($aSign);

        if ($sign == $aSign) {

            $order = pay::getItemByOrderNumber($orderid);
            if ($returncode == "00" && $amount == $order['amount'] ) {

                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'OK', $amount, $orderid, $orderid,$order);


            } else {
                $this->logdump("failed!交易失败码:{$response['returncode']},用户名{$order['username']} 交易订单{$orderid} 金额{$order['amount']} ");
                echo '-1';
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function qbjhBack()
    {

        $response = file_get_contents('php://input');
        //dd($response);

        if ($response === '') {
            die('参数错误0');
        }
        parse_str($response, $response);
        //$response = $this->parseXML($response);


        if (!isset($response["method"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $method = $response["method"];


        if (!isset($response["data"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $data = $response["data"];
        $data = json_decode($data,true);


        if (!isset($response["sign"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $sign = $response["sign"];


        if (!isset($response["sign_type"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $sign_type = trim($response["sign_type"]);

        $card_id = intval(substr($data['order_no'],0,5));
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $order = pay::getItemByOrderNumber($data['order_no']);

        $str = $card['mer_key'] . $response["data"] . $card['mer_key'];
        $sign_ = strtoupper(md5($str));

        if (strcmp($sign, $sign_) == 0) {
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->bak('gs4fj@5f!sda*dfuf', 'ok', $data['amount'], $data['order_no'], $data['order_no'], $order);


        } else {
            $this->logdump("failed!交易失败码:{$data['failure_code']},用户名{$order['username']} 交易订单{$data['order_no']} 金额{$order['amount']} ");
            echo '-1';
            die;
        }
    }

    public function bjhfBack()
    {

        $response = file_get_contents('php://input');

        if ($response === '') {
            die('参数错误0');
        }
        //parse_str($response, $response);
        //$response = $this->parseXML($response);
        $response = json_decode($response,true);

        if (!isset($response["info"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $info = $response["info"];


        if (!isset($response["fee"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $fee = $response["fee"];

        if (!isset($response["notifyUrl"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $notifyUrl = $response["notifyUrl"];


        if (!isset($response["tradeNum"])) {
        $this->logdump('参数错误4');
        die('参数错误4');
    }
        $tradeNum = $response["tradeNum"];


        if (!isset($response["errcode"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }
        $errcode = $response["errcode"];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }
        $sign = $response["sign"];

        if (!isset($response["state"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }
        $state = $response["state"];

        if (!isset($response["time"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }
        $time = $response["time"];

        if (!isset($response["opUserId"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }
        $opUserId = $response["opUserId"];

        if (!isset($response["productId"])) {
            $this->logdump('参数错误10');
            die('参数错误10');
        }
        $productId = $response["productId"];

        $card_id = intval(substr($productId,0,5));
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $order = pay::getItemByOrderNumber($productId);

        $resign = strtoupper(sha1("errcode={$errcode}&fee={$fee}&info={$info}&notifyUrl={$notifyUrl}&opUserId={$opUserId}&productId={$productId}&state={$state}&time={$time}&tradeNum={$tradeNum}{$card['mer_key']}"));
        /*$renewdata = array();
        $renewdata['errcode'] = $errcode;
        $renewdata['info'] = $info;
        $renewdata['tradeNum'] = $tradeNum;
        $renewdata['notifyUrl'] = $notifyUrl    ;
        $renewdata['sign'] = $resign;

        $jsonreturn = json_encode($renewdata);*/

        if (strcmp($sign, $resign) == 0) {
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->bak('gs4fj@5f!sda*dfuf', '{"errcode":200}', $fee, $productId, $productId, $order);


        } else {
            $this->logdump("failed!交易失败码:{$errcode},用户名{$order['username']} 交易订单{$productId} 金额{$order['amount']} ");
            echo '-1';
            die;
        }
    }

    public function wzhBack()
    {

        $response = file_get_contents('php://input');


        if ($response === '') {
            die('参数错误0');
        }
        parse_str($response, $response);
        //dd($response);
        //$response = $this->parseXML($response);
        //$response = json_decode($response,true);

        if (!isset($response["tradeNo"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $tradeNo = $response["tradeNo"];


        if (!isset($response["time"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $time = $response["time"];

        if (!isset($response["userid"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $userid = $response["userid"];


        if (!isset($response["amount"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $amount = $response["amount"];


        if (!isset($response["status"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }
        $status = $response["status"];


        if (!isset($response["type"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }
        $type = $response["type"];


        if (!isset($response["sig"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }
        $sig = trim($response["sig"]);

        $card_id = intval(substr($userid,0,5));
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $order = pay::getItemByOrderNumber($userid);

        $sign_text  = $tradeNo."|". $response["desc"]."|". $time."|". $userid."|". $amount."|". $status."|". $type."|". $card['mer_key'];
        //dd($sign_text);
        $sign_md5 	= strtoupper(md5($sign_text));

        if ($sig == $sign_md5) {
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->bak('gs4fj@5f!sda*dfuf', 'ok', $amount, $userid, $userid, $order);


        } else {
            $this->logdump("failed!交易失败码:{$status},用户名{$order['username']} 交易订单{$userid} 金额{$order['amount']} ");
            echo '-1';
            die;
        }
    }


    public function ruiyinBack()
    {

        $response = file_get_contents('php://input');


        if ($response === '') {
            die('参数错误0');
        }
        parse_str($response, $response);
        //dd($response);
        //$response = $this->parseXML($response);
        //$response = json_decode($response,true);

        if (!isset($response["tradeNo"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $tradeNo = $response["tradeNo"];


        if (!isset($response["time"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $time = $response["time"];

        if (!isset($response["userid"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $userid = $response["userid"];


        if (!isset($response["amount"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $amount = $response["amount"];


        if (!isset($response["status"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }
        $status = $response["status"];


        if (!isset($response["type"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }
        $type = $response["type"];


        if (!isset($response["sig"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }
        $sig = trim($response["sig"]);

        $card_id = intval(substr($userid,0,5));
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $order = pay::getItemByOrderNumber($userid);

        $sign_text  = $tradeNo."|". $response["desc"]."|". $time."|". $userid."|". $amount."|". $status."|". $type."|". $card['mer_key'];
        //dd($sign_text);
        $sign_md5 	= strtoupper(md5($sign_text));

        if ($sig == $sign_md5) {
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->bak('gs4fj@5f!sda*dfuf', 'ok', $amount, $userid, $userid, $order);


        } else {
            $this->logdump("failed!交易失败码:{$status},用户名{$order['username']} 交易订单{$userid} 金额{$order['amount']} ");
            echo '-1';
            die;
        }
    }

    public function zf32Back(){
        $response = file_get_contents('php://input');


        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);

        //$response = $this->parseXML($response);
        if (!isset($response["P_UserId"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $P_UserId = $response["P_UserId"];



        if (!isset($response["P_OrderId"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $P_OrderId = $response["P_OrderId"];

        if (!isset($response["P_FaceValue"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $P_FaceValue = $response["P_FaceValue"];

        if (!isset($response["P_ChannelId"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $P_ChannelId = $response["P_ChannelId"];

        if (!isset($response["P_PayMoney"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }
        $P_PayMoney = $response["P_PayMoney"];

        if (!isset($response["P_ErrCode"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }
        $P_ErrCode = $response["P_ErrCode"];

        if (!isset($response["P_PostKey"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }
        $P_PostKey = $response["P_PostKey"];

        $card_id = explode("_", $P_OrderId)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

        $str = $P_UserId.'|'.$P_OrderId .'|'.$response["P_CardId"].'|'.$response["P_CardPass"].'|'.$P_FaceValue.'|'.$P_ChannelId.'|'.$P_PayMoney.'|'.$P_ErrCode.'|'.$card['mer_key'];
        $newPostKey = md5($str);
        if ($newPostKey == $P_PostKey) {

            $order = pay::getItemByOrderNumber($P_OrderId);
            if ($P_ErrCode == "0" && $P_FaceValue == $order['amount'] ) {

                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'errCode=0', $P_FaceValue, $P_OrderId, $P_OrderId,$order);


            } else {
                $this->logdump("failed!交易失败码:{$response['errCode']},用户名{$order['username']} 交易订单{$P_OrderId} 金额{$order['amount']} ");
                echo '-1';
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function caihonBack(){
        $response = file_get_contents('php://input');


        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);

        //$response = $this->parseXML($response);
        if (!isset($response["orderid"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $orderid = $response["orderid"];

        if (!isset($response["opstate"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $opstate = $response["opstate"];

        if (!isset($response["ovalue"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $ovalue = $response["ovalue"];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $sign = $response["sign"];

        $card_id = explode("_", $orderid)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

        $sign_text	= "orderid=$orderid&opstate=$opstate&ovalue=$ovalue".$card['mer_key'];
        $sign_md5 = md5($sign_text);

        if ($sign_md5 == $sign) {

            $order = pay::getItemByOrderNumber($orderid);
            if ($opstate == "0" && $ovalue == $order['amount'] ) {

                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'opstate=0', $ovalue, $orderid, $orderid,$order);


            } else {
                $this->logdump("failed!交易失败码:{$response['opstate']},用户名{$order['username']} 交易订单{$orderid} 金额{$order['amount']} ");
                echo '-1';
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function qianenBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            die('参数错误0');
        }
        //parse_str($response, $response);
        $response = json_decode($response,true);

        if (!isset($response["amount"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $amount = $response['amount'];

        if (!isset($response["orderDt"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $orderDt =  $response['orderDt'];

        if (!isset($response["orderNo"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $orderNo =  $response['orderNo'];

        if (!isset($response["orgOrderNo"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $orgOrderNo =  $response['orgOrderNo'];

        if (!isset($response["orgId"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $orgId =  $response['orgId'];

        if (!isset($response["paySt"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $paySt =  $response['paySt'];

        if (!isset($response["fee"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }

        $fee =  $response['fee'];

        if (!isset($response["subject"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }

        $subject =  $response['subject'];

        if (!isset($response["account"])) {
            $this->logdump('参数错误10');
            die('参数错误10');
        }

        $account =  $response['account'];

        if (!isset($response["respCode"])) {
            $this->logdump('参数错误11');
            die('参数错误11');
        }

        $respCode =  $response['respCode'];

        if (!isset($response["signature"])) {
            $this->logdump('参数错误12');
            die('参数错误12');
        }

        $signature =  $response['signature'];
        unset($response['signature']);
        unset($response['extra']);
        unset($response['body']);
        unset($response['description']);

        $card_id = explode("_", $orgOrderNo)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['card_pass']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

        $pkeyid = @openssl_get_publickey($this->formatKey($card['card_pass']));

        $data = @$this->qianensign($response);

        $ret = @openssl_verify($data, base64_decode($signature), $pkeyid, OPENSSL_ALGO_MD5);

            $order = pay::getItemByOrderNumber($orgOrderNo);

            if ($ret==1) {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', '{"success":"true"}', $amount/100, $orgOrderNo, $orgOrderNo, $order);
            } else {
                $this->logdump("failed!交易失败码:{$respCode},用户名{$order['username']} 交易订单{$orgOrderNo} 金额{$order['amount']} ");
                die;
            }

        }

    public function baishiBack(){
        $response = file_get_contents('php://input');


        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);

        //$response = $this->parseXML($response);
        if (!isset($response["RetStatus"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $RetStatus = $response["RetStatus"];

        if (!isset($response["DealStatus"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $DealStatus = $response["DealStatus"];

        if (!isset($response["Sign"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $Sign = trim($response["Sign"]);

        if (!isset($response["PayType"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $PayType = $response["PayType"];

        if (!isset($response["MerchantID"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }
        $MerchantID = $response["MerchantID"];

        if (!isset($response["OrderID"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }
        $OrderID = $response["OrderID"];

        if (!isset($response["Subject"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }
        $Subject = $response["Subject"];

        if (!isset($response["TradeTime"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }
        $TradeTime = $response["TradeTime"];

        if (!isset($response["Amt"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }
        $Amt = $response["Amt"];
        unset($response["Sign"]);
        unset($response["Summary"]);

        $card_id = explode("_", $OrderID)[0];
        $card = cards::getItemWithCache($card_id);
        $callmernoarr = explode("|",$card['mer_no']);
        $callmernokey = array_search($MerchantID,$callmernoarr);
        $callmerkeyarr = explode("|",$card['mer_key']);
		if (!$card || !$callmerkeyarr["$callmernokey"]) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $response = $this->bsargSort($response);
        $prestr = $this->bscreateLinkstring($response);
        $mysign = $this->bsmd5Sign($prestr, $callmerkeyarr["$callmernokey"]);
        $order = pay::getItemByOrderNumber($OrderID);

        if ($mysign == $Sign) {



            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->bak('gs4fj@5f!sda*dfuf', 'SUCCESS', $Amt, $OrderID, $OrderID, $order);

        }else {
                $this->logdump("failed!交易失败码:{$response['RetStatus']},用户名{$order['username']} 交易订单{$OrderID} 金额{$order['amount']} ");
                echo '-1';
                die;
            }
    }


    public function yitongBack()
    {

        $response = file_get_contents('php://input');


        if ($response === '') {
            die('参数错误0');
        }
        parse_str($response, $response);

        if (!isset($response["respCode"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $respCode = $response["respCode"];


        if (!isset($response["payMentTime"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $payMentTime = $response["payMentTime"];


        if (!isset($response["orderInfo"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $orderInfo = $response["orderInfo"];


        if (!isset($response["merOrderNum"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $merOrderNum = $response["merOrderNum"];


        if (!isset($response["bankSeq"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }
        $bankSeq = $response["bankSeq"];


        if (!isset($response["sysTraceNum"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }
        $sysTraceNum = $response["sysTraceNum"];

        if (!isset($response["userId"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }
        $userId = $response["userId"];

        if (!isset($response["vaSeq"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }
        $vaSeq = $response["vaSeq"];

        if (!isset($response["merchantId"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }
        $merchantId = $response["merchantId"];

        if (!isset($response["vaAmt"])) {
            $this->logdump('参数错误10');
            die('参数错误10');
        }
        $vaAmt = $response["vaAmt"];

        if (!isset($response["orderAmt"])) {
            $this->logdump('参数错误11');
            die('参数错误11');
        }
        $orderAmt = $response["orderAmt"];

        if (!isset($response["orderId"])) {
            $this->logdump('参数错误12');
            die('参数错误12');
        }
        $orderId = $response["orderId"];

        if (!isset($response["bankAmt"])) {
            $this->logdump('参数错误13');
            die('参数错误13');
        }
        $bankAmt = $response["bankAmt"];

        if (!isset($response["tranAmt"])) {
            $this->logdump('参数错误14');
            die('参数错误14');
        }
        $tranAmt = $response["tranAmt"];

        if (!isset($response["settleDate"])) {
            $this->logdump('参数错误15');
            die('参数错误15');
        }
        $settleDate = $response["settleDate"];

        if (!isset($response["integralSeq"])) {
            $this->logdump('参数错误16');
            die('参数错误16');
        }
        $integralSeq = $response["integralSeq"];

        if (!isset($response["bankFeeAmt"])) {
            $this->logdump('参数错误17');
            die('参数错误17');
        }
        $bankFeeAmt = $response["bankFeeAmt"];

        if (!isset($response["currencyType"])) {
            $this->logdump('参数错误18');
            die('参数错误18');
        }
        $currencyType = $response["currencyType"];

        if (!isset($response["tranDateTime"])) {
            $this->logdump('参数错误19');
            die('参数错误19');
        }
        $tranDateTime = $response["tranDateTime"];

        if (!isset($response["bankId"])) {
            $this->logdump('参数错误20');
            die('参数错误20');
        }
        $bankId = $response["bankId"];

        if (!isset($response["integralAmt"])) {
            $this->logdump('参数错误21');
            die('参数错误21');
        }
        $integralAmt = $response["integralAmt"];

        if (!isset($response["bussId"])) {
            $this->logdump('参数错误22');
            die('参数错误22');
        }
        $bussId = $response["bussId"];

        if (!isset($response["transCode"])) {
            $this->logdump('参数错误23');
            die('参数错误23');
        }
        $transCode = $response["transCode"];

        if (!isset($response["signValue"])) {
            $this->logdump('参数错误24');
            die('参数错误24');
        }
        $signValue = $response["signValue"];

        $txnString =  $transCode ."|". $merchantId ."|". $respCode ."|". $sysTraceNum ."|". $merOrderNum ."|"
            . $orderId ."|". $bussId ."|". $tranAmt ."|". $orderAmt ."|" .$bankFeeAmt ."|". $integralAmt ."|"
            . $vaAmt ."|". $bankAmt ."|". $bankId ."|". $integralSeq ."|". $vaSeq ."|"
            . $bankSeq ."|". $tranDateTime ."|". $payMentTime ."|". $settleDate ."|". $currencyType ."|". $orderInfo ."|". $userId;

        $card_id = intval(substr($merOrderNum,0,5));
        $card = cards::getItemWithCache($card_id);
        $order = pay::getItemByOrderNumber($merOrderNum);
		if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $verifySign = $this->verify_Sign($txnString,$signValue,$card['mer_key']);

        if ($verifySign) {
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->bak('gs4fj@5f!sda*dfuf', 'success', $tranAmt, $merOrderNum, $merOrderNum, $order);


        } else {
            $this->logdump("failed!交易失败码:{$respCode},用户名{$order['username']} 交易订单{$merOrderNum} 金额{$order['amount']} ");
            echo '-1';
            die;
        }
    }

  public function verify_sign($txnString, $signString,$datakey)
    {
        return md5($txnString.$datakey)==$signString;
    }


    public function huiheBack()
    {

        $response = file_get_contents('php://input');


        if ($response === '') {
            die('参数错误0');
        }
        parse_str($response, $response);

        if (!isset($response["AppId"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $AppId = $response["AppId"];


        if (!isset($response["Code"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $Code = $response["Code"];


        if (!isset($response["OutTradeNo"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $OutTradeNo = $response["OutTradeNo"];


        if (!isset($response["Sign"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $Sign = $response["Sign"];


        if (!isset($response["TotalAmount"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }
        $TotalAmount = $response["TotalAmount"];


        if (!isset($response["TradeNo"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }
        $response["TradeNo"] = trim($response["TradeNo"]);

        if (!isset($response["SignType"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }
        $SignType = $response["SignType"];
        $TradeNo = $response["TradeNo"];
        unset($response["Sign"]);
        unset($response["SignType"]);

        $card_id = explode("_", $OutTradeNo)[0];
        $card = cards::getItemWithCache($card_id);
		if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $order = pay::getItemByOrderNumber($OutTradeNo);

        $html_text = $this->hhbuildRequestPara($response,$SignType,$card['mer_key']);

        if (($html_text['Sign']==strtolower($Sign))&&($response['Code']=="0")) {
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->bak('gs4fj@5f!sda*dfuf', 'SUCCESS', $TotalAmount, $OutTradeNo, $OutTradeNo, $order);


        } else {
            $this->logdump("failed!交易失败码:{$Code},用户名{$order['username']} 交易订单{$OutTradeNo} 金额{$order['amount']} ");
            echo '-1';
            die;
        }
    }

  public  function hhbuildRequestPara($para_temp,$SignType,$merkey) {
        //除去待签名参数数组中的空值和签名参数
        $para_filter = $this->hhparaFilter($para_temp);

        //对待签名参数数组排序
        $para_sort = $this->hhargSort($para_filter);

        //生成签名结果
        $mysign = $this->hhbuildRequestMysign($para_sort,$SignType,$merkey);

        //签名结果与签名方式加入请求提交参数组中
        $para_sort['Sign'] = $mysign;
        $para_sort['SignType'] = strtoupper(trim($SignType));

        return $para_sort;
    }

public function hhparaFilter($para) {
    $para_filter = array();
    while (list ($key, $val) = each ($para)) {
        if($key == "Sign" || $key == "SignType" || $val == "")continue;
        else	$para_filter[$key] = $para[$key];
    }
    return $para_filter;
}

public function hhargSort($para) {
    ksort($para);
    reset($para);
    return $para;
}

 public function hhbuildRequestMysign($para_sort,$SignType,$merkey) {
        //把数组所有元素，按照“参数=参数值”的模式用“&”字符拼接成字符串
        $prestr = $this->hhcreateLinkstring($para_sort);

        $mysign = "";
        switch (strtoupper(trim($SignType))) {
            case "MD5" :
                $mysign = $this->hhmd5Sign($prestr,$merkey);
                break;
            default :
                $mysign = "";
        }

        return $mysign;
    }

    public function hhcreateLinkstring($para) {
        $arg  = "";
        while (list ($key, $val) = each ($para)) {
            $arg.=$key."=".$val."&";
        }
        //去掉最后一个&字符
        $arg = substr($arg,0,count($arg)-2);

        //如果存在转义字符，那么去掉转义
        if(get_magic_quotes_gpc()){$arg = stripslashes($arg);}

        return $arg;
    }

   public function hhmd5Sign($prestr, $key) {
        $prestr = $prestr . $key;
        return md5($prestr);
    }
    public function tongsaoBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["merchant_code"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $merchant_code = $response["merchant_code"];

        if (!isset($response["notify_type"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $notify_type = $response["notify_type"];

        if (!isset($response["notify_id"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $notify_id = $response['notify_id'];

        if (!isset($response["interface_version"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $interface_version = $response['interface_version'];

        if (!isset($response["sign_type"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $sign_type = $response['sign_type'];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $sign =  base64_decode($response['sign']);

        if (!isset($response["order_no"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }

        $order_no =  $response['order_no'];

        if (!isset($response["order_time"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }

        $order_time =  $response['order_time'];

        if (!isset($response["order_amount"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }

        $order_amount =  $response['order_amount'];

        if (!isset($response["trade_no"])) {
            $this->logdump('参数错误11');
            die('参数错误11');
        }

        $trade_no =  $response['trade_no'];

        if (!isset($response["trade_time"])) {
            $this->logdump('参数错误12');
            die('参数错误12');
        }

        $trade_time =  $response['trade_time'];

        if (!isset($response["trade_status"])) {
            $this->logdump('参数错误13');
            die('参数错误13');
        }

        $trade_status =  $response['trade_status'];

        $signStr = "";

        $bank_seq_no =  isset($response['bank_seq_no']) ? $response['bank_seq_no'] : '';

        if($bank_seq_no != ""){
            $signStr = $signStr."bank_seq_no=" . $bank_seq_no."&";
        }

        $signStr = $signStr . "interface_version=" . $interface_version . "&";
        $signStr = $signStr . "merchant_code=" . $merchant_code . "&";
        $signStr = $signStr . "notify_id=" . $notify_id . "&";
        $signStr = $signStr . "notify_type=" . $notify_type . "&";
        $signStr = $signStr . "order_amount=" . $order_amount . "&";
        $signStr = $signStr . "order_no=" . $order_no . "&";
        $signStr = $signStr . "order_time=" . $order_time . "&";

        $orginal_money =  isset($response["orginal_money"]) ? $response["orginal_money"]:"";

        if($orginal_money != ""){
            $signStr = $signStr."orginal_money=" . $orginal_money."&";
        }

        $signStr = $signStr . "trade_no=" . $trade_no . "&";
        $signStr = $signStr . "trade_status=" . $trade_status . "&";
        $signStr = $signStr . "trade_time=" . $trade_time;

        $card_id = explode("DDB", $order_no)[0];
        $card = cards::getItemWithCache($card_id);
        $dinpay_public_key = openssl_get_publickey($this->formatKey($card['card_pass']));
        $flag = openssl_verify($signStr, $sign, $dinpay_public_key, OPENSSL_ALGO_MD5);

        if ($flag) {
            $order = pay::getItemByOrderNumber($order_no);

            if ($trade_status == "SUCCESS") {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'SUCCESS', $order_amount, $order_no, $trade_no, $order);
            } else {
                $this->logdump("failed!交易失败码:{$trade_status},用户名{$order['username']} 交易订单{$trade_no} 金额{$order['amount']} ");
                die;
            }
        } else {
            echo '不合法数据';
            $this->logdump("签名验证失败，程序中止。");
            die;
        }
    }

    public function qiqiBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["Msg"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $Msg = $response['Msg'];

        if (!isset($response["OrderAmount"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $OrderAmount =  $response['OrderAmount'];

        if (!isset($response["OrderNo"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $OrderNo =  $response['OrderNo'];

        if (!isset($response["TimeEnd"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $TimeEnd =  $response['TimeEnd'];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $sign =  $response['sign'];
        unset($response['sign']);

        $card_id = explode("_", $Msg)[0];
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

        $body = "Msg=".$Msg;
        $body .= "&OrderAmount=".$OrderAmount;
        $body .= "&OrderNo=".$OrderNo;
        $body .= "&TimeEnd=".$TimeEnd;
        $signkey = $body."&key=".$card['mer_key'];
        $newSign = strtoupper(md5($signkey));

        $order = pay::getItemByOrderNumber($Msg);
        if ($sign == $newSign) {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'],'DECODE','gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', '0000', $OrderAmount, $Msg, $Msg, $order);
            } else {
                $this->logdump("failed!交易失败码:00,用户名{$order['username']}交易订单{$Msg} 金额{$order['amount']} ");
                die;
            }

    }

    public function jinyangBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["partner"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $partner = $response['partner'];

        if (!isset($response["ordernumber"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $ordernumber =  $response['ordernumber'];

        if (!isset($response["orderstatus"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $orderstatus =  $response['orderstatus'];

        if (!isset($response["paymoney"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $paymoney =  $response['paymoney'];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $sign =  $response['sign'];

        $card_id = intval(substr($ordernumber,0,5));
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

        $callsign = md5("partner={$partner}&ordernumber={$ordernumber}&orderstatus={$orderstatus}&paymoney={$paymoney}{$card['mer_key']}");
        $order = pay::getItemByOrderNumber($ordernumber);

        if ($callsign == $sign) {
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->bak('gs4fj@5f!sda*dfuf', 'ok', $paymoney, $ordernumber, $ordernumber, $order);
        } else {
            $this->logdump("failed!交易失败码:{$orderstatus},用户名{$order['username']} 交易订单{$ordernumber} 金额{$order['amount']} ");
            die;
        }
    }


    public function F86Back()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            die('参数错误0');
        }

        $responsearr = json_decode($response,true);
        if (!isset($responsearr['outTradeNo'])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $callorderno = $responsearr['outTradeNo'];
        if (!isset($responsearr['payedAmount'])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $callamt = $responsearr['payedAmount'];
        if (!isset($responsearr['status'])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $callstatus = $responsearr['status'];
        $url = ($this->getRootUrl())."/pay/F86Back.php";
        $headers = $this->getallheaders();
        $signed = $headers["x-oapi-sign"];
        unset($headers["x-oapi-sign"]);
        $card_id = intval(substr($callorderno,0,5));
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

            $order = pay::getItemByOrderNumber($callorderno);
            if ($this->md5_validate_sign($signed, $url, $headers, $response, $card['mer_key'])) {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'SUCCEED', $callamt, $callorderno, $callorderno, $order);
            } else {
                $this->logdump("failed!交易失败码:{$callstatus},用户名{$order['username']} 交易订单{$callorderno} 金额{$order['amount']} ");
                die;
            }
        }

  public function getallheaders() {
        $headers = array();
        foreach ($_SERVER as $name => $value) {
            if (substr($name, 0, 5) == 'HTTP_') {
                $key = str_replace(' ', '-', strtolower(str_replace('_', ' ', substr($name, 5))));
                if(0 == strcmp($key, "x-oapi-sign")) {
                    $headers[$key] = $value;
                } else {
                    $headers[$key] = urldecode($value);
                }
            }
        }
        return $headers;
    }

    public function md5_validate_sign($signed, $url, $headers, $body ,$md5Key) {
        return $signed == $this->md5_sign($url, $headers, $body, $md5Key);
    }

    public function md5_sign($url, $headers, $body , $md5Key) {

        ksort($headers);

        $str = $url;
        foreach ($headers as $key => $value) {
            if(strpos($key, "x-oapi-") === 0) {
                $str = $str . "&" . $key . "=" . $value ;
            }
        }

        if(isset($body)) {
            $str = $str . "&" . $body;
        }

        $str = $str . "&" . $md5Key;

        return strtoupper(md5($str));
    }

  public function getRootUrl()
    {
        $protocol = strpos(strtolower($_SERVER['SERVER_PROTOCOL']), 'https') == false ? 'http' : 'https';
        return $protocol . '://' . $_SERVER['HTTP_HOST'] . ':' . $_SERVER['SERVER_PORT'];
    }



    public function sftBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["service"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $service = $response['service'];

        if (!isset($response["merId"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $merId =  $response['merId'];

        if (!isset($response["tradeNo"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $tradeNo =  $response['tradeNo'];

        if (!isset($response["tradeDate"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $tradeDate =  $response['tradeDate'];

        if (!isset($response["opeNo"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $opeNo =  $response['opeNo'];

        if (!isset($response["opeDate"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $opeDate =  $response['opeDate'];

        if (!isset($response["amount"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }

        $amount =  $response['amount'];

        if (!isset($response["status"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }

        $status =  $response['status'];

        if (!isset($response["payTime"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }

        $payTime =  $response['payTime'];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误10');
            die('参数错误10');
        }

        $sign =  $response['sign'];

        if (!isset($response["notifyType"])) {
            $this->logdump('参数错误11');
            die('参数错误11');
        }

        $notifyType =  $response['notifyType'];

        $card_id = intval(substr($tradeNo,0,5));
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $callsignstr = $this->notifysignstr($response);
        $resultVerify = $this->sftverify($callsignstr,$sign,$card['mer_key']);

        $order = pay::getItemByOrderNumber($tradeNo);

            if ($resultVerify) {
                $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
                $this->bak('gs4fj@5f!sda*dfuf', 'SUCCESS', $amount, $tradeNo, $tradeNo, $order);
            } else {
                $this->logdump("failed!交易失败码:{$status},用户名{$order['username']} 交易订单{$tradeNo} 金额{$order['amount']} ");
                die;
            }
        }



    public function notifysignstr($data){
        $result = sprintf(
            "service=%s&merId=%s&tradeNo=%s&tradeDate=%s&opeNo=%s&opeDate=%s&amount=%s&status=%s&extra=%s&payTime=%s",
            $data['service'],
            $data['merId'],
            $data['tradeNo'],
            $data['tradeDate'],
            $data['opeNo'],
            $data['opeDate'],
            $data['amount'],
            $data['status'],
            $data['extra'],
            $data['payTime']
        );
        return $result;
    }

    public function sftverify($data,$signature,$xmkey) {
        $mySign = $this->sftxsign($data,$xmkey);
        if (strcasecmp($mySign, $signature) == 0) {
            return true;
        } else {
            return false;
        }

    }

    public function sftxsign($data,$merkey) {

        $signature=md5($data.$merkey);


        return $signature;


    }

    public function qianlongtongBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["appid"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $appid = $response['appid'];

        if (!isset($response["ordernumber"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $ordernumber =  $response['ordernumber'];

        if (!isset($response["orderstatus"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $orderstatus =  $response['orderstatus'];

        if (!isset($response["paymoney"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $paymoney =  $response['paymoney'];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $sign =  $response['sign'];

        $card_id = intval(substr($ordernumber,0,5));
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $signSource = sprintf("appid=%s&ordernumber=%s&orderstatus=%s&paymoney=%s%s", $appid, $ordernumber, $orderstatus, $paymoney, $card['mer_key']);

        $order = pay::getItemByOrderNumber($ordernumber);

        if ($sign == md5($signSource)) {
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->bak('gs4fj@5f!sda*dfuf', 'success', $paymoney, $ordernumber, $ordernumber, $order);
        } else {
            $this->logdump("failed!交易失败码:{$orderstatus},用户名{$order['username']} 交易订单{$ordernumber} 金额{$order['amount']} ");
            die;
        }
    }


    public function zhidebaoBack()
    {
        $response = file_get_contents('php://input');


        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["trade_no"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $trade_no = $response['trade_no'];

        if (!isset($response["sign_type"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $sign_type =  $response['sign_type'];

        if (!isset($response["notify_type"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $notify_type =  $response['notify_type'];

        if (!isset($response["merchant_code"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $merchant_code =  $response['merchant_code'];

        if (!isset($response["order_no"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $order_no =  $response['order_no'];

        if (!isset($response["trade_status"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $trade_status =  $response['trade_status'];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }

        $sign =  base64_decode($response['sign']);

        if (!isset($response["order_amount"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }

        $order_amount =  $response['order_amount'];

        if (!isset($response["interface_version"])) {
            $this->logdump('参数错误9');
            die('参数错误9');
        }

        $interface_version =  $response['interface_version'];

        if (!isset($response["bank_seq_no"])) {
            $this->logdump('参数错误10');
            die('参数错误10');
        }

        $bank_seq_no =  $response['bank_seq_no'];

        if (!isset($response["order_time"])) {
            $this->logdump('参数错误11');
            die('参数错误11');
        }

        $order_time =  $response['order_time'];

        if (!isset($response["notify_id"])) {
            $this->logdump('参数错误12');
            die('参数错误12');
        }

        $notify_id =  $response['notify_id'];

        if (!isset($response["trade_time"])) {
            $this->logdump('参数错误13');
            die('参数错误13');
        }

        $trade_time =  $response['trade_time'];

        $card_id = intval(substr($order_no,0,5));
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['card_pass']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $signStr = "";
        $signStr = $signStr."bank_seq_no=".$bank_seq_no."&";
        $signStr = $signStr."interface_version=".$interface_version."&";
        $signStr = $signStr."merchant_code=".$merchant_code."&";
        $signStr = $signStr."notify_id=".$notify_id."&";
        $signStr = $signStr."notify_type=".$notify_type."&";
        $signStr = $signStr."order_amount=".$order_amount."&";
        $signStr = $signStr."order_no=".$order_no."&";
        $signStr = $signStr."order_time=".$order_time."&";
        $signStr = $signStr."trade_no=".$trade_no."&";
        $signStr = $signStr."trade_status=".$trade_status."&";
        $signStr = $signStr."trade_time=".$trade_time;
        $dinpay_public_key = openssl_get_publickey($this->formatKey($card['card_pass']));
        $flag = openssl_verify($signStr,$sign,$dinpay_public_key,OPENSSL_ALGO_MD5);

        $order = pay::getItemByOrderNumber($order_no);

        if ($flag) {
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->bak('gs4fj@5f!sda*dfuf', 'SUCCESS', $order_amount, $order_no, $order_no, $order);
        } else {
            $this->logdump("failed!交易失败码:{$trade_status},用户名{$order['username']} 交易订单{$order_no} 金额{$order['amount']} ");
            die;
        }
    }


    public function quanyuBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["amount"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $amount = $response['amount'];

        if (!isset($response["body"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $body =  $response['body'];

        if (!isset($response["outOrderNo"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $outOrderNo =  $response['outOrderNo'];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $sign =  $response['sign'];

        $card_id = intval(substr($outOrderNo,0,5));
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $callsign = md5("amount=".$amount."&body=".$body."&outOrderNo=".$outOrderNo."&key=".$card['mer_key']);

        $order = pay::getItemByOrderNumber($outOrderNo);

        if ($callsign == $sign) {
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->bak('gs4fj@5f!sda*dfuf', 'SUCCESS', $amount, $outOrderNo, $outOrderNo, $order);
        } else {
            $this->logdump("failed!交易失败!,用户名{$order['username']} 交易订单{$outOrderNo} 金额{$order['amount']} ");
            die;
        }
    }


    public function kexunBack()
    {

        $response = file_get_contents('php://input');


        if ($response === '') {
            die('参数错误0');
        }
        parse_str($response, $response);

        if (!isset($response["orderid"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $orderid = $response["orderid"];


        if (!isset($response["opstate"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $opstate = $response["opstate"];

        if (!isset($response["ovalue"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $ovalue = $response["ovalue"];


        if (!isset($response["sign"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $sign = $response["sign"];

        $card_id = intval(substr($orderid,0,5));
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $order = pay::getItemByOrderNumber($orderid);

        $sign_text	= "orderid=$orderid&opstate=$opstate&ovalue=$ovalue".$card['mer_key'];
        $callsign = md5($sign_text);

        if ($sign == $callsign) {
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->bak('gs4fj@5f!sda*dfuf', 'opstate=0', $ovalue, $orderid, $orderid, $order);


        } else {
            $this->logdump("failed!交易失败码:{$opstate},用户名{$order['username']} 交易订单{$orderid} 金额{$order['amount']} ");
            echo '-1';
            die;
        }
    }


    public function yafuBack()
    {

        $response = file_get_contents('php://input');


        if ($response === '') {
            die('参数错误0');
        }
        parse_str($response, $response);

        if (!isset($response["version"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }
        $version = $response["version"];


        if (!isset($response["consumerNo"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }
        $consumerNo = $response["consumerNo"];

        if (!isset($response["merOrderNo"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }
        $merOrderNo = $response["merOrderNo"];


        if (!isset($response["orderNo"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }
        $orderNo = $response["orderNo"];

        if (!isset($response["transAmt"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }
        $transAmt = $response["transAmt"];

        if (!isset($response["orderStatus"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }
        $orderStatus = $response["orderStatus"];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }
        $sign = $response["sign"];

        if (!isset($response["payType"])) {
            $this->logdump('参数错误8');
            die('参数错误8');
        }
        $payType = $response["payType"];
        unset($response["sign"]);
        unset($response["merRemark"]);

        $card_id = intval(substr($merOrderNo,0,5));
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }
        $order = pay::getItemByOrderNumber($merOrderNo);
        $callsign = strtoupper($this->yfsignstr($response,$card['mer_key']));
        if ($sign == $callsign && $orderStatus == '1') {
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->bak('gs4fj@5f!sda*dfuf', 'SUCCESS', $transAmt, $merOrderNo, $merOrderNo, $order);


        } else {
            $this->logdump("failed!交易失败码:{$orderStatus},用户名{$order['username']} 交易订单{$merOrderNo} 金额{$order['amount']} ");
            echo '-1';
            die;
        }
    }


    public function fukatongBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["merchant_code"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $merchant_code = $response['merchant_code'];

        if (!isset($response["order_no"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $order_no =  $response['order_no'];

        if (!isset($response["order_amount"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $order_amount =  $response['order_amount'];

        if (!isset($response["order_time"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $order_time =  $response['order_time'];

        if (!isset($response["trade_status"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $trade_status =  $response['trade_status'];

        if (!isset($response["trade_no"])) {
            $this->logdump('参数错误6');
            die('参数错误6');
        }

        $trade_no =  $response['trade_no'];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误7');
            die('参数错误7');
        }

        $sign =  $response['sign'];

        $card_id = intval(substr($order_no,0,5));
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

        $fktsign = MD5("merchant_code=".$merchant_code."&order_amount=".$order_amount."&order_no=".$order_no."&order_time=".$order_time."&trade_no=".$trade_no."&trade_status=".$trade_status."&key=".$card['mer_key']);
        $order = pay::getItemByOrderNumber($order_no);

        if ($fktsign == $sign) {
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->bak('gs4fj@5f!sda*dfuf', 'success', $order_amount, $order_no, $order_no, $order);
        } else {
            $this->logdump("failed!交易失败码:{$trade_status},用户名{$order['username']} 交易订单{$order_no} 金额{$order['amount']} ");
            die;
        }
    }

    public function hufuBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["orderid"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $orderid = $response['orderid'];

        if (!isset($response["opstate"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $opstate =  $response['opstate'];

        if (!isset($response["ovalue"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $ovalue =  $response['ovalue'];

        if (!isset($response["sign"])) {
            $this->logdump('参数错误4');
            die('参数错误4');
        }

        $sign =  $response['sign'];

        $card_id = intval(substr($orderid,0,5));
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

        $callsign = md5("orderid={$orderid}&opstate={$opstate}&ovalue={$ovalue}{$card['mer_key']}");
        $order = pay::getItemByOrderNumber($orderid);

        if ($callsign == $sign) {
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->bak('gs4fj@5f!sda*dfuf', 'opstate=0', $ovalue, $orderid, $orderid, $order);
        } else {
            $this->logdump("failed!交易失败码:{$opstate},用户名{$order['username']} 交易订单{$orderid} 金额{$order['amount']} ");
            die;
        }
    }


    public function safeBack()
    {
        $response = file_get_contents('php://input');

        if ($response ===  '') {
            die('参数错误0');
        }

        parse_str($response, $response);

        if (!isset($response["userID"])) {
            $this->logdump('参数错误1');
            die('参数错误1');
        }

        $userID = $response['userID'];

        if (!isset($response["orderId"])) {
            $this->logdump('参数错误2');
            die('参数错误2');
        }

        $orderId =  $response['orderId'];

        if (!isset($response["amt"])) {
            $this->logdump('参数错误3');
            die('参数错误3');
        }

        $amt =  $response['amt'];

        if (!isset($response["succ"])) {
        $this->logdump('参数错误4');
        die('参数错误4');
    }

        $succ =  $response['succ'];

        if (!isset($response["hmac2"])) {
            $this->logdump('参数错误5');
            die('参数错误5');
        }

        $hmac2 =  $response['hmac2'];

        $card_id = intval(substr($orderId,0,5));
        $card = cards::getItemWithCache($card_id);

        if (!$card || !$card['mer_key']) {
            echo '不合法数据,签名不能为空.';
            $this->logdump('伪造数据,程序终止.');
            die;
        }

        $callsign = md5($userID."&".$orderId."&".$amt."&".$succ."&".$card['mer_key']);
        $order = pay::getItemByOrderNumber($orderId);

        if ($callsign == $hmac2) {
            $this->logdump('回调地址：' . $this->authcode($order['requestURI'], 'DECODE', 'gs4fj@5f!sda*dfuf'));
            $this->bak('gs4fj@5f!sda*dfuf', 'success', $amt, $orderId, $orderId, $order);
        } else {
            $this->logdump("failed!交易失败码:{$succ},用户名{$order['username']} 交易订单{$orderId} 金额{$order['amount']} ");
            die;
        }
    }




    public function bak($authcode_key, $success_code, $orderAmount, $orderNo, $tradeNo, $order)
    {
        $depositOrder = deposits::getItemByOrderNum($orderNo, 2);


        if (empty($order)) {

            $this->logdump("订单异常：订单不存在：{$orderNo}");
        }
        if ($order['status'] == '8' && $depositOrder['status'] == 8) {
            $this->logdump("订单异常：被回调的应该是未被处理的：{$order['order_number']} 状态：{$order['status']}");
            echo $success_code;
            die();
        }

        $random_benefit = config::getConfig('random_benefit');

        if (empty($orderAmount) || $order['amount'] - $orderAmount > $random_benefit) {
            $this->logdump("订单异常：{$order['amount']}与{$orderAmount}金额不相等");
            die;
        }

        if ($depositOrder['amount'] != $order['amount']) {
            $this->logdump("金额异常：{$depositOrder['amount']}与{$order['amount']}金额不相等");
            die;
        }

        $now = date('Y-m-d H:i:s');

        $update_data = array(
            'status' => 8,
            'pay_time' => $now,
            'trade_number' => $tradeNo,
        );

        pay::updateItem($orderNo, $update_data);

        //用CURL  向游戏提交数据
        $data = "verify=formal&user_id=" . $order['user_id'] . "&username=" . $order['username'] . "&amount=" . $order['amount'] . "&order_num=" . $tradeNo . "&shop_order_num=" . $orderNo . "&card_id=" . $order['card_id'] . "&bank_id="
            . $order['bank_id'] . "&pay_time=" . $now . "&source_fee=" . $order['source_fee'] . "&target_fee=" . $order['target_fee'];

        // $this->logdump(var_export($data, TRUE));
        $info = array();
        $call_back_result = $this->curlPostData($this->authcode($order['requestURI'], 'DECODE', $authcode_key), $data, $info);

        if (!is_numeric($call_back_result)) {
            $times = 0;
            while ($times < 3) {
                sleep(60);
                $call_back_result = $this->curlPostData($this->authcode($order['requestURI'], 'DECODE', $authcode_key), $data, $info);
                $this->logdump("第一次执行失败后 重发第" . ($times + 1) . "次 用户名{$order['username']} 订单{$order['trade_number']} 结果call_back_result={$call_back_result}");
                if (is_numeric($call_back_result)) {
                    break;
                }
                $times++;
            }
        }

        if ($call_back_result != "" && is_numeric($call_back_result)) {
            $update_data = array(
                'call_back_result' => $call_back_result,
            );

            if (!pay::updateItem($orderNo, $update_data)) {
                //如果商城的数据库修改失败需要记录，然后手动更新
                $data = array(
                    'user_id' => $order['user_id'],
                    'order_number' => $orderNo,
                    'trade_number' => $tradeNo,
                );

                pay::addErrorItem($data);
            }
        }

        //但是商城还是要返回成功给第三方的
        $this->logdump("success!用户名{$order['username']} 交易订单{$tradeNo} 金额{$order['amount']} 回调结果 {$call_back_result}");

        if ($call_back_result == '8' || $call_back_result == '9') {
            echo $success_code;
        }

        die;
    }

    public function getClientIp()
    {
        if (!empty($_SERVER['HTTP_CLIENT_IP'])) {
            $ip = $_SERVER['HTTP_CLIENT_IP'];
        } elseif (!empty($_SERVER['HTTP_X_FORWARDED_FOR'])) {
            $ip = $_SERVER['HTTP_X_FORWARDED_FOR'];
        } else {
            $ip = $_SERVER['REMOTE_ADDR'];
        }

        return $ip;
    }

    public function getShunFuSign($value, $key)
    {
        return strtoupper(md5($this->shunfuJsonEncode($value) . $key));
    }

    public function getLuoBoSign($value, $key)
    {
        $toSignString = "parter=" . $value['parter'] . "&type=" . $value['type'] . "&value=". $value['value'] . "&orderid=" . $value['orderid'] . "&callbackurl=" . $value['callbackurl'] . $key;

        $sign = md5($toSignString);
        return $sign;
    }

    public function shunfuJsonEncode($input)
    {
        if (is_string($input)) {
            $text = $input;
            $text = str_replace('\\', '\\\\', $text);
            $text = str_replace(
                array("\r", "\n", "\t", "\""),
                array('\r', '\n', '\t', '\\"'),
                $text);
            $text = str_replace("\\/", "/", $text);
            return '"' . $text . '"';
        } else if (is_array($input) || is_object($input)) {
            $arr = array();
            $is_obj = is_object($input) || (array_keys($input) !== range(0, count($input) - 1));
            foreach ($input as $k => $v) {
                if ($is_obj) {
                    $arr[] = self::shunfuJsonEncode($k) . ':' . self::shunfuJsonEncode($v);
                } else {
                    $arr[] = self::shunfuJsonEncode($v);
                }
            }
            if ($is_obj) {
                $arr = str_replace("\\/", "/", $arr);
                return '{' . join(',', $arr) . '}';
            } else {
                $arr = str_replace("\\/", "/", $arr);
                return '[' . join(',', $arr) . ']';
            }
        } else {
            $input = str_replace("\\/", "/", $input);
            return $input . '';
        }
    }

    public function shunfuPost($url,$data) {
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "POST");
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE);
        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);
        curl_setopt($ch, CURLOPT_AUTOREFERER, 1);
        curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        $tmpInfo = curl_exec($ch);

        if (curl_errno($ch)) {
            return curl_error($ch);
        }

        return $tmpInfo;
    }

    public function curlPostData($url, $data, &$info)
    {
        // 模拟提交数据函数
        $curl = curl_init(); // 启动一个CURL会话
        curl_setopt($curl, CURLOPT_URL, $url); // 要访问的地址
        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, 0); //
        curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 2); //
        curl_setopt($curl, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows NT 5.1; rv:31.0) Gecko/20100101 Firefox/31.0'); // 模拟用户使用的浏览器
        curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1); // 使用自动跳转
        curl_setopt($curl, CURLOPT_AUTOREFERER, 1); //
        curl_setopt($curl, CURLOPT_POST, 1); // 发送一个常规的Post请求
        curl_setopt($curl, CURLOPT_POSTFIELDS, $data); // Post提交的数据包
        curl_setopt($curl, CURLOPT_TIMEOUT, 120); // 设置超时限制防止死循环
        curl_setopt($curl, CURLOPT_HEADER, 0); // 显示返回的Header区域内容
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1); // 获取的信息以文件流的形式返回
        $tmpInfo = curl_exec($curl); // 执行操作
        if (curl_errno($curl)) {
            logdump('CURL Errno' . curl_error($curl)); //捕抓异常
        }
        $info = curl_getinfo($curl);
        curl_close($curl); // 关闭CURL会话
        return $tmpInfo; // 返回数据
    }

    public function wzhcurlPostData($url, $data, &$info,$header)
    {
        // 模拟提交数据函数
        $curl = curl_init(); // 启动一个CURL会话
        curl_setopt($curl, CURLOPT_URL, $url); // 要访问的地址
        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, 0); //
        curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 2); //
        curl_setopt($curl, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows NT 5.1; rv:31.0) Gecko/20100101 Firefox/31.0'); // 模拟用户使用的浏览器
        curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1); // 使用自动跳转
        curl_setopt($curl, CURLOPT_AUTOREFERER, 1); //
        curl_setopt($curl, CURLOPT_POST, 1); // 发送一个常规的Post请求
        curl_setopt($curl, CURLOPT_POSTFIELDS, $data); // Post提交的数据包
        curl_setopt($curl, CURLOPT_TIMEOUT, 120); // 设置超时限制防止死循环
        curl_setopt($curl, CURLOPT_HEADER, $header); // 显示返回的Header区域内容
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1); // 获取的信息以文件流的形式返回
        $tmpInfo = curl_exec($curl); // 执行操作
        if (curl_errno($curl)) {
            logdump('CURL Errno' . curl_error($curl)); //捕抓异常
        }
        $info = curl_getinfo($curl);
        curl_close($curl); // 关闭CURL会话
        return $tmpInfo; // 返回数据
    }

    public function curlGetData($url, &$info)
    {
        // 模拟提交数据函数
        $curl = curl_init(); // 启动一个CURL会话
        curl_setopt($curl, CURLOPT_URL, $url); // 要访问的地址
        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, 0); //
        curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 2); //
        curl_setopt($curl, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows NT 5.1; rv:31.0) Gecko/20100101 Firefox/31.0'); // 模拟用户使用的浏览器
        curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1); // 使用自动跳转
        curl_setopt($curl, CURLOPT_AUTOREFERER, 1); //
        curl_setopt($curl, CURLOPT_TIMEOUT, 120); // 设置超时限制防止死循环
        curl_setopt($curl, CURLOPT_HEADER, 0); // 显示返回的Header区域内容
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1); // 获取的信息以文件流的形式返回
        $tmpInfo = curl_exec($curl); // 执行操作
        if (curl_errno($curl)) {
            logdump('CURL Errno' . curl_error($curl)); //捕抓异常
        }
        $info = curl_getinfo($curl);
        curl_close($curl); // 关闭CURL会话
        return $tmpInfo; // 返回数据
    }

    public function xinfucurlGetData($url,$string, &$info)
    {
        $ch=curl_init();
        curl_setopt($ch,CURLOPT_URL,$url);
        curl_setopt($ch,CURLOPT_HEADER,0);
        curl_setopt($ch,CURLOPT_RETURNTRANSFER,1);
        curl_setopt($ch,CURLOPT_POST,1);
        curl_setopt($ch,CURLOPT_POSTFIELDS,$string);
        $data = curl_exec($ch);
        $returnData=json_decode($data,true);
        curl_close($ch);
        return $returnData; // 返回数据
    }

    public function wangfutongCurlPostData($url, $data, &$info)
    {
        // 模拟提交数据函数
        $curl = curl_init(); // 启动一个CURL会话
        curl_setopt($curl, CURLOPT_URL, $url); // 要访问的地址
        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, 0); //
        curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 2); //
        curl_setopt($curl, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows NT 5.1; rv:31.0) Gecko/20100101 Firefox/31.0'); // 模拟用户使用的浏览器
        curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1); // 使用自动跳转
        curl_setopt($curl, CURLOPT_POST, 1); // 发送一个常规的Post请求
        curl_setopt($curl, CURLOPT_POSTFIELDS, $data); // Post提交的数据包
        curl_setopt($curl, CURLOPT_TIMEOUT, 120); // 设置超时限制防止死循环
        curl_setopt($curl, CURLOPT_HEADER, 0); // 显示返回的Header区域内容
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1); // 获取的信息以文件流的形式返回
        $tmpInfo = curl_exec($curl); // 执行操作
        if (curl_errno($curl)) {
            logdump('CURL Errno' . curl_error($curl)); //捕抓异常
        }
        $info = curl_getinfo($curl);
        curl_close($curl); // 关闭CURL会话
        return $tmpInfo; // 返回数据
    }

    public function curlPostDataNew($url, $data, &$info)
    {
        // 模拟提交数据函数
        $curl = curl_init(); // 启动一个CURL会话
        curl_setopt($curl, CURLOPT_URL, $url); // 要访问的地址
        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, 0); //
        curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 2); //
        curl_setopt($curl, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows NT 5.1; rv:31.0) Gecko/20100101 Firefox/31.0'); // 模拟用户使用的浏览器
        curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1); // 使用自动跳转
        curl_setopt($curl, CURLOPT_AUTOREFERER, 1); //
        curl_setopt($curl, CURLOPT_POST, 1); // 发送一个常规的Post请求
        curl_setopt($curl, CURLOPT_POSTFIELDS, $data); // Post提交的数据包
        curl_setopt($curl, CURLOPT_TIMEOUT, 120); // 设置超时限制防止死循环
        curl_setopt($curl, CURLOPT_HEADER, 0); // 显示返回的Header区域内容
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1); // 获取的信息以文件流的形式返回
        $tmpInfo = curl_exec($curl); // 执行操作
        if (curl_errno($curl)) {
            logdump('CURL Errno' . curl_error($curl)); //捕抓异常
        }
        $info = curl_getinfo($curl);
        curl_close($curl); // 关闭CURL会话
        return $tmpInfo; // 返回数据
    }

    public function zhifuCurlPostData($url, $data, &$info)
    {
        // 模拟提交数据函数
        $curl = curl_init(); // 启动一个CURL会话
        curl_setopt($curl, CURLOPT_URL, $url); // 要访问的地址
        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, 0); //
        curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 2); //
        curl_setopt($curl, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows NT 5.1; rv:31.0) Gecko/20100101 Firefox/31.0'); // 模拟用户使用的浏览器
        curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1); // 使用自动跳转
        curl_setopt($curl, CURLOPT_AUTOREFERER, 1); //
        curl_setopt($curl, CURLOPT_POST, 1); // 发送一个常规的Post请求
        curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($data)); // Post提交的数据包
        curl_setopt($curl, CURLOPT_TIMEOUT, 120); // 设置超时限制防止死循环
        curl_setopt($curl, CURLOPT_HEADER, 0); // 显示返回的Header区域内容
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1); // 获取的信息以文件流的形式返回
        $tmpInfo = curl_exec($curl); // 执行操作
        if (curl_errno($curl)) {
            logdump('CURL Errno' . curl_error($curl)); //捕抓异常
        }
        $info = curl_getinfo($curl);
        curl_close($curl); // 关闭CURL会话
        return $tmpInfo; // 返回数据
    }

    public function xiongmaoCurlPostData($url, $data)
    {
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false); // 对认证证书来源的检查
        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false); // 从证书中检查SSL加密算法是否存在
        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_HEADER, 0);
        curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                'Content-Type: application/json',
                'Content-Length: ' . strlen($data))
        );
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 300); //附加
        curl_setopt($ch, CURLOPT_TIMEOUT, 300); //附加
        curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
        $return = curl_exec($ch);
        if (false === $return) {
            die(curl_error($ch));
        }
        curl_close($ch);
        return $return;
    }

    public function getYiFuSign($signData, $merKey)
    {
        ksort($signData);
        $str = '';

        foreach ($signData as $key => $row) {
            if ($key != 'sign') {
                if ($str != '') {
                    $str = $str . '&';
                }

                $str .= $key . '=' . $row;
            }
        }

        $sign = md5($str . '&key=' . $merKey);

        return $sign;
    }

    public function getYiFuTongDaoSign($signData, $merKey)
    {
        $str = '';

        foreach ($signData as $key => $row) {
            if ($key != 'version' && $key != 'orderDate' && $key != 'notifyUrl' && $key != 'notifyUrl' && $key != 'commodityName' && $key != 'signature') {
                $str .= $row;
            }
        }

        $sign = md5($str . $merKey);

        return $sign;
    }

    public function getYiFuTongDaoBackSign($signData, $merKey)
    {
        $sign = md5($signData['merNo'] . $signData['orderNo'] . $signData['transAmt'] . $signData['respCode'] . $signData['payId'] . $signData['payTime'] . $merKey);
        return $sign;
    }

    public function shunfuCheckSign($data, $mer_key)
    {
        $signBak = $data['sign'];
        $newData = array();

        foreach ($data as $key => $value) {
            if ($key !== 'sign') {
                $newData[$key] = $value;
            }
        }

        ksort($newData);
        $sign = strtoupper(md5($this->shunfuJsonEncode($newData) . $mer_key));

        if ($sign == $signBak) {
            return true;
        } else {
            return false;
        }
    }

    public function xiongmaoCheckSign($data, $mer_key)
    {
        $stringA = 'amount=' . $data['amount'] . '&message=' . $data['message'] . '&ordersts=' . $data['ordersts'] . '&payAmount=' . $data['payAmount'] . '&payNo=' . $data['payNo'] . '&payTime=' . $data['payTime'] . '&requestId=' . $data['requestId'] . '&returnCode=' . $data['returnCode'] . '&totalFee=' . $data['totalFee'] . '&type=' . $data['type'] . '&userId=' . $data['userId'] . "&key=" . $mer_key;

        $sign = md5($stringA);
        $signBak = $data['hmac'];

        if ($sign == $signBak) {
            return true;
        } else {
            return false;
        }
    }

    public function zshCheckSign($data,$mer_key){
    	$stringA = 'instructCode='.$data['instructCode'] . '&merchantCode=' . $data['merchantCode'] . '&outOrderId=' . $data['outOrderId'] . '&totalAmount=' . $data['totalAmount'] . '&transTime=' . $data['transTime'] . '&transType=' . $data['transType'] . '&KEY=' . $mer_key;
    	$sin0 = md5($stringA);
    	$sign1 = $data['sign'];
    	$sign = strtoupper($sin0);
//     	var_dump($sign);
//     	dd($sign1);
    	if ($sign == $sign1){
    		return true;
    	}else {
    		return false;
    	}
    }

    public function renxinCheckSign($data, $mer_key)
    {
        $signSource = sprintf("partner=%s&ordernumber=%s&orderstatus=%s&paymoney=%s%s",
            $data['partner'],
            $data['ordernumber'],
            $data['orderstatus'],
            $data['paymoney'],
            $mer_key);
        $sign = md5($signSource);
        $signBak = $data['sign'];

        if ($sign == $signBak) {
            return true;
        } else {
            return false;
        }
    }

    public function gaotongCheckSign($data, $mer_key)
    {
        $sign_str = 'partner=' . $data['partner']  . '&ordernumber=' . $data['ordernumber'] . '&orderstatus=' . $data['orderstatus'] . '&paymoney='  . $data['paymoney']  . $mer_key;
        return md5($sign_str) == $data['sign'];
    }

    public function shunbaoCheckSign($data, $mer_key)
    {
        $sign = $this->shunbaoSign($data, $mer_key);
        $signBak = $data['sign'];

        if ($sign == $signBak) {
            return true;
        } else {
            return false;
        }
    }

    public function shunbaoSign($signData, $mer_key)
    {
        ksort($signData);
        $str = '';

        foreach ($signData as $key => $row) {
            if ($key == 'amount' || $key == 'orderNo' || $key == 'bank' || $key == 'transactionNo') {
                if ($str != '') {
                    $str = $str . '&';
                }

                $str .= $key . '=' . $row;
            }
        }

        $sign = strtolower(md5($str . '#' . $mer_key));

        return $sign;
    }

    function gaotongSign($array, $mer_key)
    {
        $url = '';

        foreach ($array as $key => $v) {
            if ($key !== 'hrefbackurl' and $key !== 'attach') {    #hrefbackurl 不参与签名
                $url = $url . $key . '=' . $v . '&';
            }
        }
        $url = substr($url, 0, strlen($url) - 1) . $mer_key;
        return md5($url);
    }

    function jinfukaSign($array, $private_key, $public_key)
    {
        $pi_key =  openssl_pkey_get_private($this->formatKey($private_key, "private"));
        $pu_key = openssl_pkey_get_public($public_key);
        $data = $array['encParam'];
        $sign_info = $array['sign'];
        $verify_result = openssl_verify(base64_decode($data),base64_decode($sign_info),$pu_key);

        return $verify_result == 1;
    }

    public function decrypt($data, $private_key) {
        $priKey = openssl_get_privatekey($private_key);
        $data = base64_decode($data);
        $Split = str_split($data, 128);
        $back='';

        foreach($Split as $k=>$v){
            openssl_private_decrypt($v, $decrypted, $priKey);
            $back.= $decrypted;
        }

        return $back;
    }

    function checkLuoBoSign($array, $mer_key)
    {
        $toSignString = "orderid=" . $array['orderid'] . "&opstate=" . $array['opstate'] . "&ovalue=" . $array['ovalue'] . $mer_key;
        $_sign = md5($toSignString);
        return $_sign == $array['sign'];
    }

    public function logdump()
    {
        static $count = 0;
        $argsNum = func_num_args();
        $args = func_get_args();
        $str = '';
        if (extension_loaded('xdebug')) {
            $str .= "" . date('Y-m-d H:i:s') . " BEGIN DEBUG($count) at " . xdebug_call_class() . "::" . xdebug_call_function() . "() [" . str_replace(ROOT_PATH, '', xdebug_call_file()) . " " . xdebug_call_line() . "]\n";
        } else {
            $call_stack = debug_backtrace();
            $str .= date('Y-m-d H:i:s') . " Debug (no xdebug)  " . $call_stack [0] ['file'] . ":" . $call_stack [0] ['line'] . "\n";
        }

        for ($i = 0; $i < $argsNum; ++$i) {
            if (is_string($args[$i])) {
                $str .= $args[$i] . "\n";
            } else {
                $str .= var_export($args[$i], true) . "\n";
            }
        }

        $count++;
        $str .= "**************END DEBUG($count)**************";
        $log_file = 'back.log';

        return log2file($log_file, $str);
    }

    public function log_write_file($file, $content, $flag = 0)
    {
        $pathinfo = pathinfo($file);

        if (!empty($pathinfo['dirname'])) {
            if (file_exists(LOG_PATH . $pathinfo['dirname']) === false) {
                if (@mkdir(LOG_PATH . $pathinfo['dirname'], 0777, true) === false) {
                    return false;
                }
            }
        }
        if ($flag === FILE_APPEND) {
            return file_put_contents($file, $content . "\n", LOCK_EX | FILE_APPEND);
        } else {
            return file_put_contents($file, $content . "\n", LOCK_EX);
        }
    }

    public function authcode($string, $operation = 'DECODE', $key = '', $expiry = 0)
    {
        $ckey_length = 4;

        $key = md5($key ? $key : 'US_KEY');
        $keya = md5(substr($key, 0, 16));
        $keyb = md5(substr($key, 16, 16));
        $keyc = $ckey_length ? ($operation == 'DECODE' ? substr($string, 0, $ckey_length) : substr(md5(microtime()), -$ckey_length)) : ''; // '123456789' => microtime()

        $cryptkey = $keya . md5($keya . $keyc);
        $key_length = strlen($cryptkey);

        $string = $operation == 'DECODE' ? base64_decode(substr($string, $ckey_length)) : sprintf('%010d', $expiry ? $expiry + time() : 0) . substr(md5($string . $keyb), 0, 16) . $string;
        $string_length = strlen($string);

        $result = '';
        $box = range(0, 255);

        $rndkey = array();
        for ($i = 0; $i <= 255; $i++) {
            $rndkey[$i] = ord($cryptkey[$i % $key_length]);
        }

        for ($j = $i = 0; $i < 256; $i++) {
            $j = ($j + $box[$i] + $rndkey[$i]) % 256;
            $tmp = $box[$i];
            $box[$i] = $box[$j];
            $box[$j] = $tmp;
        }

        for ($a = $j = $i = 0; $i < $string_length; $i++) {
            $a = ($a + 1) % 256;
            $j = ($j + $box[$a]) % 256;
            $tmp = $box[$a];
            $box[$a] = $box[$j];
            $box[$j] = $tmp;
            $result .= chr(ord($string[$i]) ^ ($box[($box[$a] + $box[$j]) % 256]));
        }

        if ($operation == 'DECODE') {
            if ((substr($result, 0, 10) == 0 || substr($result, 0, 10) - time() > 0) && substr($result, 10, 16) == substr(md5(substr($result, 26) . $keyb), 0, 16)) {
                return substr($result, 26);
            } else {
                return '';
            }
        } else {
            return $keyc . rtrim(base64_encode($result), '=');
        }
    }

    function toXml($array){
        $xml = '<xml>';
        forEach($array as $k=>$v){
            $xml.='<'.$k.'><![CDATA['.$v.']]></'.$k.'>';
        }
        $xml.='</xml>';
        return $xml;
    }


    public function xmlTonewArray($xml){
        $ret = array();
        if($xml instanceOf SimpleXMLElement){
            $xmlDoc = $xml;
        }
        else{
            $xmlDoc = simplexml_load_string($xml, 'SimpleXMLIterator');
            if(!$xmlDoc){      // xml字符串格式有问题
                return null;
            }
        }

        for($xmlDoc->rewind(); $xmlDoc->valid(); $xmlDoc->next()){
            $key = $xmlDoc->key();       // 获取标签名
            $val = $xmlDoc->current();   // 获取当前标签
            if($xmlDoc->hasChildren()){     // 如果有子元素
                $ret[$key] = $this->xmlToArray($val);  // 子元素变量递归处理返回
            }
            else{
                $ret[$key] = (string)$val;
            }
        }
        return $ret;
    }

    public function xmlToArray($xml, $recursive = false )
    {
        if (!$recursive){
            $array = simplexml_load_string($xml);
        } else  {
            $array = $xml;
        }

        $newArray = array ();
        $array = (array) $array ;
        foreach ($array as $key => $value ) {
            $value = (array) $value ;
            if (isset ($value [0])){
                $newArray [$key] = trim($value [0]) ;
            } else {
                $newArray [$key] = self::xmlToArray($value, true) ;
            }
        }
        return $newArray ;
    }

    function checkQiCaiSign($data, $key) {
        ksort($data);
        $sign = '';
        $sign_str = '';

        foreach ($data as $key => $value) {
            if ($key !== 'sign') {
                $sign_str = $sign_str . $key . '=' . $value . '&';
            }
        }

        $sign_str = substr($sign_str, 0, strlen($sign_str) - 1);
        openssl_sign($sign_str, $sign, $key,"RSA-SHA1");
        $sign = base64_encode($sign);
        return $sign == $data['sign'];
    }

    function getKaoLaSign($data, $private_key)
    {
        ksort($data);
        $data_str = '';

        foreach($data as $k=>$v){
            $data_str .= $k.'='.$v.'&';
        }

        $data_str = substr($data_str,0,strlen($data_str)-1);
        $res = openssl_get_privatekey($this->formatRSAKey($private_key, "private"));
        openssl_sign($data_str, $sign, $res);
        openssl_free_key($res);
        $sign = base64_encode($sign);

        return $sign;
    }

    function getWangFuTongSign($data, $private_key)
    {
        $src = 'MerId=' . $data['MerId'] . '&OrdId=' . $data['OrdId'] . '&OrdAmt=' . $data['OrdAmt'] . '&PayType=' . $data['PayType'] .'&CurCode=' . $data['CurCode'] . '&BankCode=' . $data['BankCode'] . '&ProductInfo=' . $data['ProductInfo'] . '&Remark=' . $data['Remark'] . '&ReturnURL=' . $data['ReturnURL'] . '&NotifyURL=' . $data['NotifyURL'] . '&SignType=' . $data['SignType'] . '&MerKey=' . $private_key;
        $SignInfo  = md5($src);

        return $SignInfo;
    }

    function checkKaoLaSign($data, $public_key){
        $sign = $data["sign"];
        unset($data["sign"]);
        ksort($data);
        $data_str = '';

        foreach($data as $k=>$v){
            $data_str .= $k.'='.$v.'&';
        }

        $data_str = substr($data_str,0,strlen($data_str)-1);
        $res = openssl_get_publickey($public_key);

        return (bool)openssl_verify ( $data_str, base64_decode ( $sign ), $res );
    }

    function checkWangFuTongSign($data, $key){
        $src = "MerId=" . $data['MerId'] . "&OrdId=" . $data['OrdId'] . "&OrdAmt=" . $data['OrdAmt'] . "&OrdNo=" . $data['OrdNo'] . "&ResultCode=" . $data['ResultCode'] . "&Remark=" . $data['Remark'] . "&SignType=" . $data['SignType'];
        $signLocal = md5( md5($src) . $key);

        return $signLocal == $data['SignInfo'];
    }

    public function getWanZhongYunSign($data, $key)
    {
        $src = 'body=' . $data['body'] . '&mch_create_ip=' . $data['mch_create_ip'] . '&mch_id=' . $data['mch_id'] . '&nonce_str=' . $data['nonce_str'] . '&notify_url=' . $data['notify_url'] . '&out_trade_no=' . $data['out_trade_no'] .'&service=' . $data['service'] . '&total_fee=' . $data['total_fee'] . '&key=' . $key;

        return strtoupper(md5($src));
    }

    function getReqHmacString ($pId,$pOrder,$pAmt,$pUrl,$pUid,$pPid,$pType,$merchantKey) {
        $sbOld = "";
        $sbOld = $sbOld . $pId;
        $sbOld = $sbOld . $pOrder;
        $sbOld = $sbOld . $pAmt;
        $sbOld = $sbOld . $pUrl;
        $sbOld = $sbOld . $pUid;
        $sbOld = $sbOld . $pPid;
        $sbOld = $sbOld . $pType;

        return $this->HmacMd5($sbOld, $merchantKey);
    }

    function HmacMd5 ($data, $key) {
        $key = iconv("GB2312", "UTF-8", $key);
        $data = iconv("GB2312", "UTF-8", $data);

        $b = 64;

        if (strlen($key) > $b) {
            $key = pack("H*", md5($key));
        }

        $key = str_pad($key, $b, chr(0x00));
        $ipad = str_pad('', $b, chr(0x36));
        $opad = str_pad('', $b, chr(0x5c));
        $k_ipad = $key ^ $ipad;
        $k_opad = $key ^ $opad;

        return md5($k_opad . pack("H*", md5($k_ipad . $data)));
    }

    function checkHmac($reCode,$merchantNo,$merchantOrderno,$result,$payType,$memberGood,$amount,$hmac,$merchantKey){
        if ($hmac == $this->getCallbackHmacString($reCode,$merchantNo,$merchantOrderno,$result,$payType,$memberGood,$amount,$merchantKey))
            return true;
        else
            return false;
    }

    function getCallbackHmacString($reCode,$merchantNo,$merchantOrderno,$result,$payType,$memberGoods,$amount,$merchantKey){
        $sbOld = "";
        $sbOld = $sbOld.$reCode;
        $sbOld = $sbOld.$merchantNo;
        $sbOld = $sbOld.$merchantOrderno;
        $sbOld = $sbOld.$result;
        $sbOld = $sbOld.$payType;
        $sbOld = $sbOld.$memberGoods;
        $sbOld = $sbOld.$amount;
        return $this->HmacMd5($sbOld, $merchantKey);
    }

    function getSign($data, $key)
    {
        ksort($data);
        $signString = '';

        foreach($data as $k => $v){
            if ($k != 'sign' && $k != 'payMoney') {
                $signString .= $k . '=' . $v . '&';
            }
        }

        $signString = substr($signString,0,strlen($signString)-1);
        $signString .= '&key=' . $key;
        $sign = md5($signString);
        return $sign;
    }

    function getXiangJiaoSign($data, $key)
    {
        $sign = strtoupper(md5($data['attach'] . $data['cid'] . $data['orderno'] . $data['title'] . $data['total_fee'] . $data['platform']. $key));
        return $sign;
    }

    function getYiBaoZhiFuSign($data, $key)
    {
        // RFC 2104 HMAC implementation for php.
        // Creates an md5 HMAC.
        // Eliminates the need to install mhash to compute a HMAC
        // Hacked by Lance Rushing(NOTE: Hacked means written)

        //需要配置环境支持iconv，否则中文参数不能正常处理
        $key = iconv("GBK","UTF-8",$key);
        $data = iconv("GBK","UTF-8",$data);
        $b = 64; // byte length for md5
        if (strlen($key) > $b) {
            $key = pack("H*",md5($key));
        }
        $key = str_pad($key, $b, chr(0x00));
        $ipad = str_pad('', $b, chr(0x36));
        $opad = str_pad('', $b, chr(0x5c));
        $k_ipad = $key ^ $ipad ;
        $k_opad = $key ^ $opad;

        return md5($k_opad . pack("H*",md5($k_ipad . $data)));
    }

    function gethamc_safe($data,$merchantKey,$p1_MerId)
    {
        $text="";

        while (list($key,$value) = each($data))
        {
            if( $key!="hmac" && $key!="hmac_safe" && $value !=null)
            {

                $text .=  $value."#" ;
            }

        }
        $text1 = rtrim( trim($text), '#' ); ;

        //  echo "</br>".$text1;

        return $this->HmacMd5($text1, $merchantKey);

    }

    function HmacLocal($data, $merchantKey)
    {
        $text="";
        while (list($key,$value) = each($data))
        {
            if(isset($key) && $key!="hmac" && $key!="hmac_safe")
            {

                $text .=    $value;
            }

        }

        //echo "</br>".$text;
        return $this->HmacMd5($text,$merchantKey);

    }

    function getXmlEncode($xml) {
        $ret = preg_match ("/<?xml[^>]* encoding=\"(.*)\"[^>]* ?>/i", $xml, $arr);
        if($ret) {
            return strtoupper ( $arr[1] );
        } else {
            return "";
        }
    }

    function parseXML($xmlSrc){
        if(empty($xmlSrc)){
            return false;
        }
        $array = array();
        $xml = simplexml_load_string($xmlSrc);
        $encode = $this->getXmlEncode($xmlSrc);

        if($xml && $xml->children()) {
            foreach ($xml->children() as $node){
                //有子节点
                if($node->children()) {
                    $k = $node->getName();
                    $nodeXml = $node->asXML();
                    $v = substr($nodeXml, strlen($k)+2, strlen($nodeXml)-2*strlen($k)-5);

                } else {
                    $k = $node->getName();
                    $v = (string)$node;
                }

                if($encode!="" && $encode != "UTF-8" && strpos('UTF-8', $encode) != FALSE) {
                    $k = iconv("UTF-8", $encode, $k);
                    $v = iconv("UTF-8", $encode, $v);
                }
                $array[$k] = $v;
            }
        }
        return $array;
    }

    function randomFloat($min = 0, $max = 1) {
        return number_format($min + mt_rand() / mt_getrandmax() * ($max - $min), 2, '.', '');
    }

    function getHaiOuSign($data, $key)
    {
        $para = '';

        foreach ($data as $k => $val) {
            $para .= $k . "=" . $val . "&";
        }

        $para .= "key=" . $key;
        $m1 = md5($para);
        $m2 = md5($m1 . $key);

        return $m2;
    }

    function getSanKSign($data, $key)
    {
        $signString = 'appId=' . $data['appId'] . '&timeStamp=' . $data['timeStamp'] . '&totalFee=' . $data['totalFee'] . '&key=' . $key;
        return strtoupper(md5($signString));
    }

    function qingyifuJsonEncode($input){
        if(is_string($input)){
            $text = $input;
            $text = str_replace('\\', '\\\\', $text);
            $text = str_replace(
                array("\r", "\n", "\t", "\""),
                array('\r', '\n', '\t', '\\"'),
                $text);
            $text = str_replace("\\/", "/", $text);
            return '"' . $text . '"';
        }else if(is_array($input) || is_object($input)){
            $arr = array();
            $is_obj = is_object($input) || (array_keys($input) !== range(0, count($input) - 1));
            foreach($input as $k=>$v){
                if($is_obj){
                    $arr[] = $this->qingyifuJsonEncode($k) . ':' . $this->qingyifuJsonEncode($v);
                }else{
                    $arr[] = $this->qingyifuJsonEncode($v);
                }
            }
            if($is_obj){
                $arr = str_replace("\\/", "/", $arr);
                return '{' . join(',', $arr) . '}';
            }else{
                $arr = str_replace("\\/", "/", $arr);
                return '[' . join(',', $arr) . ']';
            }
        }else{
            $input = str_replace("\\/", "/", $input);
            return $input . '';
        }
    }

    function checkQingYiFuSign($row, $signKey) {
        $r_sign = $row['sign'];
        $arr = array();

        foreach ($row as $key=>$v){
            if ($key !== 'sign'){
                $arr[$key] = $v;
            }
        }

        ksort($arr);

        $sign = strtoupper(md5($this->qingyifuJsonEncode($arr) . $signKey));
        if ($sign == $r_sign){
            return true;
        }else{
            return false;
        }

    }

    function trimAll($str)
    {
        $qian = array(" ", "　", "\t", "\n", "\r");
        $hou = array("", "", "", "", "");
        return str_replace($qian, $hou, $str);
    }

    public function formatKey($key, $type = 'public'){
        $key = str_replace("-----BEGIN PRIVATE KEY-----", "", $key);
        $key = str_replace("-----END PRIVATE KEY-----", "", $key);
        $key = str_replace("-----BEGIN PUBLIC KEY-----", "", $key);
        $key = str_replace("-----END PUBLIC KEY-----", "", $key);
        $key = $this->trimAll($key);

        if ($type == 'public') {
            $begin = "-----BEGIN PUBLIC KEY-----\n";
            $end = "-----END PUBLIC KEY-----";
        } else {
            $begin = "-----BEGIN PRIVATE KEY-----\n";
            $end = "-----END PRIVATE KEY-----";
        }

        $key = chunk_split($key, 64, "\n");

        return $begin . $key . $end;
    }

    public function formatRSAKey($key, $type = 'public'){
        $key = str_replace("-----BEGIN RSA PRIVATE KEY-----", "", $key);
        $key = str_replace("-----END RSA PRIVATE KEY-----", "", $key);
        $key = str_replace("-----BEGIN PUBLIC KEY-----", "", $key);
        $key = str_replace("-----END PUBLIC KEY-----", "", $key);
        $key = $this->trimAll($key);

        if ($type == 'public') {
            $begin = "-----BEGIN RSA PUBLIC KEY-----\n";
            $end = "-----END RSA PUBLIC KEY-----";
        } else {
            $begin = "-----BEGIN RSA PRIVATE KEY-----\n";
            $end = "-----END RSA PRIVATE KEY-----";
        }

        $key = chunk_split($key, 64, "\n");

        return $begin . $key . $end;
    }

    function checkZhiTongBaoSign($data, $private_key, $dinpaySign)
    {
        $signStr = "";

        if(isset($data['bank_seq_no']) && $data['bank_seq_no'] != ""){
            $signStr = $signStr."bank_seq_no=".$data['bank_seq_no']."&";
        }

        if(isset($data['extra_return_param']) && $data['extra_return_param'] != ""){
            $signStr = $signStr."extra_return_param=".$data['extra_return_param']."&";
        }

        $signStr = $signStr . "interface_version=".$data['interface_version']."&";
        $signStr = $signStr . "merchant_code=".$data['merchant_code']."&";
        $signStr = $signStr . "notify_id=".$data['notify_id']."&";
        $signStr = $signStr . "notify_type=".$data['notify_type']."&";
        $signStr = $signStr . "order_amount=".$data['order_amount']."&";
        $signStr = $signStr . "order_no=".$data['order_no']."&";
        $signStr = $signStr . "order_time=".$data['order_time']."&";
        $signStr = $signStr . "trade_no=".$data['trade_no']."&";
        $signStr = $signStr . "trade_status=".$data['trade_status']."&";
        $signStr = $signStr . "trade_time=".$data['trade_time'];
        $dinpay_public_key = openssl_get_publickey($private_key);
        $flag = openssl_verify($signStr, $dinpaySign, $dinpay_public_key, OPENSSL_ALGO_MD5);

        if($flag){
            return true;
        }else{
            return false;
        }
    }

    public function prepareSign($data){
        $result='';
        //1网银支付
        if($data['service']=='TRADE.B2C'){
            $result=sprintf("service=%s&version=%s&merId=%s&tradeNo=%s&tradeDate=%s&amount=%s&notifyUrl=%s&extra=%s&summary=%s&expireTime=%s&clientIp=%s&bankId=%s",$data['service'],$data['version'],$data['merId'],$data['tradeNo'],$data['tradeDate'],$data['amount'],$data['notifyUrl'],$data['extra'],$data['summary'],$data['expireTime'],$data['clientIp'],$data['bankId']);
            //2扫码支付
        }else if($data['service']=='TRADE.SCANPAY'){
            $result=sprintf("service=%s&version=%s&merId=%s&typeId=%s&tradeNo=%s&tradeDate=%s&amount=%s&notifyUrl=%s&extra=%s&summary=%s&expireTime=%s&clientIp=%s",$data['service'],$data['version'],$data['merId'],$data['typeId'],$data['tradeNo'],$data['tradeDate'],$data['amount'],$data['notifyUrl'],$data['extra'],$data['summary'],$data['expireTime'],$data['clientIp']);
            //3支付订单查询
        }else if($data['service']=='TRADE.QUERY'){
            $result=sprintf("service=%s&version=%s&merId=%s&tradeNo=%s&tradeDate=%s&amount=%s",$data['service'],$data['version'],$data['merId'],$data['tradeNo'],$data['tradeDate'],$data['amount']);
            //4退款申请
        }else if($data['service']=='TRADE.REFUND'){
            $result=sprintf("service=%s&version=%s&merId=%s&tradeNo=%s&tradeDate=%s&amount=%s&summary=%s",$data['service'],$data['version'],$data['merId'],$data['tradeNo'],$data['tradeDate'],$data['amount'],$data['summary']);
            //5支付成功通知
        }else if($data['service']=='TRADE.NOTIFY'){
            $result=sprintf("service=%s&merId=%s&tradeNo=%s&tradeDate=%s&opeNo=%s&opeDate=%s&amount=%s&status=%s&extra=%s&payTime=%s",$data['service'],$data['merId'],$data['tradeNo'],$data['tradeDate'],$data['opeNo'],$data['opeDate'],$data['amount'],$data['status'],$data['extra'],$data['payTime']);
        }
        return $result;
    }

    public function prepareVerify($result){
        preg_match('{<detail>(.*?)</detail>}',$result,$match);
        $srcData=$match[0];
        preg_match('{<sign>(.*?)</sign>}',$result,$match);
        $signature=$match[1];
        $signature=str_replace('%2B','+',$signature);
        //返回数组，成员$srcData是待验签数据，成员$signature是签名数据
        return array($srcData,$signature);
    }

    public function request($data,$url){
        $curl=curl_init();
        $curlData=array(CURLOPT_POST=>true,CURLOPT_URL=>$url,CURLOPT_RETURNTRANSFER=>true,CURLOPT_TIMEOUT=>120,CURLOPT_POSTFIELDS=>$data,CURLOPT_SSL_VERIFYPEER=>0,CURLOPT_SSL_VERIFYHOST=>0);
        curl_setopt_array($curl,$curlData);
        $result=curl_exec($curl);
        if(!$result){
            var_dump(curl_error($curl));
        }
        curl_close($curl);
        return $result;
    }

    public function prepareRequest($string,$signature) {
        return $string.'&sign='.$signature;
    }

    public function ludePrepareVerify($result){
        preg_match('{<detail>(.*?)</detail>}',$result,$match);
        $srcData=$match[0];
        preg_match('{<sign>(.*?)</sign>}',$result,$match);
        $signature=$match[1];
        $signature=str_replace('%2B','+',$signature);
        //返回数组，成员$srcData是待验签数据，成员$signature是签名数据
        return array($srcData,$signature);
    }

    public function ludeVerify($data,$signature,$key){
        $mySign=$this->ludeSign($data,$key);
        if (strcasecmp($mySign,$signature)==0){
            return true;
        }else{
            return false;
        }
    }

    public function ludeSign($data,$key) {
        $signature=md5($data.$key);
        return $signature;
    }

    public function sign_src($sign_fields, $map, $md5_key)//泽圣签名用
    {
    	// 排序-字段顺序
    	sort($sign_fields);
    	$sign_src = "";
    	foreach ($sign_fields as $field) {
    		$sign_src .= $field . "=" . $map[$field] . "&";
    	}
    	$sign_src .= "KEY=" . $md5_key;
    	//var_dump($sign_src);
    	return $sign_src;
    }

    public function sign_mac($sign_fields, $map, $md5_key)
    {//泽圣签名用
    	$sign_src = $this->sign_src($sign_fields, $map, $md5_key);
    	return md5($sign_src);
    }
    public function signCheck($sign_fields, $map,$md5_key){//验证返回签名
    	sort($sign_fields);
    	$sign_src = "";
    	foreach ($sign_fields as $field) {
    		$sign_src .= $field . "=" . $map[$field] . "&";
    	}
    	$sign_src .= "KEY=" . $md5_key;
    	return $sign_src;
    }
    public function zsCheckSign($sign_fields, $map,$md5_key){//验证返回签名
    	$sign_src = $this->signCheck($sign_fields, $map,$md5_key);
    	return md5($sign_src);
    }

    public function send_post($url, $post_data)//泽圣传输
    {
    	$postdata = http_build_query($post_data);
    	$options = array(
    			'http' => array(
    					'method' => 'POST',
    					'header' => 'Content-type:application/x-www-form-urlencoded',
    					'content' => $postdata,
    					'timeout' => 15 * 60
    			) // 超时时间（单位:s）

    	);
    	$context = stream_context_create($options);
    	$result = file_get_contents($url, false, $context);
    	return $result;
    }
    public function zxfsend_post($url, $post_data)//泽圣传输
    {
        $postdata = json_encode($post_data);
        $options = array(
            'http' => array(
                'method' => 'POST',
                'header' => 'Content-type:application/x-www-form-urlencoded',
                'content' => $postdata,
                'timeout' => 15 * 60
            ) // 超时时间（单位:s）

        );
        $context = stream_context_create($options);
        $result = file_get_contents($url, false, $context);
        return $result;
    }


}
